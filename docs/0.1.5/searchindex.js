Search.setIndex({"alltitles": {"ActiveLearningCriterion": [[84, null]], "ActiveLearningDataset": [[85, null]], "Adam": [[0, null], [161, null]], "AdamW": [[1, null], [162, null]], "Add": [[2, null], [123, null], [201, null]], "AddDict": [[3, null], [124, null]], "Additional Notes": [[16, "additional-notes"], [17, "additional-notes"], [19, "additional-notes"], [127, "additional-notes"], [128, "additional-notes"], [130, "additional-notes"]], "AdversarialStrategy": [[86, null]], "Application": [[4, null], [100, null]], "AttentionUNet": [[5, null], [125, null]], "Attributes": [[24, "attributes"], [197, "attributes"]], "BackboneResnet18": [[6, null], [177, null]], "BaseResidual": [[7, null], [109, null]], "BinaryClassifier": [[8, null], [101, null]], "Block": [[9, null], [110, null]], "Callback": [[155, null]], "Cat": [[10, null], [202, null]], "CategoricalClassifier": [[11, null], [102, null]], "Classes": [[224, "classes"], [225, "classes"], [226, "classes"], [227, "classes"], [228, "classes"], [229, "classes"], [230, "classes"], [231, "classes"], [232, "classes"], [233, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [237, "classes"], [238, "classes"]], "Classifier": [[12, null], [103, null]], "CombineLayerActivation": [[13, null], [126, null]], "Computed": [[214, null]], "Config": [[194, null]], "ConfigItem": [[195, null]], "ConfigItemList": [[196, null]], "Configurables": [[16, "configurables"], [17, "configurables"], [19, "configurables"], [30, "configurables"], [31, "configurables"], [32, "configurables"], [33, "configurables"], [47, "configurables"], [54, "configurables"], [63, "configurables"], [76, "configurables"], [80, "configurables"], [127, "configurables"], [128, "configurables"], [130, "configurables"], [140, "configurables"], [149, "configurables"], [183, "configurables"], [184, "configurables"], [185, "configurables"], [186, "configurables"], [188, "configurables"], [190, "configurables"], [192, "configurables"]], "Constant": [[87, null], [168, null]], "Constraints": [[3, "constraints"], [16, "constraints"], [17, "constraints"], [19, "constraints"], [22, "constraints"], [23, "constraints"], [28, "constraints"], [30, "constraints"], [31, "constraints"], [32, "constraints"], [33, "constraints"], [47, "constraints"], [80, "constraints"], [124, "constraints"], [127, "constraints"], [128, "constraints"], [130, "constraints"], [180, "constraints"], [181, "constraints"], [182, "constraints"], [183, "constraints"], [184, "constraints"], [185, "constraints"], [186, "constraints"], [188, "constraints"], [192, "constraints"]], "Contents:": [[221, null], [223, null]], "Conv2dBlock": [[14, null], [111, null]], "Conv2dResidual": [[15, null], [112, null]], "ConvolutionalDecoder2d": [[16, null], [127, null]], "ConvolutionalEncoder2d": [[17, null], [128, null]], "ConvolutionalEncoderDecoder2d": [[18, null], [129, null]], "ConvolutionalNeuralNetwork": [[19, null], [130, null]], "CycleGANDiscriminator": [[20, null], [178, null]], "CycleGANResnetGenerator": [[21, null], [179, null]], "DCGANDiscriminator": [[22, null], [180, null]], "DCGANGenerator": [[23, null], [181, null]], "DeeplayModule": [[24, null], [197, null]], "DetachedConfigItem": [[198, null]], "Documentation": [[222, null], [223, null]], "Entropy": [[88, null]], "Evaluation": [[16, "evaluation"], [17, "evaluation"], [19, "evaluation"], [54, "evaluation"], [76, "evaluation"], [127, "evaluation"], [128, "evaluation"], [130, "evaluation"], [140, "evaluation"], [149, "evaluation"]], "Example Usage": [[4, "example-usage"], [5, "example-usage"], [9, "example-usage"], [13, "example-usage"], [16, "example-usage"], [17, "example-usage"], [19, "example-usage"], [21, "example-usage"], [24, "example-usage"], [24, "id15"], [24, "id22"], [24, "id24"], [24, "id26"], [24, "id32"], [24, "id38"], [26, "example-usage"], [26, "id10"], [26, "id12"], [29, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [40, "example-usage"], [41, "example-usage"], [42, "example-usage"], [43, "example-usage"], [51, "example-usage"], [54, "example-usage"], [58, "example-usage"], [62, "example-usage"], [63, "example-usage"], [64, "example-usage"], [66, "example-usage"], [70, "example-usage"], [75, "example-usage"], [76, "example-usage"], [100, "example-usage"], [110, "example-usage"], [113, "example-usage"], [114, "example-usage"], [115, "example-usage"], [116, "example-usage"], [117, "example-usage"], [119, "example-usage"], [120, "example-usage"], [125, "example-usage"], [126, "example-usage"], [127, "example-usage"], [128, "example-usage"], [130, "example-usage"], [132, "example-usage"], [134, "example-usage"], [138, "example-usage"], [140, "example-usage"], [144, "example-usage"], [145, "example-usage"], [148, "example-usage"], [149, "example-usage"], [163, "example-usage"], [163, "id10"], [163, "id12"], [164, "example-usage"], [171, "example-usage"], [179, "example-usage"], [190, "example-usage"], [197, "example-usage"], [197, "id15"], [197, "id22"], [197, "id24"], [197, "id26"], [197, "id32"], [197, "id38"]], "Examples": [[2, "examples"], [16, "examples"], [17, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [28, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [36, "examples"], [47, "examples"], [54, "examples"], [76, "examples"], [80, "examples"], [123, "examples"], [127, "examples"], [128, "examples"], [130, "examples"], [140, "examples"], [149, "examples"], [164, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [192, "examples"], [197, "examples"], [215, "examples"]], "ExtendedConstructorMeta": [[25, null], [175, null]], "External": [[26, null], [163, null]], "Flatten": [[203, null]], "FractionCriterion": [[89, null]], "FromDict": [[27, null], [131, null]], "FromLogs": [[204, null]], "Functions": [[229, "functions"], [233, "functions"], [235, "functions"], [237, "functions"]], "GlobalMeanPool": [[28, null], [182, null]], "GraphConvolutionalNeuralNetwork": [[29, null], [132, null]], "GraphToEdgeMAGIK": [[30, null], [183, null]], "GraphToEdgeMPM": [[31, null], [184, null]], "GraphToGlobalMPM": [[32, null], [185, null]], "GraphToNodeMPM": [[33, null], [186, null]], "IndexedPositionalEmbedding": [[34, null], [133, null]], "JointDataset": [[90, null]], "Kaiming": [[169, null]], "L1Upper": [[91, null]], "L2Upper": [[92, null]], "Lambda": [[205, null]], "LargeMLP": [[35, null], [187, null]], "Layer": [[36, null], [164, null]], "LayerActivation": [[37, null], [113, null]], "LayerActivationNormalization": [[38, null], [114, null]], "LayerActivationNormalizationDropout": [[39, null], [115, null]], "LayerActivationNormalizationUpsample": [[40, null], [116, null]], "LayerDropoutSkipNormalization": [[41, null], [134, null]], "LayerList": [[42, null], [171, null]], "LayerSkip": [[43, null], [117, null]], "LearnableDistancewWeighting": [[44, null], [135, null]], "LeastConfidence": [[93, null]], "LinearBlock": [[45, null], [118, null]], "LodeSTAR": [[46, null], [104, null]], "LogHistory": [[121, null]], "MPM": [[47, null], [188, null]], "Margin": [[94, null]], "Max": [[48, null], [136, null]], "Mean": [[49, null], [137, null]], "MediumMLP": [[50, null], [189, null]], "MergeOp": [[206, null]], "MessagePassingNeuralNetwork": [[51, null], [138, null]], "Methods": [[24, "methods"], [63, "methods"], [190, "methods"], [197, "methods"]], "Min": [[52, null], [139, null]], "MultiLabelClassifier": [[53, null], [105, null]], "MultiLayerPerceptron": [[54, null], [140, null]], "MultiheadCrossAttention": [[207, null]], "MultiheadSelfAttention": [[55, null], [141, null], [208, null]], "Normal": [[170, null]], "Notes": [[63, "notes"], [190, "notes"]], "Optimizer": [[56, null], [165, null]], "Parallel": [[57, null], [172, null]], "Parameters": [[3, "parameters"], [4, "parameters"], [4, "id5"], [4, "id12"], [5, "parameters"], [5, "id1"], [9, "parameters"], [13, "parameters"], [16, "parameters"], [16, "id1"], [17, "parameters"], [17, "id1"], [19, "parameters"], [19, "id1"], [20, "parameters"], [21, "parameters"], [21, "id1"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [24, "id16"], [24, "id17"], [24, "id27"], [24, "id28"], [24, "id33"], [24, "id34"], [24, "id35"], [24, "id36"], [26, "parameters"], [26, "id5"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [36, "parameters"], [36, "id5"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [46, "parameters"], [46, "id1"], [46, "id2"], [46, "id7"], [46, "id8"], [46, "id9"], [47, "parameters"], [51, "parameters"], [54, "parameters"], [58, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [66, "parameters"], [68, "parameters"], [68, "id1"], [68, "id2"], [70, "parameters"], [70, "id1"], [70, "id2"], [70, "id7"], [70, "id9"], [70, "id11"], [70, "id12"], [70, "id13"], [70, "id15"], [70, "id17"], [75, "parameters"], [76, "parameters"], [80, "parameters"], [100, "parameters"], [100, "id5"], [100, "id12"], [104, "parameters"], [104, "id1"], [104, "id2"], [104, "id7"], [104, "id8"], [104, "id9"], [110, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [124, "parameters"], [125, "parameters"], [125, "id1"], [126, "parameters"], [127, "parameters"], [127, "id1"], [128, "parameters"], [128, "id1"], [130, "parameters"], [130, "id1"], [132, "parameters"], [134, "parameters"], [138, "parameters"], [140, "parameters"], [144, "parameters"], [145, "parameters"], [148, "parameters"], [149, "parameters"], [163, "parameters"], [163, "id5"], [164, "parameters"], [164, "id5"], [171, "parameters"], [178, "parameters"], [179, "parameters"], [179, "id1"], [180, "parameters"], [181, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [188, "parameters"], [190, "parameters"], [192, "parameters"], [197, "parameters"], [197, "id16"], [197, "id17"], [197, "id27"], [197, "id28"], [197, "id33"], [197, "id34"], [197, "id35"], [197, "id36"], [199, "parameters"], [199, "id1"], [199, "id3"], [215, "parameters"]], "Permute": [[209, null]], "PoolLayerActivationNormalization": [[58, null], [119, null]], "PositionalEmbedding": [[59, null], [142, null]], "Prod": [[60, null], [143, null]], "ProductCriterion": [[95, null]], "Properties": [[63, "properties"], [190, "properties"]], "RMSprop": [[61, null], [166, null]], "Raises": [[5, "raises"], [9, "raises"], [13, "raises"], [16, "raises"], [17, "raises"], [19, "raises"], [21, "raises"], [24, "raises"], [24, "id37"], [26, "raises"], [29, "raises"], [36, "raises"], [37, "raises"], [38, "raises"], [39, "raises"], [40, "raises"], [41, "raises"], [42, "raises"], [43, "raises"], [51, "raises"], [54, "raises"], [58, "raises"], [62, "raises"], [63, "raises"], [64, "raises"], [66, "raises"], [68, "raises"], [70, "raises"], [70, "id8"], [70, "id10"], [70, "id14"], [70, "id16"], [75, "raises"], [76, "raises"], [110, "raises"], [113, "raises"], [114, "raises"], [115, "raises"], [116, "raises"], [117, "raises"], [119, "raises"], [120, "raises"], [125, "raises"], [126, "raises"], [127, "raises"], [128, "raises"], [130, "raises"], [132, "raises"], [134, "raises"], [138, "raises"], [140, "raises"], [144, "raises"], [145, "raises"], [148, "raises"], [149, "raises"], [163, "raises"], [164, "raises"], [171, "raises"], [179, "raises"], [190, "raises"], [197, "raises"], [197, "id37"]], "RecurrentBlock": [[62, null], [120, null]], "RecurrentModel": [[63, null], [190, null]], "RecurrentNeuralNetwork": [[64, null], [144, null]], "ReferringLayerList": [[173, null]], "Regressor": [[65, null], [106, null]], "Reshape": [[210, null]], "ResidualMessagePassingNeuralNetwork": [[66, null], [145, null]], "Return Values": [[16, "return-values"], [17, "return-values"], [19, "return-values"], [22, "return-values"], [23, "return-values"], [54, "return-values"], [76, "return-values"], [80, "return-values"], [127, "return-values"], [128, "return-values"], [130, "return-values"], [140, "return-values"], [149, "return-values"], [180, "return-values"], [181, "return-values"], [192, "return-values"]], "Return values": [[20, "return-values"], [21, "return-values"], [178, "return-values"], [179, "return-values"]], "Returns": [[4, "returns"], [24, "returns"], [24, "id23"], [24, "id25"], [24, "id31"], [26, "returns"], [26, "id11"], [100, "returns"], [163, "returns"], [163, "id11"], [197, "returns"], [197, "id23"], [197, "id25"], [197, "id31"], [199, "returns"], [199, "id2"], [199, "id4"], [215, "returns"]], "RichProgressBar": [[122, null]], "SGD": [[67, null], [167, null]], "Selection": [[199, null]], "Sequence1dBlock": [[68, null]], "Sequential": [[69, null], [174, null]], "SequentialBlock": [[70, null]], "Shorthands": [[21, "shorthands"], [22, "shorthands"], [23, "shorthands"], [54, "shorthands"], [76, "shorthands"], [140, "shorthands"], [149, "shorthands"], [179, "shorthands"], [180, "shorthands"], [181, "shorthands"]], "SmallMLP": [[71, null], [191, null]], "Squeeze": [[211, null]], "Strategy": [[96, null]], "Sum": [[72, null], [146, null]], "SumCriterion": [[97, null]], "Trainer": [[73, null], [220, null]], "Transform": [[74, null], [147, null]], "TransformPropagateUpdate": [[75, null], [148, null]], "TransformerEncoderLayer": [[76, null], [149, null]], "UNet2d": [[77, null], [150, null]], "UncertaintyStrategy": [[98, null]], "UniformStrategy": [[99, null]], "Unsqueeze": [[212, null]], "Update": [[78, null], [151, null]], "Variable": [[215, null]], "VariationalAutoEncoder": [[79, null], [107, null]], "ViT": [[80, null], [192, null]], "View": [[213, null]], "WassersteinAutoEncoder": [[81, null], [108, null]], "WeightedSum": [[82, null], [152, null]], "XLargeMLP": [[83, null], [193, null]], "after_build": [[156, null]], "after_init": [[157, null]], "before_build": [[158, null]], "builder": [[200, null]], "deeplay documentation": [[221, null]], "deeplay.activelearning Package": [[224, null]], "deeplay.applications Package": [[225, null]], "deeplay.blocks Package": [[226, null]], "deeplay.callbacks Package": [[227, null]], "deeplay.components Package": [[228, null]], "deeplay.decorators Module": [[229, null]], "deeplay.external Package": [[230, null]], "deeplay.initializers Package": [[231, null]], "deeplay.list Module": [[232, null]], "deeplay.meta Module": [[233, null]], "deeplay.models Package": [[234, null]], "deeplay.module Module": [[235, null]], "deeplay.ops Package": [[236, null]], "deeplay.shapes Module": [[237, null]], "deeplay.trainer Module": [[238, null]], "dense_laplacian_normalization": [[153, null], [160, null]], "not_top_level": [[176, null]], "reverse_two_operation": [[216, null]], "sparse_laplacian_normalization": [[154, null], [219, null]], "stateful": [[159, null]], "two_operation": [[217, null]], "unary_operation": [[218, null]]}, "docnames": ["api/deeplay.Adam", "api/deeplay.AdamW", "api/deeplay.Add", "api/deeplay.AddDict", "api/deeplay.Application", "api/deeplay.AttentionUNet", "api/deeplay.BackboneResnet18", "api/deeplay.BaseResidual", "api/deeplay.BinaryClassifier", "api/deeplay.Block", "api/deeplay.Cat", "api/deeplay.CategoricalClassifier", "api/deeplay.Classifier", "api/deeplay.CombineLayerActivation", "api/deeplay.Conv2dBlock", "api/deeplay.Conv2dResidual", "api/deeplay.ConvolutionalDecoder2d", "api/deeplay.ConvolutionalEncoder2d", "api/deeplay.ConvolutionalEncoderDecoder2d", "api/deeplay.ConvolutionalNeuralNetwork", "api/deeplay.CycleGANDiscriminator", "api/deeplay.CycleGANResnetGenerator", "api/deeplay.DCGANDiscriminator", "api/deeplay.DCGANGenerator", "api/deeplay.DeeplayModule", "api/deeplay.ExtendedConstructorMeta", "api/deeplay.External", "api/deeplay.FromDict", "api/deeplay.GlobalMeanPool", "api/deeplay.GraphConvolutionalNeuralNetwork", "api/deeplay.GraphToEdgeMAGIK", "api/deeplay.GraphToEdgeMPM", "api/deeplay.GraphToGlobalMPM", "api/deeplay.GraphToNodeMPM", "api/deeplay.IndexedPositionalEmbedding", "api/deeplay.LargeMLP", "api/deeplay.Layer", "api/deeplay.LayerActivation", "api/deeplay.LayerActivationNormalization", "api/deeplay.LayerActivationNormalizationDropout", "api/deeplay.LayerActivationNormalizationUpsample", "api/deeplay.LayerDropoutSkipNormalization", "api/deeplay.LayerList", "api/deeplay.LayerSkip", "api/deeplay.LearnableDistancewWeighting", "api/deeplay.LinearBlock", "api/deeplay.LodeSTAR", "api/deeplay.MPM", "api/deeplay.Max", "api/deeplay.Mean", "api/deeplay.MediumMLP", "api/deeplay.MessagePassingNeuralNetwork", "api/deeplay.Min", "api/deeplay.MultiLabelClassifier", "api/deeplay.MultiLayerPerceptron", "api/deeplay.MultiheadSelfAttention", "api/deeplay.Optimizer", "api/deeplay.Parallel", "api/deeplay.PoolLayerActivationNormalization", "api/deeplay.PositionalEmbedding", "api/deeplay.Prod", "api/deeplay.RMSprop", "api/deeplay.RecurrentBlock", "api/deeplay.RecurrentModel", "api/deeplay.RecurrentNeuralNetwork", "api/deeplay.Regressor", "api/deeplay.ResidualMessagePassingNeuralNetwork", "api/deeplay.SGD", "api/deeplay.Sequence1dBlock", "api/deeplay.Sequential", "api/deeplay.SequentialBlock", "api/deeplay.SmallMLP", "api/deeplay.Sum", "api/deeplay.Trainer", "api/deeplay.Transform", "api/deeplay.TransformPropagateUpdate", "api/deeplay.TransformerEncoderLayer", "api/deeplay.UNet2d", "api/deeplay.Update", "api/deeplay.VariationalAutoEncoder", "api/deeplay.ViT", "api/deeplay.WassersteinAutoEncoder", "api/deeplay.WeightedSum", "api/deeplay.XLargeMLP", "api/deeplay.activelearning.ActiveLearningCriterion", "api/deeplay.activelearning.ActiveLearningDataset", "api/deeplay.activelearning.AdversarialStrategy", "api/deeplay.activelearning.Constant", "api/deeplay.activelearning.Entropy", "api/deeplay.activelearning.FractionCriterion", "api/deeplay.activelearning.JointDataset", "api/deeplay.activelearning.L1Upper", "api/deeplay.activelearning.L2Upper", "api/deeplay.activelearning.LeastConfidence", "api/deeplay.activelearning.Margin", "api/deeplay.activelearning.ProductCriterion", "api/deeplay.activelearning.Strategy", "api/deeplay.activelearning.SumCriterion", "api/deeplay.activelearning.UncertaintyStrategy", "api/deeplay.activelearning.UniformStrategy", "api/deeplay.applications.Application", "api/deeplay.applications.BinaryClassifier", "api/deeplay.applications.CategoricalClassifier", "api/deeplay.applications.Classifier", "api/deeplay.applications.LodeSTAR", "api/deeplay.applications.MultiLabelClassifier", "api/deeplay.applications.Regressor", "api/deeplay.applications.VariationalAutoEncoder", "api/deeplay.applications.WassersteinAutoEncoder", "api/deeplay.blocks.BaseResidual", "api/deeplay.blocks.Block", "api/deeplay.blocks.Conv2dBlock", "api/deeplay.blocks.Conv2dResidual", "api/deeplay.blocks.LayerActivation", "api/deeplay.blocks.LayerActivationNormalization", "api/deeplay.blocks.LayerActivationNormalizationDropout", "api/deeplay.blocks.LayerActivationNormalizationUpsample", "api/deeplay.blocks.LayerSkip", "api/deeplay.blocks.LinearBlock", "api/deeplay.blocks.PoolLayerActivationNormalization", "api/deeplay.blocks.RecurrentBlock", "api/deeplay.callbacks.LogHistory", "api/deeplay.callbacks.RichProgressBar", "api/deeplay.components.Add", "api/deeplay.components.AddDict", "api/deeplay.components.AttentionUNet", "api/deeplay.components.CombineLayerActivation", "api/deeplay.components.ConvolutionalDecoder2d", "api/deeplay.components.ConvolutionalEncoder2d", "api/deeplay.components.ConvolutionalEncoderDecoder2d", "api/deeplay.components.ConvolutionalNeuralNetwork", "api/deeplay.components.FromDict", "api/deeplay.components.GraphConvolutionalNeuralNetwork", "api/deeplay.components.IndexedPositionalEmbedding", "api/deeplay.components.LayerDropoutSkipNormalization", "api/deeplay.components.LearnableDistancewWeighting", "api/deeplay.components.Max", "api/deeplay.components.Mean", "api/deeplay.components.MessagePassingNeuralNetwork", "api/deeplay.components.Min", "api/deeplay.components.MultiLayerPerceptron", "api/deeplay.components.MultiheadSelfAttention", "api/deeplay.components.PositionalEmbedding", "api/deeplay.components.Prod", "api/deeplay.components.RecurrentNeuralNetwork", "api/deeplay.components.ResidualMessagePassingNeuralNetwork", "api/deeplay.components.Sum", "api/deeplay.components.Transform", "api/deeplay.components.TransformPropagateUpdate", "api/deeplay.components.TransformerEncoderLayer", "api/deeplay.components.UNet2d", "api/deeplay.components.Update", "api/deeplay.components.WeightedSum", "api/deeplay.components.dense_laplacian_normalization", "api/deeplay.components.sparse_laplacian_normalization", "api/deeplay.decorators.Callback", "api/deeplay.decorators.after_build", "api/deeplay.decorators.after_init", "api/deeplay.decorators.before_build", "api/deeplay.decorators.stateful", "api/deeplay.dense_laplacian_normalization", "api/deeplay.external.Adam", "api/deeplay.external.AdamW", "api/deeplay.external.External", "api/deeplay.external.Layer", "api/deeplay.external.Optimizer", "api/deeplay.external.RMSprop", "api/deeplay.external.SGD", "api/deeplay.initializers.Constant", "api/deeplay.initializers.Kaiming", "api/deeplay.initializers.Normal", "api/deeplay.list.LayerList", "api/deeplay.list.Parallel", "api/deeplay.list.ReferringLayerList", "api/deeplay.list.Sequential", "api/deeplay.meta.ExtendedConstructorMeta", "api/deeplay.meta.not_top_level", "api/deeplay.models.BackboneResnet18", "api/deeplay.models.CycleGANDiscriminator", "api/deeplay.models.CycleGANResnetGenerator", "api/deeplay.models.DCGANDiscriminator", "api/deeplay.models.DCGANGenerator", "api/deeplay.models.GlobalMeanPool", "api/deeplay.models.GraphToEdgeMAGIK", "api/deeplay.models.GraphToEdgeMPM", "api/deeplay.models.GraphToGlobalMPM", "api/deeplay.models.GraphToNodeMPM", "api/deeplay.models.LargeMLP", "api/deeplay.models.MPM", "api/deeplay.models.MediumMLP", "api/deeplay.models.RecurrentModel", "api/deeplay.models.SmallMLP", "api/deeplay.models.ViT", "api/deeplay.models.XLargeMLP", "api/deeplay.module.Config", "api/deeplay.module.ConfigItem", "api/deeplay.module.ConfigItemList", "api/deeplay.module.DeeplayModule", "api/deeplay.module.DetachedConfigItem", "api/deeplay.module.Selection", "api/deeplay.module.builder", "api/deeplay.ops.Add", "api/deeplay.ops.Cat", "api/deeplay.ops.Flatten", "api/deeplay.ops.FromLogs", "api/deeplay.ops.Lambda", "api/deeplay.ops.MergeOp", "api/deeplay.ops.MultiheadCrossAttention", "api/deeplay.ops.MultiheadSelfAttention", "api/deeplay.ops.Permute", "api/deeplay.ops.Reshape", "api/deeplay.ops.Squeeze", "api/deeplay.ops.Unsqueeze", "api/deeplay.ops.View", "api/deeplay.shapes.Computed", "api/deeplay.shapes.Variable", "api/deeplay.shapes.reverse_two_operation", "api/deeplay.shapes.two_operation", "api/deeplay.shapes.unary_operation", "api/deeplay.sparse_laplacian_normalization", "api/deeplay.trainer.Trainer", "index", "source/deeplay", "src/Documentation", "src/activelearning", "src/applications", "src/blocks", "src/callbacks", "src/components", "src/decorators", "src/external", "src/initializers", "src/list", "src/meta", "src/models", "src/module", "src/ops", "src/shapes", "src/trainer"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/deeplay.Adam.rst", "api/deeplay.AdamW.rst", "api/deeplay.Add.rst", "api/deeplay.AddDict.rst", "api/deeplay.Application.rst", "api/deeplay.AttentionUNet.rst", "api/deeplay.BackboneResnet18.rst", "api/deeplay.BaseResidual.rst", "api/deeplay.BinaryClassifier.rst", "api/deeplay.Block.rst", "api/deeplay.Cat.rst", "api/deeplay.CategoricalClassifier.rst", "api/deeplay.Classifier.rst", "api/deeplay.CombineLayerActivation.rst", "api/deeplay.Conv2dBlock.rst", "api/deeplay.Conv2dResidual.rst", "api/deeplay.ConvolutionalDecoder2d.rst", "api/deeplay.ConvolutionalEncoder2d.rst", "api/deeplay.ConvolutionalEncoderDecoder2d.rst", "api/deeplay.ConvolutionalNeuralNetwork.rst", "api/deeplay.CycleGANDiscriminator.rst", "api/deeplay.CycleGANResnetGenerator.rst", "api/deeplay.DCGANDiscriminator.rst", "api/deeplay.DCGANGenerator.rst", "api/deeplay.DeeplayModule.rst", "api/deeplay.ExtendedConstructorMeta.rst", "api/deeplay.External.rst", "api/deeplay.FromDict.rst", "api/deeplay.GlobalMeanPool.rst", "api/deeplay.GraphConvolutionalNeuralNetwork.rst", "api/deeplay.GraphToEdgeMAGIK.rst", "api/deeplay.GraphToEdgeMPM.rst", "api/deeplay.GraphToGlobalMPM.rst", "api/deeplay.GraphToNodeMPM.rst", "api/deeplay.IndexedPositionalEmbedding.rst", "api/deeplay.LargeMLP.rst", "api/deeplay.Layer.rst", "api/deeplay.LayerActivation.rst", "api/deeplay.LayerActivationNormalization.rst", "api/deeplay.LayerActivationNormalizationDropout.rst", "api/deeplay.LayerActivationNormalizationUpsample.rst", "api/deeplay.LayerDropoutSkipNormalization.rst", "api/deeplay.LayerList.rst", "api/deeplay.LayerSkip.rst", "api/deeplay.LearnableDistancewWeighting.rst", "api/deeplay.LinearBlock.rst", "api/deeplay.LodeSTAR.rst", "api/deeplay.MPM.rst", "api/deeplay.Max.rst", "api/deeplay.Mean.rst", "api/deeplay.MediumMLP.rst", "api/deeplay.MessagePassingNeuralNetwork.rst", "api/deeplay.Min.rst", "api/deeplay.MultiLabelClassifier.rst", "api/deeplay.MultiLayerPerceptron.rst", "api/deeplay.MultiheadSelfAttention.rst", "api/deeplay.Optimizer.rst", "api/deeplay.Parallel.rst", "api/deeplay.PoolLayerActivationNormalization.rst", "api/deeplay.PositionalEmbedding.rst", "api/deeplay.Prod.rst", "api/deeplay.RMSprop.rst", "api/deeplay.RecurrentBlock.rst", "api/deeplay.RecurrentModel.rst", "api/deeplay.RecurrentNeuralNetwork.rst", "api/deeplay.Regressor.rst", "api/deeplay.ResidualMessagePassingNeuralNetwork.rst", "api/deeplay.SGD.rst", "api/deeplay.Sequence1dBlock.rst", "api/deeplay.Sequential.rst", "api/deeplay.SequentialBlock.rst", "api/deeplay.SmallMLP.rst", "api/deeplay.Sum.rst", "api/deeplay.Trainer.rst", "api/deeplay.Transform.rst", "api/deeplay.TransformPropagateUpdate.rst", "api/deeplay.TransformerEncoderLayer.rst", "api/deeplay.UNet2d.rst", "api/deeplay.Update.rst", "api/deeplay.VariationalAutoEncoder.rst", "api/deeplay.ViT.rst", "api/deeplay.WassersteinAutoEncoder.rst", "api/deeplay.WeightedSum.rst", "api/deeplay.XLargeMLP.rst", "api/deeplay.activelearning.ActiveLearningCriterion.rst", "api/deeplay.activelearning.ActiveLearningDataset.rst", "api/deeplay.activelearning.AdversarialStrategy.rst", "api/deeplay.activelearning.Constant.rst", "api/deeplay.activelearning.Entropy.rst", "api/deeplay.activelearning.FractionCriterion.rst", "api/deeplay.activelearning.JointDataset.rst", "api/deeplay.activelearning.L1Upper.rst", "api/deeplay.activelearning.L2Upper.rst", "api/deeplay.activelearning.LeastConfidence.rst", "api/deeplay.activelearning.Margin.rst", "api/deeplay.activelearning.ProductCriterion.rst", "api/deeplay.activelearning.Strategy.rst", "api/deeplay.activelearning.SumCriterion.rst", "api/deeplay.activelearning.UncertaintyStrategy.rst", "api/deeplay.activelearning.UniformStrategy.rst", "api/deeplay.applications.Application.rst", "api/deeplay.applications.BinaryClassifier.rst", "api/deeplay.applications.CategoricalClassifier.rst", "api/deeplay.applications.Classifier.rst", "api/deeplay.applications.LodeSTAR.rst", "api/deeplay.applications.MultiLabelClassifier.rst", "api/deeplay.applications.Regressor.rst", "api/deeplay.applications.VariationalAutoEncoder.rst", "api/deeplay.applications.WassersteinAutoEncoder.rst", "api/deeplay.blocks.BaseResidual.rst", "api/deeplay.blocks.Block.rst", "api/deeplay.blocks.Conv2dBlock.rst", "api/deeplay.blocks.Conv2dResidual.rst", "api/deeplay.blocks.LayerActivation.rst", "api/deeplay.blocks.LayerActivationNormalization.rst", "api/deeplay.blocks.LayerActivationNormalizationDropout.rst", "api/deeplay.blocks.LayerActivationNormalizationUpsample.rst", "api/deeplay.blocks.LayerSkip.rst", "api/deeplay.blocks.LinearBlock.rst", "api/deeplay.blocks.PoolLayerActivationNormalization.rst", "api/deeplay.blocks.RecurrentBlock.rst", "api/deeplay.callbacks.LogHistory.rst", "api/deeplay.callbacks.RichProgressBar.rst", "api/deeplay.components.Add.rst", "api/deeplay.components.AddDict.rst", "api/deeplay.components.AttentionUNet.rst", "api/deeplay.components.CombineLayerActivation.rst", "api/deeplay.components.ConvolutionalDecoder2d.rst", "api/deeplay.components.ConvolutionalEncoder2d.rst", "api/deeplay.components.ConvolutionalEncoderDecoder2d.rst", "api/deeplay.components.ConvolutionalNeuralNetwork.rst", "api/deeplay.components.FromDict.rst", "api/deeplay.components.GraphConvolutionalNeuralNetwork.rst", "api/deeplay.components.IndexedPositionalEmbedding.rst", "api/deeplay.components.LayerDropoutSkipNormalization.rst", "api/deeplay.components.LearnableDistancewWeighting.rst", "api/deeplay.components.Max.rst", "api/deeplay.components.Mean.rst", "api/deeplay.components.MessagePassingNeuralNetwork.rst", "api/deeplay.components.Min.rst", "api/deeplay.components.MultiLayerPerceptron.rst", "api/deeplay.components.MultiheadSelfAttention.rst", "api/deeplay.components.PositionalEmbedding.rst", "api/deeplay.components.Prod.rst", "api/deeplay.components.RecurrentNeuralNetwork.rst", "api/deeplay.components.ResidualMessagePassingNeuralNetwork.rst", "api/deeplay.components.Sum.rst", "api/deeplay.components.Transform.rst", "api/deeplay.components.TransformPropagateUpdate.rst", "api/deeplay.components.TransformerEncoderLayer.rst", "api/deeplay.components.UNet2d.rst", "api/deeplay.components.Update.rst", "api/deeplay.components.WeightedSum.rst", "api/deeplay.components.dense_laplacian_normalization.rst", "api/deeplay.components.sparse_laplacian_normalization.rst", "api/deeplay.decorators.Callback.rst", "api/deeplay.decorators.after_build.rst", "api/deeplay.decorators.after_init.rst", "api/deeplay.decorators.before_build.rst", "api/deeplay.decorators.stateful.rst", "api/deeplay.dense_laplacian_normalization.rst", "api/deeplay.external.Adam.rst", "api/deeplay.external.AdamW.rst", "api/deeplay.external.External.rst", "api/deeplay.external.Layer.rst", "api/deeplay.external.Optimizer.rst", "api/deeplay.external.RMSprop.rst", "api/deeplay.external.SGD.rst", "api/deeplay.initializers.Constant.rst", "api/deeplay.initializers.Kaiming.rst", "api/deeplay.initializers.Normal.rst", "api/deeplay.list.LayerList.rst", "api/deeplay.list.Parallel.rst", "api/deeplay.list.ReferringLayerList.rst", "api/deeplay.list.Sequential.rst", "api/deeplay.meta.ExtendedConstructorMeta.rst", "api/deeplay.meta.not_top_level.rst", "api/deeplay.models.BackboneResnet18.rst", "api/deeplay.models.CycleGANDiscriminator.rst", "api/deeplay.models.CycleGANResnetGenerator.rst", "api/deeplay.models.DCGANDiscriminator.rst", "api/deeplay.models.DCGANGenerator.rst", "api/deeplay.models.GlobalMeanPool.rst", "api/deeplay.models.GraphToEdgeMAGIK.rst", "api/deeplay.models.GraphToEdgeMPM.rst", "api/deeplay.models.GraphToGlobalMPM.rst", "api/deeplay.models.GraphToNodeMPM.rst", "api/deeplay.models.LargeMLP.rst", "api/deeplay.models.MPM.rst", "api/deeplay.models.MediumMLP.rst", "api/deeplay.models.RecurrentModel.rst", "api/deeplay.models.SmallMLP.rst", "api/deeplay.models.ViT.rst", "api/deeplay.models.XLargeMLP.rst", "api/deeplay.module.Config.rst", "api/deeplay.module.ConfigItem.rst", "api/deeplay.module.ConfigItemList.rst", "api/deeplay.module.DeeplayModule.rst", "api/deeplay.module.DetachedConfigItem.rst", "api/deeplay.module.Selection.rst", "api/deeplay.module.builder.rst", "api/deeplay.ops.Add.rst", "api/deeplay.ops.Cat.rst", "api/deeplay.ops.Flatten.rst", "api/deeplay.ops.FromLogs.rst", "api/deeplay.ops.Lambda.rst", "api/deeplay.ops.MergeOp.rst", "api/deeplay.ops.MultiheadCrossAttention.rst", "api/deeplay.ops.MultiheadSelfAttention.rst", "api/deeplay.ops.Permute.rst", "api/deeplay.ops.Reshape.rst", "api/deeplay.ops.Squeeze.rst", "api/deeplay.ops.Unsqueeze.rst", "api/deeplay.ops.View.rst", "api/deeplay.shapes.Computed.rst", "api/deeplay.shapes.Variable.rst", "api/deeplay.shapes.reverse_two_operation.rst", "api/deeplay.shapes.two_operation.rst", "api/deeplay.shapes.unary_operation.rst", "api/deeplay.sparse_laplacian_normalization.rst", "api/deeplay.trainer.Trainer.rst", "index.rst", "source/deeplay.rst", "src/Documentation.rst", "src/activelearning.rst", "src/applications.rst", "src/blocks.rst", "src/callbacks.rst", "src/components.rst", "src/decorators.rst", "src/external.rst", "src/initializers.rst", "src/list.rst", "src/meta.rst", "src/models.rst", "src/module.rst", "src/ops.rst", "src/shapes.rst", "src/trainer.rst"], "indexentries": {"__call__() (deeplay.application method)": [[4, "deeplay.Application.__call__", false]], "__call__() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.__call__", false]], "__call__() (deeplay.decorators.callback method)": [[155, "deeplay.decorators.Callback.__call__", false]], "__call__() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.__call__", false]], "__call__() (deeplay.extendedconstructormeta method)": [[25, "deeplay.ExtendedConstructorMeta.__call__", false]], "__call__() (deeplay.list.referringlayerlist method)": [[173, "deeplay.list.ReferringLayerList.__call__", false]], "__call__() (deeplay.meta.extendedconstructormeta method)": [[175, "deeplay.meta.ExtendedConstructorMeta.__call__", false]], "__call__() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.__call__", false]], "__call__() (deeplay.shapes.computed method)": [[214, "deeplay.shapes.Computed.__call__", false]], "__call__() (deeplay.shapes.variable method)": [[215, "deeplay.shapes.Variable.__call__", false]], "activation (deeplay.components.convolutionalneuralnetwork attribute)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.activation", false]], "activation (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.activation", false]], "activation (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.activation", false]], "activation (deeplay.convolutionalneuralnetwork attribute)": [[19, "deeplay.ConvolutionalNeuralNetwork.activation", false]], "activation (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.activation", false]], "activation (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.activation", false]], "activation (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.activation", false]], "activation (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.activation", false]], "activelearningcriterion (class in deeplay.activelearning)": [[84, "deeplay.activelearning.ActiveLearningCriterion", false]], "activelearningdataset (class in deeplay.activelearning)": [[85, "deeplay.activelearning.ActiveLearningDataset", false]], "adam (class in deeplay)": [[0, "deeplay.Adam", false]], "adam (class in deeplay.external)": [[161, "deeplay.external.Adam", false]], "adamw (class in deeplay)": [[1, "deeplay.AdamW", false]], "adamw (class in deeplay.external)": [[162, "deeplay.external.AdamW", false]], "add (class in deeplay)": [[2, "deeplay.Add", false]], "add (class in deeplay.components)": [[123, "deeplay.components.Add", false]], "add (class in deeplay.ops)": [[201, "deeplay.ops.Add", false]], "add_detached_configuration() (deeplay.module.config method)": [[194, "deeplay.module.Config.add_detached_configuration", false]], "add_self_loops() (deeplay.components.sparse_laplacian_normalization method)": [[154, "deeplay.components.sparse_laplacian_normalization.add_self_loops", false]], "add_self_loops() (deeplay.sparse_laplacian_normalization method)": [[219, "deeplay.sparse_laplacian_normalization.add_self_loops", false]], "adddict (class in deeplay)": [[3, "deeplay.AddDict", false]], "adddict (class in deeplay.components)": [[124, "deeplay.components.AddDict", false]], "adversarialstrategy (class in deeplay.activelearning)": [[86, "deeplay.activelearning.AdversarialStrategy", false]], "after_build() (in module deeplay.decorators)": [[156, "deeplay.decorators.after_build", false]], "after_init() (in module deeplay.decorators)": [[157, "deeplay.decorators.after_init", false]], "annotate() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.annotate", false]], "annotate_random() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.annotate_random", false]], "append() (deeplay.layerlist method)": [[42, "deeplay.LayerList.append", false]], "append() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.append", false]], "append() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.append", false]], "append() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.append", false]], "append_dropout() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.append_dropout", false]], "append_dropout() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.append_dropout", false]], "append_dropout() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.append_dropout", false]], "application (class in deeplay)": [[4, "deeplay.Application", false]], "application (class in deeplay.applications)": [[100, "deeplay.applications.Application", false]], "assert_not_positional_only_and_variadic() (deeplay.external method)": [[26, "deeplay.External.assert_not_positional_only_and_variadic", false]], "assert_not_positional_only_and_variadic() (deeplay.external.external method)": [[163, "deeplay.external.External.assert_not_positional_only_and_variadic", false]], "attentionunet (class in deeplay)": [[5, "deeplay.AttentionUNet", false]], "attentionunet (class in deeplay.components)": [[125, "deeplay.components.AttentionUNet", false]], "available_styles() (deeplay.deeplaymodule class method)": [[24, "deeplay.DeeplayModule.available_styles", false]], "available_styles() (deeplay.module.deeplaymodule class method)": [[197, "deeplay.module.DeeplayModule.available_styles", false]], "backboneresnet18 (class in deeplay)": [[6, "deeplay.BackboneResnet18", false]], "backboneresnet18 (class in deeplay.models)": [[177, "deeplay.models.BackboneResnet18", false]], "baseresidual (class in deeplay)": [[7, "deeplay.BaseResidual", false]], "baseresidual (class in deeplay.blocks)": [[109, "deeplay.blocks.BaseResidual", false]], "before_build() (in module deeplay.decorators)": [[158, "deeplay.decorators.before_build", false]], "bidirectional() (deeplay.components.recurrentneuralnetwork method)": [[144, "deeplay.components.RecurrentNeuralNetwork.bidirectional", false]], "bidirectional() (deeplay.recurrentneuralnetwork method)": [[64, "deeplay.RecurrentNeuralNetwork.bidirectional", false]], "bidirectional() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.bidirectional", false]], "binaryclassifier (class in deeplay)": [[8, "deeplay.BinaryClassifier", false]], "binaryclassifier (class in deeplay.applications)": [[101, "deeplay.applications.BinaryClassifier", false]], "block (class in deeplay)": [[9, "deeplay.Block", false]], "block (class in deeplay.blocks)": [[110, "deeplay.blocks.Block", false]], "blocks (deeplay.components.convolutionalencoderdecoder2d attribute)": [[129, "deeplay.components.ConvolutionalEncoderDecoder2d.blocks", false]], "blocks (deeplay.convolutionalencoderdecoder2d attribute)": [[18, "deeplay.ConvolutionalEncoderDecoder2d.blocks", false]], "build() (deeplay.application method)": [[4, "deeplay.Application.build", false]], "build() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.build", false]], "build() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.build", false]], "build() (deeplay.external method)": [[26, "deeplay.External.build", false]], "build() (deeplay.external.external method)": [[163, "deeplay.external.External.build", false]], "build() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.build", false]], "build_arguments_from() (deeplay.external method)": [[26, "deeplay.External.build_arguments_from", false]], "build_arguments_from() (deeplay.external.external method)": [[163, "deeplay.external.External.build_arguments_from", false]], "builder() (in module deeplay.module)": [[200, "deeplay.module.builder", false]], "call_with_dummy_data() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.call_with_dummy_data", false]], "call_with_dummy_data() (deeplay.blocks.linearblock method)": [[118, "deeplay.blocks.LinearBlock.call_with_dummy_data", false]], "call_with_dummy_data() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.call_with_dummy_data", false]], "call_with_dummy_data() (deeplay.linearblock method)": [[45, "deeplay.LinearBlock.call_with_dummy_data", false]], "callback (class in deeplay.decorators)": [[155, "deeplay.decorators.Callback", false]], "calling_stateful() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.calling_stateful", false]], "calling_stateful() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.calling_stateful", false]], "cat (class in deeplay)": [[10, "deeplay.Cat", false]], "cat (class in deeplay.ops)": [[202, "deeplay.ops.Cat", false]], "categoricalclassifier (class in deeplay)": [[11, "deeplay.CategoricalClassifier", false]], "categoricalclassifier (class in deeplay.applications)": [[102, "deeplay.applications.CategoricalClassifier", false]], "channel (deeplay.components.convolutionalencoder2d attribute)": [[128, "deeplay.components.ConvolutionalEncoder2d.channel", false]], "channel (deeplay.convolutionalencoder2d attribute)": [[17, "deeplay.ConvolutionalEncoder2d.channel", false]], "classifier (class in deeplay)": [[12, "deeplay.Classifier", false]], "classifier (class in deeplay.applications)": [[103, "deeplay.applications.Classifier", false]], "clone_metrics() (deeplay.application static method)": [[4, "deeplay.Application.clone_metrics", false]], "clone_metrics() (deeplay.applications.application static method)": [[100, "deeplay.applications.Application.clone_metrics", false]], "combinelayeractivation (class in deeplay)": [[13, "deeplay.CombineLayerActivation", false]], "combinelayeractivation (class in deeplay.components)": [[126, "deeplay.components.CombineLayerActivation", false]], "compute_imq() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.compute_IMQ", false]], "compute_imq() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.compute_IMQ", false]], "compute_kernel() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.compute_kernel", false]], "compute_kernel() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.compute_kernel", false]], "compute_loss() (deeplay.application method)": [[4, "deeplay.Application.compute_loss", false]], "compute_loss() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.compute_loss", false]], "compute_loss() (deeplay.applications.binaryclassifier method)": [[101, "deeplay.applications.BinaryClassifier.compute_loss", false]], "compute_loss() (deeplay.applications.categoricalclassifier method)": [[102, "deeplay.applications.CategoricalClassifier.compute_loss", false]], "compute_loss() (deeplay.applications.classifier method)": [[103, "deeplay.applications.Classifier.compute_loss", false]], "compute_loss() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.compute_loss", false]], "compute_loss() (deeplay.applications.multilabelclassifier method)": [[105, "deeplay.applications.MultiLabelClassifier.compute_loss", false]], "compute_loss() (deeplay.applications.variationalautoencoder method)": [[107, "deeplay.applications.VariationalAutoEncoder.compute_loss", false]], "compute_loss() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.compute_loss", false]], "compute_loss() (deeplay.binaryclassifier method)": [[8, "deeplay.BinaryClassifier.compute_loss", false]], "compute_loss() (deeplay.categoricalclassifier method)": [[11, "deeplay.CategoricalClassifier.compute_loss", false]], "compute_loss() (deeplay.classifier method)": [[12, "deeplay.Classifier.compute_loss", false]], "compute_loss() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.compute_loss", false]], "compute_loss() (deeplay.multilabelclassifier method)": [[53, "deeplay.MultiLabelClassifier.compute_loss", false]], "compute_loss() (deeplay.variationalautoencoder method)": [[79, "deeplay.VariationalAutoEncoder.compute_loss", false]], "compute_loss() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.compute_loss", false]], "compute_mmd() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.compute_mmd", false]], "compute_mmd() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.compute_mmd", false]], "computed (class in deeplay.shapes)": [[214, "deeplay.shapes.Computed", false]], "computed() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.computed", false]], "computed() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.computed", false]], "config (class in deeplay.module)": [[194, "deeplay.module.Config", false]], "configitem (class in deeplay.module)": [[195, "deeplay.module.ConfigItem", false]], "configitemlist (class in deeplay.module)": [[196, "deeplay.module.ConfigItemList", false]], "configurables (deeplay.block attribute)": [[9, "deeplay.Block.configurables", false]], "configurables (deeplay.blocks.block attribute)": [[110, "deeplay.blocks.Block.configurables", false]], "configurables (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.configurables", false]], "configurables (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.configurables", false]], "configure() (deeplay.attentionunet method)": [[5, "deeplay.AttentionUNet.configure", false]], "configure() (deeplay.block method)": [[9, "deeplay.Block.configure", false]], "configure() (deeplay.blocks.block method)": [[110, "deeplay.blocks.Block.configure", false]], "configure() (deeplay.blocks.layeractivation method)": [[113, "deeplay.blocks.LayerActivation.configure", false]], "configure() (deeplay.blocks.layeractivationnormalization method)": [[114, "deeplay.blocks.LayerActivationNormalization.configure", false]], "configure() (deeplay.blocks.layeractivationnormalizationdropout method)": [[115, "deeplay.blocks.LayerActivationNormalizationDropout.configure", false]], "configure() (deeplay.blocks.layeractivationnormalizationupsample method)": [[116, "deeplay.blocks.LayerActivationNormalizationUpsample.configure", false]], "configure() (deeplay.blocks.layerskip method)": [[117, "deeplay.blocks.LayerSkip.configure", false]], "configure() (deeplay.blocks.poollayeractivationnormalization method)": [[119, "deeplay.blocks.PoolLayerActivationNormalization.configure", false]], "configure() (deeplay.blocks.recurrentblock method)": [[120, "deeplay.blocks.RecurrentBlock.configure", false]], "configure() (deeplay.combinelayeractivation method)": [[13, "deeplay.CombineLayerActivation.configure", false]], "configure() (deeplay.components.attentionunet method)": [[125, "deeplay.components.AttentionUNet.configure", false]], "configure() (deeplay.components.combinelayeractivation method)": [[126, "deeplay.components.CombineLayerActivation.configure", false]], "configure() (deeplay.components.convolutionaldecoder2d method)": [[127, "deeplay.components.ConvolutionalDecoder2d.configure", false]], "configure() (deeplay.components.convolutionalencoder2d method)": [[128, "deeplay.components.ConvolutionalEncoder2d.configure", false]], "configure() (deeplay.components.convolutionalneuralnetwork method)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.configure", false]], "configure() (deeplay.components.graphconvolutionalneuralnetwork method)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.configure", false]], "configure() (deeplay.components.layerdropoutskipnormalization method)": [[134, "deeplay.components.LayerDropoutSkipNormalization.configure", false]], "configure() (deeplay.components.messagepassingneuralnetwork method)": [[138, "deeplay.components.MessagePassingNeuralNetwork.configure", false]], "configure() (deeplay.components.multilayerperceptron method)": [[140, "deeplay.components.MultiLayerPerceptron.configure", false]], "configure() (deeplay.components.recurrentneuralnetwork method)": [[144, "deeplay.components.RecurrentNeuralNetwork.configure", false]], "configure() (deeplay.components.residualmessagepassingneuralnetwork method)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.configure", false]], "configure() (deeplay.components.transformerencoderlayer method)": [[149, "deeplay.components.TransformerEncoderLayer.configure", false]], "configure() (deeplay.components.transformpropagateupdate method)": [[148, "deeplay.components.TransformPropagateUpdate.configure", false]], "configure() (deeplay.components.unet2d method)": [[150, "deeplay.components.UNet2d.configure", false]], "configure() (deeplay.convolutionaldecoder2d method)": [[16, "deeplay.ConvolutionalDecoder2d.configure", false]], "configure() (deeplay.convolutionalencoder2d method)": [[17, "deeplay.ConvolutionalEncoder2d.configure", false]], "configure() (deeplay.convolutionalneuralnetwork method)": [[19, "deeplay.ConvolutionalNeuralNetwork.configure", false]], "configure() (deeplay.cycleganresnetgenerator method)": [[21, "deeplay.CycleGANResnetGenerator.configure", false]], "configure() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.configure", false]], "configure() (deeplay.external method)": [[26, "deeplay.External.configure", false]], "configure() (deeplay.external.external method)": [[163, "deeplay.external.External.configure", false]], "configure() (deeplay.external.layer method)": [[164, "deeplay.external.Layer.configure", false]], "configure() (deeplay.graphconvolutionalneuralnetwork method)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.configure", false]], "configure() (deeplay.layer method)": [[36, "deeplay.Layer.configure", false]], "configure() (deeplay.layeractivation method)": [[37, "deeplay.LayerActivation.configure", false]], "configure() (deeplay.layeractivationnormalization method)": [[38, "deeplay.LayerActivationNormalization.configure", false]], "configure() (deeplay.layeractivationnormalizationdropout method)": [[39, "deeplay.LayerActivationNormalizationDropout.configure", false]], "configure() (deeplay.layeractivationnormalizationupsample method)": [[40, "deeplay.LayerActivationNormalizationUpsample.configure", false]], "configure() (deeplay.layerdropoutskipnormalization method)": [[41, "deeplay.LayerDropoutSkipNormalization.configure", false]], "configure() (deeplay.layerlist method)": [[42, "deeplay.LayerList.configure", false]], "configure() (deeplay.layerskip method)": [[43, "deeplay.LayerSkip.configure", false]], "configure() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.configure", false]], "configure() (deeplay.messagepassingneuralnetwork method)": [[51, "deeplay.MessagePassingNeuralNetwork.configure", false]], "configure() (deeplay.models.cycleganresnetgenerator method)": [[179, "deeplay.models.CycleGANResnetGenerator.configure", false]], "configure() (deeplay.models.recurrentmodel method)": [[190, "deeplay.models.RecurrentModel.configure", false]], "configure() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.configure", false]], "configure() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.configure", false]], "configure() (deeplay.multilayerperceptron method)": [[54, "deeplay.MultiLayerPerceptron.configure", false]], "configure() (deeplay.poollayeractivationnormalization method)": [[58, "deeplay.PoolLayerActivationNormalization.configure", false]], "configure() (deeplay.recurrentblock method)": [[62, "deeplay.RecurrentBlock.configure", false]], "configure() (deeplay.recurrentmodel method)": [[63, "deeplay.RecurrentModel.configure", false]], "configure() (deeplay.recurrentneuralnetwork method)": [[64, "deeplay.RecurrentNeuralNetwork.configure", false]], "configure() (deeplay.residualmessagepassingneuralnetwork method)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.configure", false]], "configure() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.configure", false]], "configure() (deeplay.transformerencoderlayer method)": [[76, "deeplay.TransformerEncoderLayer.configure", false]], "configure() (deeplay.transformpropagateupdate method)": [[75, "deeplay.TransformPropagateUpdate.configure", false]], "configure() (deeplay.unet2d method)": [[77, "deeplay.UNet2d.configure", false]], "configure_optimizers() (deeplay.activelearning.adversarialstrategy method)": [[86, "deeplay.activelearning.AdversarialStrategy.configure_optimizers", false]], "configure_optimizers() (deeplay.application method)": [[4, "deeplay.Application.configure_optimizers", false]], "configure_optimizers() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.configure_optimizers", false]], "constant (class in deeplay.activelearning)": [[87, "deeplay.activelearning.Constant", false]], "constant (class in deeplay.initializers)": [[168, "deeplay.initializers.Constant", false]], "conv2dblock (class in deeplay)": [[14, "deeplay.Conv2dBlock", false]], "conv2dblock (class in deeplay.blocks)": [[111, "deeplay.blocks.Conv2dBlock", false]], "conv2dresidual (class in deeplay)": [[15, "deeplay.Conv2dResidual", false]], "conv2dresidual (class in deeplay.blocks)": [[112, "deeplay.blocks.Conv2dResidual", false]], "convolutionaldecoder2d (class in deeplay)": [[16, "deeplay.ConvolutionalDecoder2d", false]], "convolutionaldecoder2d (class in deeplay.components)": [[127, "deeplay.components.ConvolutionalDecoder2d", false]], "convolutionalencoder2d (class in deeplay)": [[17, "deeplay.ConvolutionalEncoder2d", false]], "convolutionalencoder2d (class in deeplay.components)": [[128, "deeplay.components.ConvolutionalEncoder2d", false]], "convolutionalencoderdecoder2d (class in deeplay)": [[18, "deeplay.ConvolutionalEncoderDecoder2d", false]], "convolutionalencoderdecoder2d (class in deeplay.components)": [[129, "deeplay.components.ConvolutionalEncoderDecoder2d", false]], "convolutionalneuralnetwork (class in deeplay)": [[19, "deeplay.ConvolutionalNeuralNetwork", false]], "convolutionalneuralnetwork (class in deeplay.components)": [[130, "deeplay.components.ConvolutionalNeuralNetwork", false]], "create() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.create", false]], "create() (deeplay.external method)": [[26, "deeplay.External.create", false]], "create() (deeplay.external.external method)": [[163, "deeplay.external.External.create", false]], "create() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.create", false]], "create_data() (deeplay.application method)": [[4, "deeplay.Application.create_data", false]], "create_data() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.create_data", false]], "create_optimizer_with_params() (deeplay.application method)": [[4, "deeplay.Application.create_optimizer_with_params", false]], "create_optimizer_with_params() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.create_optimizer_with_params", false]], "cyclegandiscriminator (class in deeplay)": [[20, "deeplay.CycleGANDiscriminator", false]], "cyclegandiscriminator (class in deeplay.models)": [[178, "deeplay.models.CycleGANDiscriminator", false]], "cycleganresnetgenerator (class in deeplay)": [[21, "deeplay.CycleGANResnetGenerator", false]], "cycleganresnetgenerator (class in deeplay.models)": [[179, "deeplay.models.CycleGANResnetGenerator", false]], "dcgandiscriminator (class in deeplay)": [[22, "deeplay.DCGANDiscriminator", false]], "dcgandiscriminator (class in deeplay.models)": [[180, "deeplay.models.DCGANDiscriminator", false]], "dcgangenerator (class in deeplay)": [[23, "deeplay.DCGANGenerator", false]], "dcgangenerator (class in deeplay.models)": [[181, "deeplay.models.DCGANGenerator", false]], "decode() (deeplay.applications.variationalautoencoder method)": [[107, "deeplay.applications.VariationalAutoEncoder.decode", false]], "decode() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.decode", false]], "decode() (deeplay.variationalautoencoder method)": [[79, "deeplay.VariationalAutoEncoder.decode", false]], "decode() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.decode", false]], "deeplay.activelearning": [[224, "module-deeplay.activelearning", false]], "deeplay.applications": [[225, "module-deeplay.applications", false]], "deeplay.blocks": [[226, "module-deeplay.blocks", false]], "deeplay.callbacks": [[227, "module-deeplay.callbacks", false]], "deeplay.components": [[228, "module-deeplay.components", false]], "deeplay.decorators": [[229, "module-deeplay.decorators", false]], "deeplay.external": [[230, "module-deeplay.external", false]], "deeplay.initializers": [[231, "module-deeplay.initializers", false]], "deeplay.list": [[232, "module-deeplay.list", false]], "deeplay.meta": [[233, "module-deeplay.meta", false]], "deeplay.models": [[234, "module-deeplay.models", false]], "deeplay.module": [[235, "module-deeplay.module", false]], "deeplay.ops": [[236, "module-deeplay.ops", false]], "deeplay.shapes": [[237, "module-deeplay.shapes", false]], "deeplay.trainer": [[238, "module-deeplay.trainer", false]], "deeplaymodule (class in deeplay)": [[24, "deeplay.DeeplayModule", false]], "deeplaymodule (class in deeplay.module)": [[197, "deeplay.module.DeeplayModule", false]], "degree() (deeplay.components.dense_laplacian_normalization method)": [[153, "deeplay.components.dense_laplacian_normalization.degree", false]], "degree() (deeplay.components.sparse_laplacian_normalization method)": [[154, "deeplay.components.sparse_laplacian_normalization.degree", false]], "degree() (deeplay.dense_laplacian_normalization method)": [[160, "deeplay.dense_laplacian_normalization.degree", false]], "degree() (deeplay.sparse_laplacian_normalization method)": [[219, "deeplay.sparse_laplacian_normalization.degree", false]], "dense_laplacian_normalization (class in deeplay)": [[160, "deeplay.dense_laplacian_normalization", false]], "dense_laplacian_normalization (class in deeplay.components)": [[153, "deeplay.components.dense_laplacian_normalization", false]], "detachedconfigitem (class in deeplay.module)": [[198, "deeplay.module.DetachedConfigItem", false]], "detect() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.detect", false]], "detect() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.detect", false]], "detect_single() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.detect_single", false]], "detect_single() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.detect_single", false]], "device (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.device", false]], "device (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.device", false]], "disable_history() (deeplay.trainer method)": [[73, "deeplay.Trainer.disable_history", false]], "disable_history() (deeplay.trainer.trainer method)": [[220, "deeplay.trainer.Trainer.disable_history", false]], "dropout (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.dropout", false]], "dropout (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.dropout", false]], "dropout (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.dropout", false]], "dropout (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.dropout", false]], "dropout (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.dropout", false]], "dropout (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.dropout", false]], "dtype (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.dtype", false]], "dtype (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.dtype", false]], "encode() (deeplay.applications.variationalautoencoder method)": [[107, "deeplay.applications.VariationalAutoEncoder.encode", false]], "encode() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.encode", false]], "encode() (deeplay.variationalautoencoder method)": [[79, "deeplay.VariationalAutoEncoder.encode", false]], "encode() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.encode", false]], "entropy (class in deeplay.activelearning)": [[88, "deeplay.activelearning.Entropy", false]], "expected_input_shape (deeplay.blocks.conv2dblock attribute)": [[111, "deeplay.blocks.Conv2dBlock.expected_input_shape", false]], "expected_input_shape (deeplay.conv2dblock attribute)": [[14, "deeplay.Conv2dBlock.expected_input_shape", false]], "extend() (deeplay.layerlist method)": [[42, "deeplay.LayerList.extend", false]], "extend() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.extend", false]], "extendedconstructormeta (class in deeplay)": [[25, "deeplay.ExtendedConstructorMeta", false]], "extendedconstructormeta (class in deeplay.meta)": [[175, "deeplay.meta.ExtendedConstructorMeta", false]], "external (class in deeplay)": [[26, "deeplay.External", false]], "external (class in deeplay.external)": [[163, "deeplay.external.External", false]], "extra_repr() (deeplay.components.fromdict method)": [[131, "deeplay.components.FromDict.extra_repr", false]], "extra_repr() (deeplay.components.learnabledistancewweighting method)": [[135, "deeplay.components.LearnableDistancewWeighting.extra_repr", false]], "extra_repr() (deeplay.fromdict method)": [[27, "deeplay.FromDict.extra_repr", false]], "extra_repr() (deeplay.learnabledistancewweighting method)": [[44, "deeplay.LearnableDistancewWeighting.extra_repr", false]], "feed_forward (deeplay.components.transformerencoderlayer attribute)": [[149, "deeplay.components.TransformerEncoderLayer.feed_forward", false]], "feed_forward (deeplay.transformerencoderlayer attribute)": [[76, "deeplay.TransformerEncoderLayer.feed_forward", false]], "fetch_embeddings() (deeplay.components.indexedpositionalembedding method)": [[133, "deeplay.components.IndexedPositionalEmbedding.fetch_embeddings", false]], "fetch_embeddings() (deeplay.indexedpositionalembedding method)": [[34, "deeplay.IndexedPositionalEmbedding.fetch_embeddings", false]], "filter() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.filter", false]], "find_local_maxima() (deeplay.applications.lodestar static method)": [[104, "deeplay.applications.LodeSTAR.find_local_maxima", false]], "find_local_maxima() (deeplay.lodestar static method)": [[46, "deeplay.LodeSTAR.find_local_maxima", false]], "fit() (deeplay.application method)": [[4, "deeplay.Application.fit", false]], "fit() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.fit", false]], "flatten (class in deeplay.ops)": [[203, "deeplay.ops.Flatten", false]], "forward() (deeplay.activelearning.adversarialstrategy method)": [[86, "deeplay.activelearning.AdversarialStrategy.forward", false]], "forward() (deeplay.activelearning.uncertaintystrategy method)": [[98, "deeplay.activelearning.UncertaintyStrategy.forward", false]], "forward() (deeplay.activelearning.uniformstrategy method)": [[99, "deeplay.activelearning.UniformStrategy.forward", false]], "forward() (deeplay.add method)": [[2, "deeplay.Add.forward", false]], "forward() (deeplay.adddict method)": [[3, "deeplay.AddDict.forward", false]], "forward() (deeplay.application method)": [[4, "deeplay.Application.forward", false]], "forward() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.forward", false]], "forward() (deeplay.applications.binaryclassifier method)": [[101, "deeplay.applications.BinaryClassifier.forward", false]], "forward() (deeplay.applications.categoricalclassifier method)": [[102, "deeplay.applications.CategoricalClassifier.forward", false]], "forward() (deeplay.applications.classifier method)": [[103, "deeplay.applications.Classifier.forward", false]], "forward() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.forward", false]], "forward() (deeplay.applications.multilabelclassifier method)": [[105, "deeplay.applications.MultiLabelClassifier.forward", false]], "forward() (deeplay.applications.regressor method)": [[106, "deeplay.applications.Regressor.forward", false]], "forward() (deeplay.applications.variationalautoencoder method)": [[107, "deeplay.applications.VariationalAutoEncoder.forward", false]], "forward() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.forward", false]], "forward() (deeplay.attentionunet method)": [[5, "deeplay.AttentionUNet.forward", false]], "forward() (deeplay.backboneresnet18 method)": [[6, "deeplay.BackboneResnet18.forward", false]], "forward() (deeplay.baseresidual method)": [[7, "deeplay.BaseResidual.forward", false]], "forward() (deeplay.binaryclassifier method)": [[8, "deeplay.BinaryClassifier.forward", false]], "forward() (deeplay.blocks.baseresidual method)": [[109, "deeplay.blocks.BaseResidual.forward", false]], "forward() (deeplay.blocks.layerskip method)": [[117, "deeplay.blocks.LayerSkip.forward", false]], "forward() (deeplay.cat method)": [[10, "deeplay.Cat.forward", false]], "forward() (deeplay.categoricalclassifier method)": [[11, "deeplay.CategoricalClassifier.forward", false]], "forward() (deeplay.classifier method)": [[12, "deeplay.Classifier.forward", false]], "forward() (deeplay.combinelayeractivation method)": [[13, "deeplay.CombineLayerActivation.forward", false]], "forward() (deeplay.components.add method)": [[123, "deeplay.components.Add.forward", false]], "forward() (deeplay.components.adddict method)": [[124, "deeplay.components.AddDict.forward", false]], "forward() (deeplay.components.attentionunet method)": [[125, "deeplay.components.AttentionUNet.forward", false]], "forward() (deeplay.components.combinelayeractivation method)": [[126, "deeplay.components.CombineLayerActivation.forward", false]], "forward() (deeplay.components.convolutionaldecoder2d method)": [[127, "deeplay.components.ConvolutionalDecoder2d.forward", false]], "forward() (deeplay.components.convolutionalencoder2d method)": [[128, "deeplay.components.ConvolutionalEncoder2d.forward", false]], "forward() (deeplay.components.convolutionalencoderdecoder2d method)": [[129, "deeplay.components.ConvolutionalEncoderDecoder2d.forward", false]], "forward() (deeplay.components.convolutionalneuralnetwork method)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.forward", false]], "forward() (deeplay.components.dense_laplacian_normalization method)": [[153, "deeplay.components.dense_laplacian_normalization.forward", false]], "forward() (deeplay.components.fromdict method)": [[131, "deeplay.components.FromDict.forward", false]], "forward() (deeplay.components.graphconvolutionalneuralnetwork method)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.forward", false]], "forward() (deeplay.components.indexedpositionalembedding method)": [[133, "deeplay.components.IndexedPositionalEmbedding.forward", false]], "forward() (deeplay.components.layerdropoutskipnormalization method)": [[134, "deeplay.components.LayerDropoutSkipNormalization.forward", false]], "forward() (deeplay.components.learnabledistancewweighting method)": [[135, "deeplay.components.LearnableDistancewWeighting.forward", false]], "forward() (deeplay.components.max method)": [[136, "deeplay.components.Max.forward", false]], "forward() (deeplay.components.mean method)": [[137, "deeplay.components.Mean.forward", false]], "forward() (deeplay.components.messagepassingneuralnetwork method)": [[138, "deeplay.components.MessagePassingNeuralNetwork.forward", false]], "forward() (deeplay.components.min method)": [[139, "deeplay.components.Min.forward", false]], "forward() (deeplay.components.multiheadselfattention method)": [[141, "deeplay.components.MultiheadSelfAttention.forward", false]], "forward() (deeplay.components.multilayerperceptron method)": [[140, "deeplay.components.MultiLayerPerceptron.forward", false]], "forward() (deeplay.components.positionalembedding method)": [[142, "deeplay.components.PositionalEmbedding.forward", false]], "forward() (deeplay.components.prod method)": [[143, "deeplay.components.Prod.forward", false]], "forward() (deeplay.components.recurrentneuralnetwork method)": [[144, "deeplay.components.RecurrentNeuralNetwork.forward", false]], "forward() (deeplay.components.residualmessagepassingneuralnetwork method)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.forward", false]], "forward() (deeplay.components.sparse_laplacian_normalization method)": [[154, "deeplay.components.sparse_laplacian_normalization.forward", false]], "forward() (deeplay.components.sum method)": [[146, "deeplay.components.Sum.forward", false]], "forward() (deeplay.components.transformerencoderlayer method)": [[149, "deeplay.components.TransformerEncoderLayer.forward", false]], "forward() (deeplay.components.unet2d method)": [[150, "deeplay.components.UNet2d.forward", false]], "forward() (deeplay.components.weightedsum method)": [[152, "deeplay.components.WeightedSum.forward", false]], "forward() (deeplay.convolutionaldecoder2d method)": [[16, "deeplay.ConvolutionalDecoder2d.forward", false]], "forward() (deeplay.convolutionalencoder2d method)": [[17, "deeplay.ConvolutionalEncoder2d.forward", false]], "forward() (deeplay.convolutionalencoderdecoder2d method)": [[18, "deeplay.ConvolutionalEncoderDecoder2d.forward", false]], "forward() (deeplay.convolutionalneuralnetwork method)": [[19, "deeplay.ConvolutionalNeuralNetwork.forward", false]], "forward() (deeplay.cycleganresnetgenerator method)": [[21, "deeplay.CycleGANResnetGenerator.forward", false]], "forward() (deeplay.dcgandiscriminator method)": [[22, "deeplay.DCGANDiscriminator.forward", false]], "forward() (deeplay.dcgangenerator method)": [[23, "deeplay.DCGANGenerator.forward", false]], "forward() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.forward", false]], "forward() (deeplay.dense_laplacian_normalization method)": [[160, "deeplay.dense_laplacian_normalization.forward", false]], "forward() (deeplay.external.layer method)": [[164, "deeplay.external.Layer.forward", false]], "forward() (deeplay.fromdict method)": [[27, "deeplay.FromDict.forward", false]], "forward() (deeplay.globalmeanpool method)": [[28, "deeplay.GlobalMeanPool.forward", false]], "forward() (deeplay.graphconvolutionalneuralnetwork method)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.forward", false]], "forward() (deeplay.indexedpositionalembedding method)": [[34, "deeplay.IndexedPositionalEmbedding.forward", false]], "forward() (deeplay.layer method)": [[36, "deeplay.Layer.forward", false]], "forward() (deeplay.layerdropoutskipnormalization method)": [[41, "deeplay.LayerDropoutSkipNormalization.forward", false]], "forward() (deeplay.layerskip method)": [[43, "deeplay.LayerSkip.forward", false]], "forward() (deeplay.learnabledistancewweighting method)": [[44, "deeplay.LearnableDistancewWeighting.forward", false]], "forward() (deeplay.list.parallel method)": [[172, "deeplay.list.Parallel.forward", false]], "forward() (deeplay.list.sequential method)": [[174, "deeplay.list.Sequential.forward", false]], "forward() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.forward", false]], "forward() (deeplay.max method)": [[48, "deeplay.Max.forward", false]], "forward() (deeplay.mean method)": [[49, "deeplay.Mean.forward", false]], "forward() (deeplay.messagepassingneuralnetwork method)": [[51, "deeplay.MessagePassingNeuralNetwork.forward", false]], "forward() (deeplay.min method)": [[52, "deeplay.Min.forward", false]], "forward() (deeplay.models.backboneresnet18 method)": [[177, "deeplay.models.BackboneResnet18.forward", false]], "forward() (deeplay.models.cycleganresnetgenerator method)": [[179, "deeplay.models.CycleGANResnetGenerator.forward", false]], "forward() (deeplay.models.dcgandiscriminator method)": [[180, "deeplay.models.DCGANDiscriminator.forward", false]], "forward() (deeplay.models.dcgangenerator method)": [[181, "deeplay.models.DCGANGenerator.forward", false]], "forward() (deeplay.models.globalmeanpool method)": [[182, "deeplay.models.GlobalMeanPool.forward", false]], "forward() (deeplay.models.mpm method)": [[188, "deeplay.models.MPM.forward", false]], "forward() (deeplay.models.recurrentmodel method)": [[190, "deeplay.models.RecurrentModel.forward", false]], "forward() (deeplay.models.vit method)": [[192, "deeplay.models.ViT.forward", false]], "forward() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.forward", false]], "forward() (deeplay.mpm method)": [[47, "deeplay.MPM.forward", false]], "forward() (deeplay.multiheadselfattention method)": [[55, "deeplay.MultiheadSelfAttention.forward", false]], "forward() (deeplay.multilabelclassifier method)": [[53, "deeplay.MultiLabelClassifier.forward", false]], "forward() (deeplay.multilayerperceptron method)": [[54, "deeplay.MultiLayerPerceptron.forward", false]], "forward() (deeplay.ops.add method)": [[201, "deeplay.ops.Add.forward", false]], "forward() (deeplay.ops.cat method)": [[202, "deeplay.ops.Cat.forward", false]], "forward() (deeplay.ops.flatten method)": [[203, "deeplay.ops.Flatten.forward", false]], "forward() (deeplay.ops.fromlogs method)": [[204, "deeplay.ops.FromLogs.forward", false]], "forward() (deeplay.ops.lambda method)": [[205, "deeplay.ops.Lambda.forward", false]], "forward() (deeplay.ops.mergeop method)": [[206, "deeplay.ops.MergeOp.forward", false]], "forward() (deeplay.ops.multiheadcrossattention method)": [[207, "deeplay.ops.MultiheadCrossAttention.forward", false]], "forward() (deeplay.ops.multiheadselfattention method)": [[208, "deeplay.ops.MultiheadSelfAttention.forward", false]], "forward() (deeplay.ops.permute method)": [[209, "deeplay.ops.Permute.forward", false]], "forward() (deeplay.ops.squeeze method)": [[211, "deeplay.ops.Squeeze.forward", false]], "forward() (deeplay.ops.unsqueeze method)": [[212, "deeplay.ops.Unsqueeze.forward", false]], "forward() (deeplay.ops.view method)": [[213, "deeplay.ops.View.forward", false]], "forward() (deeplay.parallel method)": [[57, "deeplay.Parallel.forward", false]], "forward() (deeplay.positionalembedding method)": [[59, "deeplay.PositionalEmbedding.forward", false]], "forward() (deeplay.prod method)": [[60, "deeplay.Prod.forward", false]], "forward() (deeplay.recurrentmodel method)": [[63, "deeplay.RecurrentModel.forward", false]], "forward() (deeplay.recurrentneuralnetwork method)": [[64, "deeplay.RecurrentNeuralNetwork.forward", false]], "forward() (deeplay.regressor method)": [[65, "deeplay.Regressor.forward", false]], "forward() (deeplay.residualmessagepassingneuralnetwork method)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.forward", false]], "forward() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.forward", false]], "forward() (deeplay.sequential method)": [[69, "deeplay.Sequential.forward", false]], "forward() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.forward", false]], "forward() (deeplay.sparse_laplacian_normalization method)": [[219, "deeplay.sparse_laplacian_normalization.forward", false]], "forward() (deeplay.sum method)": [[72, "deeplay.Sum.forward", false]], "forward() (deeplay.transformerencoderlayer method)": [[76, "deeplay.TransformerEncoderLayer.forward", false]], "forward() (deeplay.unet2d method)": [[77, "deeplay.UNet2d.forward", false]], "forward() (deeplay.variationalautoencoder method)": [[79, "deeplay.VariationalAutoEncoder.forward", false]], "forward() (deeplay.vit method)": [[80, "deeplay.ViT.forward", false]], "forward() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.forward", false]], "forward() (deeplay.weightedsum method)": [[82, "deeplay.WeightedSum.forward", false]], "fractioncriterion (class in deeplay.activelearning)": [[89, "deeplay.activelearning.FractionCriterion", false]], "fromdict (class in deeplay)": [[27, "deeplay.FromDict", false]], "fromdict (class in deeplay.components)": [[131, "deeplay.components.FromDict", false]], "fromlogs (class in deeplay.ops)": [[204, "deeplay.ops.FromLogs", false]], "get_annotated_data() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_annotated_data", false]], "get_annotated_labels() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_annotated_labels", false]], "get_annotated_samples() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_annotated_samples", false]], "get_argspec() (deeplay.deeplaymodule class method)": [[24, "deeplay.DeeplayModule.get_argspec", false]], "get_argspec() (deeplay.external method)": [[26, "deeplay.External.get_argspec", false]], "get_argspec() (deeplay.external.external method)": [[163, "deeplay.external.External.get_argspec", false]], "get_argspec() (deeplay.module.deeplaymodule class method)": [[197, "deeplay.module.DeeplayModule.get_argspec", false]], "get_default_activation() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.get_default_activation", false]], "get_default_activation() (deeplay.blocks.linearblock method)": [[118, "deeplay.blocks.LinearBlock.get_default_activation", false]], "get_default_activation() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.get_default_activation", false]], "get_default_activation() (deeplay.linearblock method)": [[45, "deeplay.LinearBlock.get_default_activation", false]], "get_default_merge() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.get_default_merge", false]], "get_default_merge() (deeplay.blocks.linearblock method)": [[118, "deeplay.blocks.LinearBlock.get_default_merge", false]], "get_default_merge() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.get_default_merge", false]], "get_default_merge() (deeplay.linearblock method)": [[45, "deeplay.LinearBlock.get_default_merge", false]], "get_default_normalization() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.get_default_normalization", false]], "get_default_normalization() (deeplay.blocks.linearblock method)": [[118, "deeplay.blocks.LinearBlock.get_default_normalization", false]], "get_default_normalization() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.get_default_normalization", false]], "get_default_normalization() (deeplay.linearblock method)": [[45, "deeplay.LinearBlock.get_default_normalization", false]], "get_default_normalization() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.get_default_normalization", false]], "get_default_shortcut() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.get_default_shortcut", false]], "get_default_shortcut() (deeplay.blocks.linearblock method)": [[118, "deeplay.blocks.LinearBlock.get_default_shortcut", false]], "get_default_shortcut() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.get_default_shortcut", false]], "get_default_shortcut() (deeplay.linearblock method)": [[45, "deeplay.LinearBlock.get_default_shortcut", false]], "get_detection_score() (deeplay.applications.lodestar class method)": [[104, "deeplay.applications.LodeSTAR.get_detection_score", false]], "get_detection_score() (deeplay.lodestar class method)": [[46, "deeplay.LodeSTAR.get_detection_score", false]], "get_forward_args() (deeplay.combinelayeractivation method)": [[13, "deeplay.CombineLayerActivation.get_forward_args", false]], "get_forward_args() (deeplay.components.combinelayeractivation method)": [[126, "deeplay.components.CombineLayerActivation.get_forward_args", false]], "get_forward_args() (deeplay.components.transform method)": [[147, "deeplay.components.Transform.get_forward_args", false]], "get_forward_args() (deeplay.components.update method)": [[151, "deeplay.components.Update.get_forward_args", false]], "get_forward_args() (deeplay.transform method)": [[74, "deeplay.Transform.get_forward_args", false]], "get_forward_args() (deeplay.update method)": [[78, "deeplay.Update.get_forward_args", false]], "get_from_user_config() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.get_from_user_config", false]], "get_from_user_config() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.get_from_user_config", false]], "get_init_args() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.get_init_args", false]], "get_init_args() (deeplay.external method)": [[26, "deeplay.External.get_init_args", false]], "get_init_args() (deeplay.external.external method)": [[163, "deeplay.external.External.get_init_args", false]], "get_init_args() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.get_init_args", false]], "get_num_annotated() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_num_annotated", false]], "get_signature() (deeplay.deeplaymodule class method)": [[24, "deeplay.DeeplayModule.get_signature", false]], "get_signature() (deeplay.external method)": [[26, "deeplay.External.get_signature", false]], "get_signature() (deeplay.external.external method)": [[163, "deeplay.external.External.get_signature", false]], "get_signature() (deeplay.module.deeplaymodule class method)": [[197, "deeplay.module.DeeplayModule.get_signature", false]], "get_subconfig() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.get_subconfig", false]], "get_subconfig() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.get_subconfig", false]], "get_unannotated_data() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_unannotated_data", false]], "get_unannotated_labels() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_unannotated_labels", false]], "get_unannotated_samples() (deeplay.activelearning.activelearningdataset method)": [[85, "deeplay.activelearning.ActiveLearningDataset.get_unannotated_samples", false]], "get_user_configuration() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.get_user_configuration", false]], "get_user_configuration() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.get_user_configuration", false]], "getitem_with_selections() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.getitem_with_selections", false]], "getitem_with_selections() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.getitem_with_selections", false]], "globalmeanpool (class in deeplay)": [[28, "deeplay.GlobalMeanPool", false]], "globalmeanpool (class in deeplay.models)": [[182, "deeplay.models.GlobalMeanPool", false]], "gradient_penalty() (deeplay.activelearning.adversarialstrategy method)": [[86, "deeplay.activelearning.AdversarialStrategy.gradient_penalty", false]], "graphconvolutionalneuralnetwork (class in deeplay)": [[29, "deeplay.GraphConvolutionalNeuralNetwork", false]], "graphconvolutionalneuralnetwork (class in deeplay.components)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork", false]], "graphtoedgemagik (class in deeplay)": [[30, "deeplay.GraphToEdgeMAGIK", false]], "graphtoedgemagik (class in deeplay.models)": [[183, "deeplay.models.GraphToEdgeMAGIK", false]], "graphtoedgempm (class in deeplay)": [[31, "deeplay.GraphToEdgeMPM", false]], "graphtoedgempm (class in deeplay.models)": [[184, "deeplay.models.GraphToEdgeMPM", false]], "graphtoglobalmpm (class in deeplay)": [[32, "deeplay.GraphToGlobalMPM", false]], "graphtoglobalmpm (class in deeplay.models)": [[185, "deeplay.models.GraphToGlobalMPM", false]], "graphtonodempm (class in deeplay)": [[33, "deeplay.GraphToNodeMPM", false]], "graphtonodempm (class in deeplay.models)": [[186, "deeplay.models.GraphToNodeMPM", false]], "gru() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.GRU", false]], "hasattr() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.hasattr", false]], "hidden (deeplay.components.convolutionalneuralnetwork attribute)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.hidden", false]], "hidden (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.hidden", false]], "hidden (deeplay.components.messagepassingneuralnetwork attribute)": [[138, "deeplay.components.MessagePassingNeuralNetwork.hidden", false]], "hidden (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.hidden", false]], "hidden (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.hidden", false]], "hidden (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.hidden", false]], "hidden (deeplay.components.transformerencoderlayer attribute)": [[149, "deeplay.components.TransformerEncoderLayer.hidden", false]], "hidden (deeplay.convolutionalneuralnetwork attribute)": [[19, "deeplay.ConvolutionalNeuralNetwork.hidden", false]], "hidden (deeplay.graphconvolutionalneuralnetwork attribute)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.hidden", false]], "hidden (deeplay.messagepassingneuralnetwork attribute)": [[51, "deeplay.MessagePassingNeuralNetwork.hidden", false]], "hidden (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.hidden", false]], "hidden (deeplay.models.vit attribute)": [[192, "deeplay.models.ViT.hidden", false]], "hidden (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.hidden", false]], "hidden (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.hidden", false]], "hidden (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.hidden", false]], "hidden (deeplay.residualmessagepassingneuralnetwork attribute)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.hidden", false]], "hidden (deeplay.transformerencoderlayer attribute)": [[76, "deeplay.TransformerEncoderLayer.hidden", false]], "hidden (deeplay.vit attribute)": [[80, "deeplay.ViT.hidden", false]], "history (deeplay.callbacks.loghistory attribute)": [[121, "deeplay.callbacks.LogHistory.history", false]], "history (deeplay.trainer attribute)": [[73, "deeplay.Trainer.history", false]], "history (deeplay.trainer.trainer attribute)": [[220, "deeplay.trainer.Trainer.history", false]], "indexedpositionalembedding (class in deeplay)": [[34, "deeplay.IndexedPositionalEmbedding", false]], "indexedpositionalembedding (class in deeplay.components)": [[133, "deeplay.components.IndexedPositionalEmbedding", false]], "initialize() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.initialize", false]], "initialize() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.initialize", false]], "initialize_tensor() (deeplay.initializers.constant method)": [[168, "deeplay.initializers.Constant.initialize_tensor", false]], "initialize_tensor() (deeplay.initializers.kaiming method)": [[169, "deeplay.initializers.Kaiming.initialize_tensor", false]], "initialize_tensor() (deeplay.initializers.normal method)": [[170, "deeplay.initializers.Normal.initialize_tensor", false]], "input (deeplay.components.convolutionalneuralnetwork attribute)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.input", false]], "input (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.input", false]], "input (deeplay.components.messagepassingneuralnetwork attribute)": [[138, "deeplay.components.MessagePassingNeuralNetwork.input", false]], "input (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.input", false]], "input (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.input", false]], "input (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.input", false]], "input (deeplay.components.transformerencoderlayer attribute)": [[149, "deeplay.components.TransformerEncoderLayer.input", false]], "input (deeplay.convolutionalneuralnetwork attribute)": [[19, "deeplay.ConvolutionalNeuralNetwork.input", false]], "input (deeplay.graphconvolutionalneuralnetwork attribute)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.input", false]], "input (deeplay.messagepassingneuralnetwork attribute)": [[51, "deeplay.MessagePassingNeuralNetwork.input", false]], "input (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.input", false]], "input (deeplay.models.vit attribute)": [[192, "deeplay.models.ViT.input", false]], "input (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.input", false]], "input (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.input", false]], "input (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.input", false]], "input (deeplay.residualmessagepassingneuralnetwork attribute)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.input", false]], "input (deeplay.transformerencoderlayer attribute)": [[76, "deeplay.TransformerEncoderLayer.input", false]], "input (deeplay.vit attribute)": [[80, "deeplay.ViT.input", false]], "insert() (deeplay.layerlist method)": [[42, "deeplay.LayerList.insert", false]], "insert() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.insert", false]], "insert() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.insert", false]], "insert() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.insert", false]], "insert_dropout() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.insert_dropout", false]], "insert_dropout() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.insert_dropout", false]], "insert_dropout() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.insert_dropout", false]], "instance_count (deeplay.decorators.callback attribute)": [[155, "deeplay.decorators.Callback.instance_count", false]], "is_constructing (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.is_constructing", false]], "is_constructing (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.is_constructing", false]], "is_recurrent (deeplay.sequence1dblock attribute)": [[68, "deeplay.Sequence1dBlock.is_recurrent", false]], "isinstance() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.isinstance", false]], "jointdataset (class in deeplay.activelearning)": [[90, "deeplay.activelearning.JointDataset", false]], "kaiming (class in deeplay.initializers)": [[169, "deeplay.initializers.Kaiming", false]], "kwargs (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.kwargs", false]], "kwargs (deeplay.external attribute)": [[26, "deeplay.External.kwargs", false]], "kwargs (deeplay.external.external attribute)": [[163, "deeplay.external.External.kwargs", false]], "kwargs (deeplay.external.optimizer attribute)": [[165, "deeplay.external.Optimizer.kwargs", false]], "kwargs (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.kwargs", false]], "kwargs (deeplay.optimizer attribute)": [[56, "deeplay.Optimizer.kwargs", false]], "l1upper (class in deeplay.activelearning)": [[91, "deeplay.activelearning.L1Upper", false]], "l2upper (class in deeplay.activelearning)": [[92, "deeplay.activelearning.L2Upper", false]], "lambda (class in deeplay.ops)": [[205, "deeplay.ops.Lambda", false]], "largemlp (class in deeplay)": [[35, "deeplay.LargeMLP", false]], "largemlp (class in deeplay.models)": [[187, "deeplay.models.LargeMLP", false]], "layer (class in deeplay)": [[36, "deeplay.Layer", false]], "layer (class in deeplay.external)": [[164, "deeplay.external.Layer", false]], "layer (deeplay.components.convolutionalneuralnetwork attribute)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.layer", false]], "layer (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.layer", false]], "layer (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.layer", false]], "layer (deeplay.convolutionalneuralnetwork attribute)": [[19, "deeplay.ConvolutionalNeuralNetwork.layer", false]], "layer (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.layer", false]], "layer (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.layer", false]], "layer (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.layer", false]], "layer (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.layer", false]], "layeractivation (class in deeplay)": [[37, "deeplay.LayerActivation", false]], "layeractivation (class in deeplay.blocks)": [[113, "deeplay.blocks.LayerActivation", false]], "layeractivationnormalization (class in deeplay)": [[38, "deeplay.LayerActivationNormalization", false]], "layeractivationnormalization (class in deeplay.blocks)": [[114, "deeplay.blocks.LayerActivationNormalization", false]], "layeractivationnormalizationdropout (class in deeplay)": [[39, "deeplay.LayerActivationNormalizationDropout", false]], "layeractivationnormalizationdropout (class in deeplay.blocks)": [[115, "deeplay.blocks.LayerActivationNormalizationDropout", false]], "layeractivationnormalizationupsample (class in deeplay)": [[40, "deeplay.LayerActivationNormalizationUpsample", false]], "layeractivationnormalizationupsample (class in deeplay.blocks)": [[116, "deeplay.blocks.LayerActivationNormalizationUpsample", false]], "layerdropoutskipnormalization (class in deeplay)": [[41, "deeplay.LayerDropoutSkipNormalization", false]], "layerdropoutskipnormalization (class in deeplay.components)": [[134, "deeplay.components.LayerDropoutSkipNormalization", false]], "layerlist (class in deeplay)": [[42, "deeplay.LayerList", false]], "layerlist (class in deeplay.list)": [[171, "deeplay.list.LayerList", false]], "layerskip (class in deeplay)": [[43, "deeplay.LayerSkip", false]], "layerskip (class in deeplay.blocks)": [[117, "deeplay.blocks.LayerSkip", false]], "learnabledistancewweighting (class in deeplay)": [[44, "deeplay.LearnableDistancewWeighting", false]], "learnabledistancewweighting (class in deeplay.components)": [[135, "deeplay.components.LearnableDistancewWeighting", false]], "leastconfidence (class in deeplay.activelearning)": [[93, "deeplay.activelearning.LeastConfidence", false]], "linearblock (class in deeplay)": [[45, "deeplay.LinearBlock", false]], "linearblock (class in deeplay.blocks)": [[118, "deeplay.blocks.LinearBlock", false]], "list_names() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.list_names", false]], "local_consistency() (deeplay.applications.lodestar static method)": [[104, "deeplay.applications.LodeSTAR.local_consistency", false]], "local_consistency() (deeplay.lodestar static method)": [[46, "deeplay.LodeSTAR.local_consistency", false]], "lodestar (class in deeplay)": [[46, "deeplay.LodeSTAR", false]], "lodestar (class in deeplay.applications)": [[104, "deeplay.applications.LodeSTAR", false]], "log() (deeplay.application method)": [[4, "deeplay.Application.log", false]], "log() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.log", false]], "log_input() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.log_input", false]], "log_input() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.log_input", false]], "log_input() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.log_input", false]], "log_metrics() (deeplay.application method)": [[4, "deeplay.Application.log_metrics", false]], "log_metrics() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.log_metrics", false]], "log_output() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.log_output", false]], "log_output() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.log_output", false]], "log_output() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.log_output", false]], "log_tensor() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.log_tensor", false]], "log_tensor() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.log_tensor", false]], "loghistory (class in deeplay.callbacks)": [[121, "deeplay.callbacks.LogHistory", false]], "logs (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.logs", false]], "logs (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.logs", false]], "lstm() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.LSTM", false]], "margin (class in deeplay.activelearning)": [[94, "deeplay.activelearning.Margin", false]], "max (class in deeplay)": [[48, "deeplay.Max", false]], "max (class in deeplay.components)": [[136, "deeplay.components.Max", false]], "mean (class in deeplay)": [[49, "deeplay.Mean", false]], "mean (class in deeplay.components)": [[137, "deeplay.components.Mean", false]], "mediummlp (class in deeplay)": [[50, "deeplay.MediumMLP", false]], "mediummlp (class in deeplay.models)": [[189, "deeplay.models.MediumMLP", false]], "mergeop (class in deeplay.ops)": [[206, "deeplay.ops.MergeOp", false]], "messagepassingneuralnetwork (class in deeplay)": [[51, "deeplay.MessagePassingNeuralNetwork", false]], "messagepassingneuralnetwork (class in deeplay.components)": [[138, "deeplay.components.MessagePassingNeuralNetwork", false]], "metrics_preprocess() (deeplay.application method)": [[4, "deeplay.Application.metrics_preprocess", false]], "metrics_preprocess() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.metrics_preprocess", false]], "metrics_preprocess() (deeplay.applications.binaryclassifier method)": [[101, "deeplay.applications.BinaryClassifier.metrics_preprocess", false]], "metrics_preprocess() (deeplay.binaryclassifier method)": [[8, "deeplay.BinaryClassifier.metrics_preprocess", false]], "min (class in deeplay)": [[52, "deeplay.Min", false]], "min (class in deeplay.components)": [[139, "deeplay.components.Min", false]], "module": [[224, "module-deeplay.activelearning", false], [225, "module-deeplay.applications", false], [226, "module-deeplay.blocks", false], [227, "module-deeplay.callbacks", false], [228, "module-deeplay.components", false], [229, "module-deeplay.decorators", false], [230, "module-deeplay.external", false], [231, "module-deeplay.initializers", false], [232, "module-deeplay.list", false], [233, "module-deeplay.meta", false], [234, "module-deeplay.models", false], [235, "module-deeplay.module", false], [236, "module-deeplay.ops", false], [237, "module-deeplay.shapes", false], [238, "module-deeplay.trainer", false]], "mpm (class in deeplay)": [[47, "deeplay.MPM", false]], "mpm (class in deeplay.models)": [[188, "deeplay.models.MPM", false]], "multihead (deeplay.components.transformerencoderlayer attribute)": [[149, "deeplay.components.TransformerEncoderLayer.multihead", false]], "multihead (deeplay.transformerencoderlayer attribute)": [[76, "deeplay.TransformerEncoderLayer.multihead", false]], "multiheadcrossattention (class in deeplay.ops)": [[207, "deeplay.ops.MultiheadCrossAttention", false]], "multiheadselfattention (class in deeplay)": [[55, "deeplay.MultiheadSelfAttention", false]], "multiheadselfattention (class in deeplay.components)": [[141, "deeplay.components.MultiheadSelfAttention", false]], "multiheadselfattention (class in deeplay.ops)": [[208, "deeplay.ops.MultiheadSelfAttention", false]], "multilabelclassifier (class in deeplay)": [[53, "deeplay.MultiLabelClassifier", false]], "multilabelclassifier (class in deeplay.applications)": [[105, "deeplay.applications.MultiLabelClassifier", false]], "multilayerperceptron (class in deeplay)": [[54, "deeplay.MultiLayerPerceptron", false]], "multilayerperceptron (class in deeplay.components)": [[140, "deeplay.components.MultiLayerPerceptron", false]], "named_children() (deeplay.application method)": [[4, "deeplay.Application.named_children", false]], "named_children() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.named_children", false]], "new() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.new", false]], "new() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.new", false]], "normal (class in deeplay.initializers)": [[170, "deeplay.initializers.Normal", false]], "normalization (deeplay.components.convolutionalencoderdecoder2d attribute)": [[129, "deeplay.components.ConvolutionalEncoderDecoder2d.normalization", false]], "normalization (deeplay.components.convolutionalneuralnetwork attribute)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.normalization", false]], "normalization (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.normalization", false]], "normalization (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.normalization", false]], "normalization (deeplay.convolutionalencoderdecoder2d attribute)": [[18, "deeplay.ConvolutionalEncoderDecoder2d.normalization", false]], "normalization (deeplay.convolutionalneuralnetwork attribute)": [[19, "deeplay.ConvolutionalNeuralNetwork.normalization", false]], "normalization (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.normalization", false]], "normalization (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.normalization", false]], "normalization (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.normalization", false]], "normalization (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.normalization", false]], "normalize() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.normalize", false]], "normalize() (deeplay.components.dense_laplacian_normalization method)": [[153, "deeplay.components.dense_laplacian_normalization.normalize", false]], "normalize() (deeplay.components.sparse_laplacian_normalization method)": [[154, "deeplay.components.sparse_laplacian_normalization.normalize", false]], "normalize() (deeplay.dense_laplacian_normalization method)": [[160, "deeplay.dense_laplacian_normalization.normalize", false]], "normalize() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.normalize", false]], "normalize() (deeplay.sparse_laplacian_normalization method)": [[219, "deeplay.sparse_laplacian_normalization.normalize", false]], "normalized() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.normalized", false]], "normalized() (deeplay.components.convolutionalneuralnetwork method)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.normalized", false]], "normalized() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.normalized", false]], "normalized() (deeplay.convolutionalneuralnetwork method)": [[19, "deeplay.ConvolutionalNeuralNetwork.normalized", false]], "not_top_level() (in module deeplay.meta)": [[176, "deeplay.meta.not_top_level", false]], "on_train_batch_end() (deeplay.callbacks.loghistory method)": [[121, "deeplay.callbacks.LogHistory.on_train_batch_end", false]], "on_train_end() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.on_train_end", false]], "on_train_end() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.on_train_end", false]], "on_train_epoch_end() (deeplay.callbacks.loghistory method)": [[121, "deeplay.callbacks.LogHistory.on_train_epoch_end", false]], "on_train_start() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.on_train_start", false]], "on_validation_epoch_end() (deeplay.callbacks.loghistory method)": [[121, "deeplay.callbacks.LogHistory.on_validation_epoch_end", false]], "optimizer (class in deeplay)": [[56, "deeplay.Optimizer", false]], "optimizer (class in deeplay.external)": [[165, "deeplay.external.Optimizer", false]], "output (deeplay.components.convolutionalneuralnetwork attribute)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.output", false]], "output (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.output", false]], "output (deeplay.components.messagepassingneuralnetwork attribute)": [[138, "deeplay.components.MessagePassingNeuralNetwork.output", false]], "output (deeplay.components.multilayerperceptron attribute)": [[140, "deeplay.components.MultiLayerPerceptron.output", false]], "output (deeplay.components.recurrentneuralnetwork attribute)": [[144, "deeplay.components.RecurrentNeuralNetwork.output", false]], "output (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.output", false]], "output (deeplay.components.transformerencoderlayer attribute)": [[149, "deeplay.components.TransformerEncoderLayer.output", false]], "output (deeplay.convolutionalneuralnetwork attribute)": [[19, "deeplay.ConvolutionalNeuralNetwork.output", false]], "output (deeplay.graphconvolutionalneuralnetwork attribute)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.output", false]], "output (deeplay.messagepassingneuralnetwork attribute)": [[51, "deeplay.MessagePassingNeuralNetwork.output", false]], "output (deeplay.models.recurrentmodel attribute)": [[190, "deeplay.models.RecurrentModel.output", false]], "output (deeplay.models.vit attribute)": [[192, "deeplay.models.ViT.output", false]], "output (deeplay.multilayerperceptron attribute)": [[54, "deeplay.MultiLayerPerceptron.output", false]], "output (deeplay.recurrentmodel attribute)": [[63, "deeplay.RecurrentModel.output", false]], "output (deeplay.recurrentneuralnetwork attribute)": [[64, "deeplay.RecurrentNeuralNetwork.output", false]], "output (deeplay.residualmessagepassingneuralnetwork attribute)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.output", false]], "output (deeplay.transformerencoderlayer attribute)": [[76, "deeplay.TransformerEncoderLayer.output", false]], "output (deeplay.vit attribute)": [[80, "deeplay.ViT.output", false]], "parallel (class in deeplay)": [[57, "deeplay.Parallel", false]], "parallel (class in deeplay.list)": [[172, "deeplay.list.Parallel", false]], "params() (deeplay.external.optimizer method)": [[165, "deeplay.external.Optimizer.params", false]], "params() (deeplay.optimizer method)": [[56, "deeplay.Optimizer.params", false]], "permute (class in deeplay.ops)": [[209, "deeplay.ops.Permute", false]], "plot() (deeplay.callbacks.loghistory method)": [[121, "deeplay.callbacks.LogHistory.plot", false]], "pool (deeplay.components.convolutionalencoderdecoder2d attribute)": [[129, "deeplay.components.ConvolutionalEncoderDecoder2d.pool", false]], "pool (deeplay.convolutionalencoderdecoder2d attribute)": [[18, "deeplay.ConvolutionalEncoderDecoder2d.pool", false]], "pooled() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.pooled", false]], "pooled() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.pooled", false]], "pooled() (deeplay.components.convolutionalneuralnetwork method)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.pooled", false]], "pooled() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.pooled", false]], "pooled() (deeplay.convolutionalneuralnetwork method)": [[19, "deeplay.ConvolutionalNeuralNetwork.pooled", false]], "pooled() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.pooled", false]], "poollayeractivationnormalization (class in deeplay)": [[58, "deeplay.PoolLayerActivationNormalization", false]], "poollayeractivationnormalization (class in deeplay.blocks)": [[119, "deeplay.blocks.PoolLayerActivationNormalization", false]], "pop() (deeplay.layerlist method)": [[42, "deeplay.LayerList.pop", false]], "pop() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.pop", false]], "positionalembedding (class in deeplay)": [[59, "deeplay.PositionalEmbedding", false]], "positionalembedding (class in deeplay.components)": [[142, "deeplay.components.PositionalEmbedding", false]], "predict() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.predict", false]], "predict() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.predict", false]], "predict_step() (deeplay.application method)": [[4, "deeplay.Application.predict_step", false]], "predict_step() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.predict_step", false]], "prefix() (deeplay.module.config method)": [[194, "deeplay.module.Config.prefix", false]], "prefix() (deeplay.module.configitem method)": [[195, "deeplay.module.ConfigItem.prefix", false]], "prefix() (deeplay.module.detachedconfigitem method)": [[198, "deeplay.module.DetachedConfigItem.prefix", false]], "prepend() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.prepend", false]], "prepend() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.prepend", false]], "prepend_dropout() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.prepend_dropout", false]], "prepend_dropout() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.prepend_dropout", false]], "prepend_dropout() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.prepend_dropout", false]], "prod (class in deeplay)": [[60, "deeplay.Prod", false]], "prod (class in deeplay.components)": [[143, "deeplay.components.Prod", false]], "productcriterion (class in deeplay.activelearning)": [[95, "deeplay.activelearning.ProductCriterion", false]], "propagate (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.propagate", false]], "propagate (deeplay.components.messagepassingneuralnetwork attribute)": [[138, "deeplay.components.MessagePassingNeuralNetwork.propagate", false]], "propagate (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.propagate", false]], "propagate (deeplay.graphconvolutionalneuralnetwork attribute)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.propagate", false]], "propagate (deeplay.messagepassingneuralnetwork attribute)": [[51, "deeplay.MessagePassingNeuralNetwork.propagate", false]], "propagate (deeplay.residualmessagepassingneuralnetwork attribute)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.propagate", false]], "query() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.query", false]], "query_and_update() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.query_and_update", false]], "query_strategy() (deeplay.activelearning.adversarialstrategy method)": [[86, "deeplay.activelearning.AdversarialStrategy.query_strategy", false]], "query_strategy() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.query_strategy", false]], "query_strategy() (deeplay.activelearning.uncertaintystrategy method)": [[98, "deeplay.activelearning.UncertaintyStrategy.query_strategy", false]], "query_strategy() (deeplay.activelearning.uniformstrategy method)": [[99, "deeplay.activelearning.UniformStrategy.query_strategy", false]], "query_train() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.query_train", false]], "query_val() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.query_val", false]], "recurrentblock (class in deeplay)": [[62, "deeplay.RecurrentBlock", false]], "recurrentblock (class in deeplay.blocks)": [[120, "deeplay.blocks.RecurrentBlock", false]], "recurrentmodel (class in deeplay)": [[63, "deeplay.RecurrentModel", false]], "recurrentmodel (class in deeplay.models)": [[190, "deeplay.models.RecurrentModel", false]], "recurrentneuralnetwork (class in deeplay)": [[64, "deeplay.RecurrentNeuralNetwork", false]], "recurrentneuralnetwork (class in deeplay.components)": [[144, "deeplay.components.RecurrentNeuralNetwork", false]], "reduce() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.reduce", false]], "reduce() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.reduce", false]], "referringlayerlist (class in deeplay.list)": [[173, "deeplay.list.ReferringLayerList", false]], "register_after_build_hook() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.register_after_build_hook", false]], "register_after_build_hook() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.register_after_build_hook", false]], "register_after_init_hook() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.register_after_init_hook", false]], "register_after_init_hook() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.register_after_init_hook", false]], "register_before_build_hook() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.register_before_build_hook", false]], "register_before_build_hook() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.register_before_build_hook", false]], "register_computed() (deeplay.external.layer class method)": [[164, "deeplay.external.Layer.register_computed", false]], "register_computed() (deeplay.layer class method)": [[36, "deeplay.Layer.register_computed", false]], "register_style() (deeplay.deeplaymodule class method)": [[24, "deeplay.DeeplayModule.register_style", false]], "register_style() (deeplay.module.deeplaymodule class method)": [[197, "deeplay.module.DeeplayModule.register_style", false]], "regressor (class in deeplay)": [[65, "deeplay.Regressor", false]], "regressor (class in deeplay.applications)": [[106, "deeplay.applications.Regressor", false]], "remove() (deeplay.layerlist method)": [[42, "deeplay.LayerList.remove", false]], "remove() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.remove", false]], "remove() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.remove", false]], "remove() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.remove", false]], "remove_derived_configurations() (deeplay.module.config method)": [[194, "deeplay.module.Config.remove_derived_configurations", false]], "remove_dropout() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.remove_dropout", false]], "remove_dropout() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.remove_dropout", false]], "reparameterize() (deeplay.applications.variationalautoencoder method)": [[107, "deeplay.applications.VariationalAutoEncoder.reparameterize", false]], "reparameterize() (deeplay.variationalautoencoder method)": [[79, "deeplay.VariationalAutoEncoder.reparameterize", false]], "replace() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.replace", false]], "replace() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.replace", false]], "replace() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.replace", false]], "reset_model() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.reset_model", false]], "reshape (class in deeplay.ops)": [[210, "deeplay.ops.Reshape", false]], "residualmessagepassingneuralnetwork (class in deeplay)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork", false]], "residualmessagepassingneuralnetwork (class in deeplay.components)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork", false]], "reverse_two_operation() (in module deeplay.shapes)": [[216, "deeplay.shapes.reverse_two_operation", false]], "richprogressbar (class in deeplay.callbacks)": [[122, "deeplay.callbacks.RichProgressBar", false]], "rmsprop (class in deeplay)": [[61, "deeplay.RMSprop", false]], "rmsprop (class in deeplay.external)": [[166, "deeplay.external.RMSprop", false]], "rnn() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.RNN", false]], "root_module (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.root_module", false]], "root_module (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.root_module", false]], "run_with_dummy_data() (deeplay.sequence1dblock method)": [[68, "deeplay.Sequence1dBlock.run_with_dummy_data", false]], "score() (deeplay.activelearning.activelearningcriterion method)": [[84, "deeplay.activelearning.ActiveLearningCriterion.score", false]], "score() (deeplay.activelearning.constant method)": [[87, "deeplay.activelearning.Constant.score", false]], "score() (deeplay.activelearning.entropy method)": [[88, "deeplay.activelearning.Entropy.score", false]], "score() (deeplay.activelearning.fractioncriterion method)": [[89, "deeplay.activelearning.FractionCriterion.score", false]], "score() (deeplay.activelearning.l1upper method)": [[91, "deeplay.activelearning.L1Upper.score", false]], "score() (deeplay.activelearning.l2upper method)": [[92, "deeplay.activelearning.L2Upper.score", false]], "score() (deeplay.activelearning.leastconfidence method)": [[93, "deeplay.activelearning.LeastConfidence.score", false]], "score() (deeplay.activelearning.margin method)": [[94, "deeplay.activelearning.Margin.score", false]], "score() (deeplay.activelearning.productcriterion method)": [[95, "deeplay.activelearning.ProductCriterion.score", false]], "score() (deeplay.activelearning.sumcriterion method)": [[97, "deeplay.activelearning.SumCriterion.score", false]], "selection (class in deeplay.module)": [[199, "deeplay.module.Selection", false]], "sequence1dblock (class in deeplay)": [[68, "deeplay.Sequence1dBlock", false]], "sequential (class in deeplay)": [[69, "deeplay.Sequential", false]], "sequential (class in deeplay.list)": [[174, "deeplay.list.Sequential", false]], "sequentialblock (class in deeplay)": [[70, "deeplay.SequentialBlock", false]], "set_dropout() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.set_dropout", false]], "set_dropout() (deeplay.sequentialblock method)": [[70, "deeplay.SequentialBlock.set_dropout", false]], "set_for_tags() (deeplay.module.config method)": [[194, "deeplay.module.Config.set_for_tags", false]], "set_input_map() (deeplay.block method)": [[9, "deeplay.Block.set_input_map", false]], "set_input_map() (deeplay.blocks.block method)": [[110, "deeplay.blocks.Block.set_input_map", false]], "set_input_map() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.set_input_map", false]], "set_input_map() (deeplay.layerlist method)": [[42, "deeplay.LayerList.set_input_map", false]], "set_input_map() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.set_input_map", false]], "set_input_map() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.set_input_map", false]], "set_input_map() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.set_input_map", false]], "set_output_map() (deeplay.block method)": [[9, "deeplay.Block.set_output_map", false]], "set_output_map() (deeplay.blocks.block method)": [[110, "deeplay.blocks.Block.set_output_map", false]], "set_output_map() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.set_output_map", false]], "set_output_map() (deeplay.layerlist method)": [[42, "deeplay.LayerList.set_output_map", false]], "set_output_map() (deeplay.list.layerlist method)": [[171, "deeplay.list.LayerList.set_output_map", false]], "set_output_map() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.set_output_map", false]], "set_output_map() (deeplay.module.selection method)": [[199, "deeplay.module.Selection.set_output_map", false]], "set_root_module() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.set_root_module", false]], "set_root_module() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.set_root_module", false]], "sgd (class in deeplay)": [[67, "deeplay.SGD", false]], "sgd (class in deeplay.external)": [[167, "deeplay.external.SGD", false]], "smallmlp (class in deeplay)": [[71, "deeplay.SmallMLP", false]], "smallmlp (class in deeplay.models)": [[191, "deeplay.models.SmallMLP", false]], "source_depth (deeplay.module.configitem attribute)": [[195, "deeplay.module.ConfigItem.source_depth", false]], "source_depth (deeplay.module.detachedconfigitem attribute)": [[198, "deeplay.module.DetachedConfigItem.source_depth", false]], "sparse_laplacian_normalization (class in deeplay)": [[219, "deeplay.sparse_laplacian_normalization", false]], "sparse_laplacian_normalization (class in deeplay.components)": [[154, "deeplay.components.sparse_laplacian_normalization", false]], "squeeze (class in deeplay.ops)": [[211, "deeplay.ops.Squeeze", false]], "stateful() (in module deeplay.decorators)": [[159, "deeplay.decorators.stateful", false]], "step_history (deeplay.callbacks.loghistory attribute)": [[121, "deeplay.callbacks.LogHistory.step_history", false]], "strategy (class in deeplay.activelearning)": [[96, "deeplay.activelearning.Strategy", false]], "strided() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.strided", false]], "strided() (deeplay.components.convolutionalencoder2d method)": [[128, "deeplay.components.ConvolutionalEncoder2d.strided", false]], "strided() (deeplay.components.convolutionalneuralnetwork method)": [[130, "deeplay.components.ConvolutionalNeuralNetwork.strided", false]], "strided() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.strided", false]], "strided() (deeplay.convolutionalencoder2d method)": [[17, "deeplay.ConvolutionalEncoder2d.strided", false]], "strided() (deeplay.convolutionalneuralnetwork method)": [[19, "deeplay.ConvolutionalNeuralNetwork.strided", false]], "style() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.style", false]], "style() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.style", false]], "styled() (deeplay.deeplaymodule method)": [[24, "deeplay.DeeplayModule.styled", false]], "styled() (deeplay.module.deeplaymodule method)": [[197, "deeplay.module.DeeplayModule.styled", false]], "sum (class in deeplay)": [[72, "deeplay.Sum", false]], "sum (class in deeplay.components)": [[146, "deeplay.components.Sum", false]], "sum (deeplay.components.mean attribute)": [[137, "deeplay.components.Mean.Sum", false]], "sum (deeplay.mean attribute)": [[49, "deeplay.Mean.Sum", false]], "sumcriterion (class in deeplay.activelearning)": [[97, "deeplay.activelearning.SumCriterion", false]], "tags (deeplay.deeplaymodule attribute)": [[24, "deeplay.DeeplayModule.tags", false]], "tags (deeplay.module.deeplaymodule attribute)": [[197, "deeplay.module.DeeplayModule.tags", false]], "take() (deeplay.module.config method)": [[194, "deeplay.module.Config.take", false]], "test() (deeplay.application method)": [[4, "deeplay.Application.test", false]], "test() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.test", false]], "test_dataloader() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.test_dataloader", false]], "test_preprocess() (deeplay.application method)": [[4, "deeplay.Application.test_preprocess", false]], "test_preprocess() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.test_preprocess", false]], "test_preprocess() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.test_preprocess", false]], "test_preprocess() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.test_preprocess", false]], "test_step() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.test_step", false]], "test_step() (deeplay.application method)": [[4, "deeplay.Application.test_step", false]], "test_step() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.test_step", false]], "train_dataloader() (deeplay.activelearning.adversarialstrategy method)": [[86, "deeplay.activelearning.AdversarialStrategy.train_dataloader", false]], "train_dataloader() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.train_dataloader", false]], "train_preprocess() (deeplay.application method)": [[4, "deeplay.Application.train_preprocess", false]], "train_preprocess() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.train_preprocess", false]], "train_preprocess() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.train_preprocess", false]], "train_preprocess() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.train_preprocess", false]], "trainer (class in deeplay)": [[73, "deeplay.Trainer", false]], "trainer (class in deeplay.trainer)": [[220, "deeplay.trainer.Trainer", false]], "trainer (deeplay.application attribute)": [[4, "deeplay.Application.trainer", false]], "trainer (deeplay.applications.application attribute)": [[100, "deeplay.applications.Application.trainer", false]], "training_step() (deeplay.activelearning.adversarialstrategy method)": [[86, "deeplay.activelearning.AdversarialStrategy.training_step", false]], "training_step() (deeplay.activelearning.uncertaintystrategy method)": [[98, "deeplay.activelearning.UncertaintyStrategy.training_step", false]], "training_step() (deeplay.activelearning.uniformstrategy method)": [[99, "deeplay.activelearning.UniformStrategy.training_step", false]], "training_step() (deeplay.application method)": [[4, "deeplay.Application.training_step", false]], "training_step() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.training_step", false]], "training_step() (deeplay.applications.variationalautoencoder method)": [[107, "deeplay.applications.VariationalAutoEncoder.training_step", false]], "training_step() (deeplay.applications.wassersteinautoencoder method)": [[108, "deeplay.applications.WassersteinAutoEncoder.training_step", false]], "training_step() (deeplay.variationalautoencoder method)": [[79, "deeplay.VariationalAutoEncoder.training_step", false]], "training_step() (deeplay.wassersteinautoencoder method)": [[81, "deeplay.WassersteinAutoEncoder.training_step", false]], "transform (class in deeplay)": [[74, "deeplay.Transform", false]], "transform (class in deeplay.components)": [[147, "deeplay.components.Transform", false]], "transform (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.transform", false]], "transform (deeplay.components.messagepassingneuralnetwork attribute)": [[138, "deeplay.components.MessagePassingNeuralNetwork.transform", false]], "transform (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.transform", false]], "transform (deeplay.graphconvolutionalneuralnetwork attribute)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.transform", false]], "transform (deeplay.messagepassingneuralnetwork attribute)": [[51, "deeplay.MessagePassingNeuralNetwork.transform", false]], "transform (deeplay.residualmessagepassingneuralnetwork attribute)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.transform", false]], "transform_data() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.transform_data", false]], "transform_data() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.transform_data", false]], "transformerencoderlayer (class in deeplay)": [[76, "deeplay.TransformerEncoderLayer", false]], "transformerencoderlayer (class in deeplay.components)": [[149, "deeplay.components.TransformerEncoderLayer", false]], "transformpropagateupdate (class in deeplay)": [[75, "deeplay.TransformPropagateUpdate", false]], "transformpropagateupdate (class in deeplay.components)": [[148, "deeplay.components.TransformPropagateUpdate", false]], "transposed() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.transposed", false]], "transposed() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.transposed", false]], "try_attach_detached_configurations() (deeplay.module.config method)": [[194, "deeplay.module.Config.try_attach_detached_configurations", false]], "two_operation() (in module deeplay.shapes)": [[217, "deeplay.shapes.two_operation", false]], "unary_operation() (in module deeplay.shapes)": [[218, "deeplay.shapes.unary_operation", false]], "uncertaintystrategy (class in deeplay.activelearning)": [[98, "deeplay.activelearning.UncertaintyStrategy", false]], "unet2d (class in deeplay)": [[77, "deeplay.UNet2d", false]], "unet2d (class in deeplay.components)": [[150, "deeplay.components.UNet2d", false]], "uniformstrategy (class in deeplay.activelearning)": [[99, "deeplay.activelearning.UniformStrategy", false]], "unsqueeze (class in deeplay.ops)": [[212, "deeplay.ops.Unsqueeze", false]], "update (class in deeplay)": [[78, "deeplay.Update", false]], "update (class in deeplay.components)": [[151, "deeplay.components.Update", false]], "update (deeplay.components.graphconvolutionalneuralnetwork attribute)": [[132, "deeplay.components.GraphConvolutionalNeuralNetwork.update", false]], "update (deeplay.components.messagepassingneuralnetwork attribute)": [[138, "deeplay.components.MessagePassingNeuralNetwork.update", false]], "update (deeplay.components.residualmessagepassingneuralnetwork attribute)": [[145, "deeplay.components.ResidualMessagePassingNeuralNetwork.update", false]], "update (deeplay.graphconvolutionalneuralnetwork attribute)": [[29, "deeplay.GraphConvolutionalNeuralNetwork.update", false]], "update (deeplay.messagepassingneuralnetwork attribute)": [[51, "deeplay.MessagePassingNeuralNetwork.update", false]], "update (deeplay.residualmessagepassingneuralnetwork attribute)": [[66, "deeplay.ResidualMessagePassingNeuralNetwork.update", false]], "update() (deeplay.module.config method)": [[194, "deeplay.module.Config.update", false]], "upsample (deeplay.components.convolutionalencoderdecoder2d attribute)": [[129, "deeplay.components.ConvolutionalEncoderDecoder2d.upsample", false]], "upsample (deeplay.convolutionalencoderdecoder2d attribute)": [[18, "deeplay.ConvolutionalEncoderDecoder2d.upsample", false]], "upsampled() (deeplay.blocks.conv2dblock method)": [[111, "deeplay.blocks.Conv2dBlock.upsampled", false]], "upsampled() (deeplay.components.convolutionaldecoder2d method)": [[127, "deeplay.components.ConvolutionalDecoder2d.upsampled", false]], "upsampled() (deeplay.conv2dblock method)": [[14, "deeplay.Conv2dBlock.upsampled", false]], "upsampled() (deeplay.convolutionaldecoder2d method)": [[16, "deeplay.ConvolutionalDecoder2d.upsampled", false]], "val_preprocess() (deeplay.application method)": [[4, "deeplay.Application.val_preprocess", false]], "val_preprocess() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.val_preprocess", false]], "val_preprocess() (deeplay.applications.lodestar method)": [[104, "deeplay.applications.LodeSTAR.val_preprocess", false]], "val_preprocess() (deeplay.lodestar method)": [[46, "deeplay.LodeSTAR.val_preprocess", false]], "validate_after_build() (deeplay.blocks.conv2dresidual method)": [[112, "deeplay.blocks.Conv2dResidual.validate_after_build", false]], "validate_after_build() (deeplay.conv2dresidual method)": [[15, "deeplay.Conv2dResidual.validate_after_build", false]], "validation_step() (deeplay.activelearning.strategy method)": [[96, "deeplay.activelearning.Strategy.validation_step", false]], "validation_step() (deeplay.application method)": [[4, "deeplay.Application.validation_step", false]], "validation_step() (deeplay.applications.application method)": [[100, "deeplay.applications.Application.validation_step", false]], "variable (class in deeplay.shapes)": [[215, "deeplay.shapes.Variable", false]], "variationalautoencoder (class in deeplay)": [[79, "deeplay.VariationalAutoEncoder", false]], "variationalautoencoder (class in deeplay.applications)": [[107, "deeplay.applications.VariationalAutoEncoder", false]], "view (class in deeplay.ops)": [[213, "deeplay.ops.View", false]], "vit (class in deeplay)": [[80, "deeplay.ViT", false]], "vit (class in deeplay.models)": [[192, "deeplay.models.ViT", false]], "wassersteinautoencoder (class in deeplay)": [[81, "deeplay.WassersteinAutoEncoder", false]], "wassersteinautoencoder (class in deeplay.applications)": [[108, "deeplay.applications.WassersteinAutoEncoder", false]], "weightedsum (class in deeplay)": [[82, "deeplay.WeightedSum", false]], "weightedsum (class in deeplay.components)": [[152, "deeplay.components.WeightedSum", false]], "xlargemlp (class in deeplay)": [[83, "deeplay.XLargeMLP", false]], "xlargemlp (class in deeplay.models)": [[193, "deeplay.models.XLargeMLP", false]]}, "objects": {"deeplay": [[0, 0, 1, "", "Adam"], [1, 0, 1, "", "AdamW"], [2, 0, 1, "", "Add"], [3, 0, 1, "", "AddDict"], [4, 0, 1, "", "Application"], [5, 0, 1, "", "AttentionUNet"], [6, 0, 1, "", "BackboneResnet18"], [7, 0, 1, "", "BaseResidual"], [8, 0, 1, "", "BinaryClassifier"], [9, 0, 1, "", "Block"], [10, 0, 1, "", "Cat"], [11, 0, 1, "", "CategoricalClassifier"], [12, 0, 1, "", "Classifier"], [13, 0, 1, "", "CombineLayerActivation"], [14, 0, 1, "", "Conv2dBlock"], [15, 0, 1, "", "Conv2dResidual"], [16, 0, 1, "", "ConvolutionalDecoder2d"], [17, 0, 1, "", "ConvolutionalEncoder2d"], [18, 0, 1, "", "ConvolutionalEncoderDecoder2d"], [19, 0, 1, "", "ConvolutionalNeuralNetwork"], [20, 0, 1, "", "CycleGANDiscriminator"], [21, 0, 1, "", "CycleGANResnetGenerator"], [22, 0, 1, "", "DCGANDiscriminator"], [23, 0, 1, "", "DCGANGenerator"], [24, 0, 1, "", "DeeplayModule"], [25, 0, 1, "", "ExtendedConstructorMeta"], [26, 0, 1, "", "External"], [27, 0, 1, "", "FromDict"], [28, 0, 1, "", "GlobalMeanPool"], [29, 0, 1, "", "GraphConvolutionalNeuralNetwork"], [30, 0, 1, "", "GraphToEdgeMAGIK"], [31, 0, 1, "", "GraphToEdgeMPM"], [32, 0, 1, "", "GraphToGlobalMPM"], [33, 0, 1, "", "GraphToNodeMPM"], [34, 0, 1, "", "IndexedPositionalEmbedding"], [35, 0, 1, "", "LargeMLP"], [36, 0, 1, "", "Layer"], [37, 0, 1, "", "LayerActivation"], [38, 0, 1, "", "LayerActivationNormalization"], [39, 0, 1, "", "LayerActivationNormalizationDropout"], [40, 0, 1, "", "LayerActivationNormalizationUpsample"], [41, 0, 1, "", "LayerDropoutSkipNormalization"], [42, 0, 1, "", "LayerList"], [43, 0, 1, "", "LayerSkip"], [44, 0, 1, "", "LearnableDistancewWeighting"], [45, 0, 1, "", "LinearBlock"], [46, 0, 1, "", "LodeSTAR"], [47, 0, 1, "", "MPM"], [48, 0, 1, "", "Max"], [49, 0, 1, "", "Mean"], [50, 0, 1, "", "MediumMLP"], [51, 0, 1, "", "MessagePassingNeuralNetwork"], [52, 0, 1, "", "Min"], [53, 0, 1, "", "MultiLabelClassifier"], [54, 0, 1, "", "MultiLayerPerceptron"], [55, 0, 1, "", "MultiheadSelfAttention"], [56, 0, 1, "", "Optimizer"], [57, 0, 1, "", "Parallel"], [58, 0, 1, "", "PoolLayerActivationNormalization"], [59, 0, 1, "", "PositionalEmbedding"], [60, 0, 1, "", "Prod"], [61, 0, 1, "", "RMSprop"], [62, 0, 1, "", "RecurrentBlock"], [63, 0, 1, "", "RecurrentModel"], [64, 0, 1, "", "RecurrentNeuralNetwork"], [65, 0, 1, "", "Regressor"], [66, 0, 1, "", "ResidualMessagePassingNeuralNetwork"], [67, 0, 1, "", "SGD"], [68, 0, 1, "", "Sequence1dBlock"], [69, 0, 1, "", "Sequential"], [70, 0, 1, "", "SequentialBlock"], [71, 0, 1, "", "SmallMLP"], [72, 0, 1, "", "Sum"], [73, 0, 1, "", "Trainer"], [74, 0, 1, "", "Transform"], [75, 0, 1, "", "TransformPropagateUpdate"], [76, 0, 1, "", "TransformerEncoderLayer"], [77, 0, 1, "", "UNet2d"], [78, 0, 1, "", "Update"], [79, 0, 1, "", "VariationalAutoEncoder"], [80, 0, 1, "", "ViT"], [81, 0, 1, "", "WassersteinAutoEncoder"], [82, 0, 1, "", "WeightedSum"], [83, 0, 1, "", "XLargeMLP"], [224, 3, 0, "-", "activelearning"], [225, 3, 0, "-", "applications"], [226, 3, 0, "-", "blocks"], [227, 3, 0, "-", "callbacks"], [228, 3, 0, "-", "components"], [229, 3, 0, "-", "decorators"], [160, 0, 1, "", "dense_laplacian_normalization"], [230, 3, 0, "-", "external"], [231, 3, 0, "-", "initializers"], [232, 3, 0, "-", "list"], [233, 3, 0, "-", "meta"], [234, 3, 0, "-", "models"], [235, 3, 0, "-", "module"], [236, 3, 0, "-", "ops"], [237, 3, 0, "-", "shapes"], [219, 0, 1, "", "sparse_laplacian_normalization"], [238, 3, 0, "-", "trainer"]], "deeplay.Add": [[2, 1, 1, "", "forward"]], "deeplay.AddDict": [[3, 1, 1, "", "forward"]], "deeplay.Application": [[4, 1, 1, "", "__call__"], [4, 1, 1, "", "build"], [4, 1, 1, "", "clone_metrics"], [4, 1, 1, "", "compute_loss"], [4, 1, 1, "", "configure_optimizers"], [4, 1, 1, "", "create_data"], [4, 1, 1, "", "create_optimizer_with_params"], [4, 1, 1, "", "fit"], [4, 1, 1, "", "forward"], [4, 1, 1, "", "log"], [4, 1, 1, "", "log_metrics"], [4, 1, 1, "", "metrics_preprocess"], [4, 1, 1, "", "named_children"], [4, 1, 1, "", "predict_step"], [4, 1, 1, "", "test"], [4, 1, 1, "", "test_preprocess"], [4, 1, 1, "", "test_step"], [4, 1, 1, "", "train_preprocess"], [4, 2, 1, "", "trainer"], [4, 1, 1, "", "training_step"], [4, 1, 1, "", "val_preprocess"], [4, 1, 1, "", "validation_step"]], "deeplay.AttentionUNet": [[5, 1, 1, "", "configure"], [5, 1, 1, "", "forward"]], "deeplay.BackboneResnet18": [[6, 1, 1, "", "forward"]], "deeplay.BaseResidual": [[7, 1, 1, "", "forward"]], "deeplay.BinaryClassifier": [[8, 1, 1, "", "compute_loss"], [8, 1, 1, "", "forward"], [8, 1, 1, "", "metrics_preprocess"]], "deeplay.Block": [[9, 2, 1, "", "configurables"], [9, 1, 1, "", "configure"], [9, 1, 1, "", "set_input_map"], [9, 1, 1, "", "set_output_map"]], "deeplay.Cat": [[10, 1, 1, "", "forward"]], "deeplay.CategoricalClassifier": [[11, 1, 1, "", "compute_loss"], [11, 1, 1, "", "forward"]], "deeplay.Classifier": [[12, 1, 1, "", "compute_loss"], [12, 1, 1, "", "forward"]], "deeplay.CombineLayerActivation": [[13, 1, 1, "", "configure"], [13, 1, 1, "", "forward"], [13, 1, 1, "", "get_forward_args"]], "deeplay.Conv2dBlock": [[14, 1, 1, "", "call_with_dummy_data"], [14, 2, 1, "", "expected_input_shape"], [14, 1, 1, "", "get_default_activation"], [14, 1, 1, "", "get_default_merge"], [14, 1, 1, "", "get_default_normalization"], [14, 1, 1, "", "get_default_shortcut"], [14, 1, 1, "", "normalized"], [14, 1, 1, "", "pooled"], [14, 1, 1, "", "strided"], [14, 1, 1, "", "transposed"], [14, 1, 1, "", "upsampled"]], "deeplay.Conv2dResidual": [[15, 1, 1, "", "validate_after_build"]], "deeplay.ConvolutionalDecoder2d": [[16, 1, 1, "", "configure"], [16, 1, 1, "", "forward"], [16, 1, 1, "", "upsampled"]], "deeplay.ConvolutionalEncoder2d": [[17, 2, 1, "", "channel"], [17, 1, 1, "", "configure"], [17, 1, 1, "", "forward"], [17, 1, 1, "", "strided"]], "deeplay.ConvolutionalEncoderDecoder2d": [[18, 2, 1, "", "blocks"], [18, 1, 1, "", "forward"], [18, 2, 1, "", "normalization"], [18, 2, 1, "", "pool"], [18, 2, 1, "", "upsample"]], "deeplay.ConvolutionalNeuralNetwork": [[19, 2, 1, "", "activation"], [19, 1, 1, "", "configure"], [19, 1, 1, "", "forward"], [19, 2, 1, "", "hidden"], [19, 2, 1, "", "input"], [19, 2, 1, "", "layer"], [19, 2, 1, "", "normalization"], [19, 1, 1, "", "normalized"], [19, 2, 1, "", "output"], [19, 1, 1, "", "pooled"], [19, 1, 1, "", "strided"]], "deeplay.CycleGANResnetGenerator": [[21, 1, 1, "", "configure"], [21, 1, 1, "", "forward"]], "deeplay.DCGANDiscriminator": [[22, 1, 1, "", "forward"]], "deeplay.DCGANGenerator": [[23, 1, 1, "", "forward"]], "deeplay.DeeplayModule": [[24, 1, 1, "", "__call__"], [24, 1, 1, "", "available_styles"], [24, 1, 1, "", "build"], [24, 1, 1, "", "calling_stateful"], [24, 1, 1, "", "computed"], [24, 2, 1, "", "configurables"], [24, 1, 1, "", "configure"], [24, 1, 1, "", "create"], [24, 2, 1, "", "device"], [24, 2, 1, "", "dtype"], [24, 1, 1, "", "forward"], [24, 1, 1, "", "get_argspec"], [24, 1, 1, "", "get_from_user_config"], [24, 1, 1, "", "get_init_args"], [24, 1, 1, "", "get_signature"], [24, 1, 1, "", "get_subconfig"], [24, 1, 1, "", "get_user_configuration"], [24, 1, 1, "", "getitem_with_selections"], [24, 1, 1, "", "initialize"], [24, 2, 1, "", "is_constructing"], [24, 2, 1, "", "kwargs"], [24, 1, 1, "", "log_input"], [24, 1, 1, "", "log_output"], [24, 1, 1, "", "log_tensor"], [24, 2, 1, "", "logs"], [24, 1, 1, "", "new"], [24, 1, 1, "", "predict"], [24, 1, 1, "", "register_after_build_hook"], [24, 1, 1, "", "register_after_init_hook"], [24, 1, 1, "", "register_before_build_hook"], [24, 1, 1, "", "register_style"], [24, 1, 1, "", "replace"], [24, 2, 1, "", "root_module"], [24, 1, 1, "", "set_input_map"], [24, 1, 1, "", "set_output_map"], [24, 1, 1, "", "set_root_module"], [24, 1, 1, "", "style"], [24, 1, 1, "", "styled"], [24, 2, 1, "", "tags"]], "deeplay.ExtendedConstructorMeta": [[25, 1, 1, "", "__call__"]], "deeplay.External": [[26, 1, 1, "", "assert_not_positional_only_and_variadic"], [26, 1, 1, "", "build"], [26, 1, 1, "", "build_arguments_from"], [26, 1, 1, "", "configure"], [26, 1, 1, "", "create"], [26, 1, 1, "", "get_argspec"], [26, 1, 1, "", "get_init_args"], [26, 1, 1, "", "get_signature"], [26, 2, 1, "", "kwargs"]], "deeplay.FromDict": [[27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "forward"]], "deeplay.GlobalMeanPool": [[28, 1, 1, "", "forward"]], "deeplay.GraphConvolutionalNeuralNetwork": [[29, 1, 1, "", "configure"], [29, 1, 1, "", "forward"], [29, 2, 1, "", "hidden"], [29, 2, 1, "", "input"], [29, 2, 1, "", "output"], [29, 2, 1, "", "propagate"], [29, 2, 1, "", "transform"], [29, 2, 1, "", "update"]], "deeplay.IndexedPositionalEmbedding": [[34, 1, 1, "", "fetch_embeddings"], [34, 1, 1, "", "forward"]], "deeplay.Layer": [[36, 1, 1, "", "configure"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "register_computed"]], "deeplay.LayerActivation": [[37, 1, 1, "", "configure"]], "deeplay.LayerActivationNormalization": [[38, 1, 1, "", "configure"]], "deeplay.LayerActivationNormalizationDropout": [[39, 1, 1, "", "configure"]], "deeplay.LayerActivationNormalizationUpsample": [[40, 1, 1, "", "configure"]], "deeplay.LayerDropoutSkipNormalization": [[41, 1, 1, "", "configure"], [41, 1, 1, "", "forward"]], "deeplay.LayerList": [[42, 1, 1, "", "append"], [42, 1, 1, "", "configure"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "remove"], [42, 1, 1, "", "set_input_map"], [42, 1, 1, "", "set_output_map"]], "deeplay.LayerSkip": [[43, 1, 1, "", "configure"], [43, 1, 1, "", "forward"]], "deeplay.LearnableDistancewWeighting": [[44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "forward"]], "deeplay.LinearBlock": [[45, 1, 1, "", "call_with_dummy_data"], [45, 1, 1, "", "get_default_activation"], [45, 1, 1, "", "get_default_merge"], [45, 1, 1, "", "get_default_normalization"], [45, 1, 1, "", "get_default_shortcut"]], "deeplay.LodeSTAR": [[46, 1, 1, "", "compute_loss"], [46, 1, 1, "", "detect"], [46, 1, 1, "", "detect_single"], [46, 1, 1, "", "find_local_maxima"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_detection_score"], [46, 1, 1, "", "local_consistency"], [46, 1, 1, "", "normalize"], [46, 1, 1, "", "on_train_end"], [46, 1, 1, "", "pooled"], [46, 1, 1, "", "reduce"], [46, 1, 1, "", "test_preprocess"], [46, 1, 1, "", "train_preprocess"], [46, 1, 1, "", "transform_data"], [46, 1, 1, "", "val_preprocess"]], "deeplay.MPM": [[47, 1, 1, "", "forward"]], "deeplay.Max": [[48, 1, 1, "", "forward"]], "deeplay.Mean": [[49, 2, 1, "", "Sum"], [49, 1, 1, "", "forward"]], "deeplay.MessagePassingNeuralNetwork": [[51, 1, 1, "", "configure"], [51, 1, 1, "", "forward"], [51, 2, 1, "", "hidden"], [51, 2, 1, "", "input"], [51, 2, 1, "", "output"], [51, 2, 1, "", "propagate"], [51, 2, 1, "", "transform"], [51, 2, 1, "", "update"]], "deeplay.Min": [[52, 1, 1, "", "forward"]], "deeplay.MultiLabelClassifier": [[53, 1, 1, "", "compute_loss"], [53, 1, 1, "", "forward"]], "deeplay.MultiLayerPerceptron": [[54, 2, 1, "", "activation"], [54, 1, 1, "", "configure"], [54, 2, 1, "", "dropout"], [54, 1, 1, "", "forward"], [54, 2, 1, "", "hidden"], [54, 2, 1, "", "input"], [54, 2, 1, "", "layer"], [54, 2, 1, "", "normalization"], [54, 2, 1, "", "output"]], "deeplay.MultiheadSelfAttention": [[55, 1, 1, "", "forward"]], "deeplay.Optimizer": [[56, 2, 1, "", "kwargs"], [56, 1, 1, "", "params"]], "deeplay.Parallel": [[57, 1, 1, "", "forward"]], "deeplay.PoolLayerActivationNormalization": [[58, 1, 1, "", "configure"]], "deeplay.PositionalEmbedding": [[59, 1, 1, "", "forward"]], "deeplay.Prod": [[60, 1, 1, "", "forward"]], "deeplay.RecurrentBlock": [[62, 1, 1, "", "configure"]], "deeplay.RecurrentModel": [[63, 2, 1, "", "activation"], [63, 1, 1, "", "configure"], [63, 2, 1, "", "dropout"], [63, 1, 1, "", "forward"], [63, 2, 1, "", "hidden"], [63, 2, 1, "", "input"], [63, 2, 1, "", "layer"], [63, 2, 1, "", "normalization"], [63, 2, 1, "", "output"]], "deeplay.RecurrentNeuralNetwork": [[64, 2, 1, "", "activation"], [64, 1, 1, "", "bidirectional"], [64, 1, 1, "", "configure"], [64, 2, 1, "", "dropout"], [64, 1, 1, "", "forward"], [64, 2, 1, "", "hidden"], [64, 2, 1, "", "input"], [64, 2, 1, "", "layer"], [64, 2, 1, "", "normalization"], [64, 2, 1, "", "output"]], "deeplay.Regressor": [[65, 1, 1, "", "forward"]], "deeplay.ResidualMessagePassingNeuralNetwork": [[66, 1, 1, "", "configure"], [66, 1, 1, "", "forward"], [66, 2, 1, "", "hidden"], [66, 2, 1, "", "input"], [66, 2, 1, "", "output"], [66, 2, 1, "", "propagate"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "update"]], "deeplay.Sequence1dBlock": [[68, 1, 1, "", "GRU"], [68, 1, 1, "", "LSTM"], [68, 1, 1, "", "RNN"], [68, 1, 1, "", "append_dropout"], [68, 1, 1, "", "bidirectional"], [68, 1, 1, "", "forward"], [68, 1, 1, "", "get_default_normalization"], [68, 1, 1, "", "insert_dropout"], [68, 2, 1, "", "is_recurrent"], [68, 1, 1, "", "prepend_dropout"], [68, 1, 1, "", "run_with_dummy_data"]], "deeplay.Sequential": [[69, 1, 1, "", "forward"]], "deeplay.SequentialBlock": [[70, 1, 1, "", "append"], [70, 1, 1, "", "append_dropout"], [70, 1, 1, "", "configure"], [70, 1, 1, "", "forward"], [70, 1, 1, "", "insert"], [70, 1, 1, "", "insert_dropout"], [70, 1, 1, "", "prepend"], [70, 1, 1, "", "prepend_dropout"], [70, 1, 1, "", "remove"], [70, 1, 1, "", "remove_dropout"], [70, 1, 1, "", "set_dropout"]], "deeplay.Sum": [[72, 1, 1, "", "forward"]], "deeplay.Trainer": [[73, 1, 1, "", "disable_history"], [73, 2, 1, "", "history"]], "deeplay.Transform": [[74, 1, 1, "", "get_forward_args"]], "deeplay.TransformPropagateUpdate": [[75, 1, 1, "", "configure"]], "deeplay.TransformerEncoderLayer": [[76, 1, 1, "", "configure"], [76, 2, 1, "", "feed_forward"], [76, 1, 1, "", "forward"], [76, 2, 1, "", "hidden"], [76, 2, 1, "", "input"], [76, 2, 1, "", "multihead"], [76, 2, 1, "", "output"]], "deeplay.UNet2d": [[77, 1, 1, "", "configure"], [77, 1, 1, "", "forward"]], "deeplay.Update": [[78, 1, 1, "", "get_forward_args"]], "deeplay.VariationalAutoEncoder": [[79, 1, 1, "", "compute_loss"], [79, 1, 1, "", "decode"], [79, 1, 1, "", "encode"], [79, 1, 1, "", "forward"], [79, 1, 1, "", "reparameterize"], [79, 1, 1, "", "training_step"]], "deeplay.ViT": [[80, 1, 1, "", "forward"], [80, 2, 1, "", "hidden"], [80, 2, 1, "", "input"], [80, 2, 1, "", "output"]], "deeplay.WassersteinAutoEncoder": [[81, 1, 1, "", "compute_IMQ"], [81, 1, 1, "", "compute_kernel"], [81, 1, 1, "", "compute_loss"], [81, 1, 1, "", "compute_mmd"], [81, 1, 1, "", "decode"], [81, 1, 1, "", "encode"], [81, 1, 1, "", "forward"], [81, 1, 1, "", "training_step"]], "deeplay.WeightedSum": [[82, 1, 1, "", "forward"]], "deeplay.activelearning": [[84, 0, 1, "", "ActiveLearningCriterion"], [85, 0, 1, "", "ActiveLearningDataset"], [86, 0, 1, "", "AdversarialStrategy"], [87, 0, 1, "", "Constant"], [88, 0, 1, "", "Entropy"], [89, 0, 1, "", "FractionCriterion"], [90, 0, 1, "", "JointDataset"], [91, 0, 1, "", "L1Upper"], [92, 0, 1, "", "L2Upper"], [93, 0, 1, "", "LeastConfidence"], [94, 0, 1, "", "Margin"], [95, 0, 1, "", "ProductCriterion"], [96, 0, 1, "", "Strategy"], [97, 0, 1, "", "SumCriterion"], [98, 0, 1, "", "UncertaintyStrategy"], [99, 0, 1, "", "UniformStrategy"]], "deeplay.activelearning.ActiveLearningCriterion": [[84, 1, 1, "", "score"]], "deeplay.activelearning.ActiveLearningDataset": [[85, 1, 1, "", "annotate"], [85, 1, 1, "", "annotate_random"], [85, 1, 1, "", "get_annotated_data"], [85, 1, 1, "", "get_annotated_labels"], [85, 1, 1, "", "get_annotated_samples"], [85, 1, 1, "", "get_num_annotated"], [85, 1, 1, "", "get_unannotated_data"], [85, 1, 1, "", "get_unannotated_labels"], [85, 1, 1, "", "get_unannotated_samples"]], "deeplay.activelearning.AdversarialStrategy": [[86, 1, 1, "", "configure_optimizers"], [86, 1, 1, "", "forward"], [86, 1, 1, "", "gradient_penalty"], [86, 1, 1, "", "query_strategy"], [86, 1, 1, "", "train_dataloader"], [86, 1, 1, "", "training_step"]], "deeplay.activelearning.Constant": [[87, 1, 1, "", "score"]], "deeplay.activelearning.Entropy": [[88, 1, 1, "", "score"]], "deeplay.activelearning.FractionCriterion": [[89, 1, 1, "", "score"]], "deeplay.activelearning.L1Upper": [[91, 1, 1, "", "score"]], "deeplay.activelearning.L2Upper": [[92, 1, 1, "", "score"]], "deeplay.activelearning.LeastConfidence": [[93, 1, 1, "", "score"]], "deeplay.activelearning.Margin": [[94, 1, 1, "", "score"]], "deeplay.activelearning.ProductCriterion": [[95, 1, 1, "", "score"]], "deeplay.activelearning.Strategy": [[96, 1, 1, "", "on_train_start"], [96, 1, 1, "", "query"], [96, 1, 1, "", "query_and_update"], [96, 1, 1, "", "query_strategy"], [96, 1, 1, "", "query_train"], [96, 1, 1, "", "query_val"], [96, 1, 1, "", "reset_model"], [96, 1, 1, "", "test_dataloader"], [96, 1, 1, "", "test_step"], [96, 1, 1, "", "train_dataloader"], [96, 1, 1, "", "validation_step"]], "deeplay.activelearning.SumCriterion": [[97, 1, 1, "", "score"]], "deeplay.activelearning.UncertaintyStrategy": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "query_strategy"], [98, 1, 1, "", "training_step"]], "deeplay.activelearning.UniformStrategy": [[99, 1, 1, "", "forward"], [99, 1, 1, "", "query_strategy"], [99, 1, 1, "", "training_step"]], "deeplay.applications": [[100, 0, 1, "", "Application"], [101, 0, 1, "", "BinaryClassifier"], [102, 0, 1, "", "CategoricalClassifier"], [103, 0, 1, "", "Classifier"], [104, 0, 1, "", "LodeSTAR"], [105, 0, 1, "", "MultiLabelClassifier"], [106, 0, 1, "", "Regressor"], [107, 0, 1, "", "VariationalAutoEncoder"], [108, 0, 1, "", "WassersteinAutoEncoder"]], "deeplay.applications.Application": [[100, 1, 1, "", "__call__"], [100, 1, 1, "", "build"], [100, 1, 1, "", "clone_metrics"], [100, 1, 1, "", "compute_loss"], [100, 1, 1, "", "configure_optimizers"], [100, 1, 1, "", "create_data"], [100, 1, 1, "", "create_optimizer_with_params"], [100, 1, 1, "", "fit"], [100, 1, 1, "", "forward"], [100, 1, 1, "", "log"], [100, 1, 1, "", "log_metrics"], [100, 1, 1, "", "metrics_preprocess"], [100, 1, 1, "", "named_children"], [100, 1, 1, "", "predict_step"], [100, 1, 1, "", "test"], [100, 1, 1, "", "test_preprocess"], [100, 1, 1, "", "test_step"], [100, 1, 1, "", "train_preprocess"], [100, 2, 1, "", "trainer"], [100, 1, 1, "", "training_step"], [100, 1, 1, "", "val_preprocess"], [100, 1, 1, "", "validation_step"]], "deeplay.applications.BinaryClassifier": [[101, 1, 1, "", "compute_loss"], [101, 1, 1, "", "forward"], [101, 1, 1, "", "metrics_preprocess"]], "deeplay.applications.CategoricalClassifier": [[102, 1, 1, "", "compute_loss"], [102, 1, 1, "", "forward"]], "deeplay.applications.Classifier": [[103, 1, 1, "", "compute_loss"], [103, 1, 1, "", "forward"]], "deeplay.applications.LodeSTAR": [[104, 1, 1, "", "compute_loss"], [104, 1, 1, "", "detect"], [104, 1, 1, "", "detect_single"], [104, 1, 1, "", "find_local_maxima"], [104, 1, 1, "", "forward"], [104, 1, 1, "", "get_detection_score"], [104, 1, 1, "", "local_consistency"], [104, 1, 1, "", "normalize"], [104, 1, 1, "", "on_train_end"], [104, 1, 1, "", "pooled"], [104, 1, 1, "", "reduce"], [104, 1, 1, "", "test_preprocess"], [104, 1, 1, "", "train_preprocess"], [104, 1, 1, "", "transform_data"], [104, 1, 1, "", "val_preprocess"]], "deeplay.applications.MultiLabelClassifier": [[105, 1, 1, "", "compute_loss"], [105, 1, 1, "", "forward"]], "deeplay.applications.Regressor": [[106, 1, 1, "", "forward"]], "deeplay.applications.VariationalAutoEncoder": [[107, 1, 1, "", "compute_loss"], [107, 1, 1, "", "decode"], [107, 1, 1, "", "encode"], [107, 1, 1, "", "forward"], [107, 1, 1, "", "reparameterize"], [107, 1, 1, "", "training_step"]], "deeplay.applications.WassersteinAutoEncoder": [[108, 1, 1, "", "compute_IMQ"], [108, 1, 1, "", "compute_kernel"], [108, 1, 1, "", "compute_loss"], [108, 1, 1, "", "compute_mmd"], [108, 1, 1, "", "decode"], [108, 1, 1, "", "encode"], [108, 1, 1, "", "forward"], [108, 1, 1, "", "training_step"]], "deeplay.blocks": [[109, 0, 1, "", "BaseResidual"], [110, 0, 1, "", "Block"], [111, 0, 1, "", "Conv2dBlock"], [112, 0, 1, "", "Conv2dResidual"], [113, 0, 1, "", "LayerActivation"], [114, 0, 1, "", "LayerActivationNormalization"], [115, 0, 1, "", "LayerActivationNormalizationDropout"], [116, 0, 1, "", "LayerActivationNormalizationUpsample"], [117, 0, 1, "", "LayerSkip"], [118, 0, 1, "", "LinearBlock"], [119, 0, 1, "", "PoolLayerActivationNormalization"], [120, 0, 1, "", "RecurrentBlock"]], "deeplay.blocks.BaseResidual": [[109, 1, 1, "", "forward"]], "deeplay.blocks.Block": [[110, 2, 1, "", "configurables"], [110, 1, 1, "", "configure"], [110, 1, 1, "", "set_input_map"], [110, 1, 1, "", "set_output_map"]], "deeplay.blocks.Conv2dBlock": [[111, 1, 1, "", "call_with_dummy_data"], [111, 2, 1, "", "expected_input_shape"], [111, 1, 1, "", "get_default_activation"], [111, 1, 1, "", "get_default_merge"], [111, 1, 1, "", "get_default_normalization"], [111, 1, 1, "", "get_default_shortcut"], [111, 1, 1, "", "normalized"], [111, 1, 1, "", "pooled"], [111, 1, 1, "", "strided"], [111, 1, 1, "", "transposed"], [111, 1, 1, "", "upsampled"]], "deeplay.blocks.Conv2dResidual": [[112, 1, 1, "", "validate_after_build"]], "deeplay.blocks.LayerActivation": [[113, 1, 1, "", "configure"]], "deeplay.blocks.LayerActivationNormalization": [[114, 1, 1, "", "configure"]], "deeplay.blocks.LayerActivationNormalizationDropout": [[115, 1, 1, "", "configure"]], "deeplay.blocks.LayerActivationNormalizationUpsample": [[116, 1, 1, "", "configure"]], "deeplay.blocks.LayerSkip": [[117, 1, 1, "", "configure"], [117, 1, 1, "", "forward"]], "deeplay.blocks.LinearBlock": [[118, 1, 1, "", "call_with_dummy_data"], [118, 1, 1, "", "get_default_activation"], [118, 1, 1, "", "get_default_merge"], [118, 1, 1, "", "get_default_normalization"], [118, 1, 1, "", "get_default_shortcut"]], "deeplay.blocks.PoolLayerActivationNormalization": [[119, 1, 1, "", "configure"]], "deeplay.blocks.RecurrentBlock": [[120, 1, 1, "", "configure"]], "deeplay.callbacks": [[121, 0, 1, "", "LogHistory"], [122, 0, 1, "", "RichProgressBar"]], "deeplay.callbacks.LogHistory": [[121, 2, 1, "", "history"], [121, 1, 1, "", "on_train_batch_end"], [121, 1, 1, "", "on_train_epoch_end"], [121, 1, 1, "", "on_validation_epoch_end"], [121, 1, 1, "", "plot"], [121, 2, 1, "", "step_history"]], "deeplay.components": [[123, 0, 1, "", "Add"], [124, 0, 1, "", "AddDict"], [125, 0, 1, "", "AttentionUNet"], [126, 0, 1, "", "CombineLayerActivation"], [127, 0, 1, "", "ConvolutionalDecoder2d"], [128, 0, 1, "", "ConvolutionalEncoder2d"], [129, 0, 1, "", "ConvolutionalEncoderDecoder2d"], [130, 0, 1, "", "ConvolutionalNeuralNetwork"], [131, 0, 1, "", "FromDict"], [132, 0, 1, "", "GraphConvolutionalNeuralNetwork"], [133, 0, 1, "", "IndexedPositionalEmbedding"], [134, 0, 1, "", "LayerDropoutSkipNormalization"], [135, 0, 1, "", "LearnableDistancewWeighting"], [136, 0, 1, "", "Max"], [137, 0, 1, "", "Mean"], [138, 0, 1, "", "MessagePassingNeuralNetwork"], [139, 0, 1, "", "Min"], [140, 0, 1, "", "MultiLayerPerceptron"], [141, 0, 1, "", "MultiheadSelfAttention"], [142, 0, 1, "", "PositionalEmbedding"], [143, 0, 1, "", "Prod"], [144, 0, 1, "", "RecurrentNeuralNetwork"], [145, 0, 1, "", "ResidualMessagePassingNeuralNetwork"], [146, 0, 1, "", "Sum"], [147, 0, 1, "", "Transform"], [148, 0, 1, "", "TransformPropagateUpdate"], [149, 0, 1, "", "TransformerEncoderLayer"], [150, 0, 1, "", "UNet2d"], [151, 0, 1, "", "Update"], [152, 0, 1, "", "WeightedSum"], [153, 0, 1, "", "dense_laplacian_normalization"], [154, 0, 1, "", "sparse_laplacian_normalization"]], "deeplay.components.Add": [[123, 1, 1, "", "forward"]], "deeplay.components.AddDict": [[124, 1, 1, "", "forward"]], "deeplay.components.AttentionUNet": [[125, 1, 1, "", "configure"], [125, 1, 1, "", "forward"]], "deeplay.components.CombineLayerActivation": [[126, 1, 1, "", "configure"], [126, 1, 1, "", "forward"], [126, 1, 1, "", "get_forward_args"]], "deeplay.components.ConvolutionalDecoder2d": [[127, 1, 1, "", "configure"], [127, 1, 1, "", "forward"], [127, 1, 1, "", "upsampled"]], "deeplay.components.ConvolutionalEncoder2d": [[128, 2, 1, "", "channel"], [128, 1, 1, "", "configure"], [128, 1, 1, "", "forward"], [128, 1, 1, "", "strided"]], "deeplay.components.ConvolutionalEncoderDecoder2d": [[129, 2, 1, "", "blocks"], [129, 1, 1, "", "forward"], [129, 2, 1, "", "normalization"], [129, 2, 1, "", "pool"], [129, 2, 1, "", "upsample"]], "deeplay.components.ConvolutionalNeuralNetwork": [[130, 2, 1, "", "activation"], [130, 1, 1, "", "configure"], [130, 1, 1, "", "forward"], [130, 2, 1, "", "hidden"], [130, 2, 1, "", "input"], [130, 2, 1, "", "layer"], [130, 2, 1, "", "normalization"], [130, 1, 1, "", "normalized"], [130, 2, 1, "", "output"], [130, 1, 1, "", "pooled"], [130, 1, 1, "", "strided"]], "deeplay.components.FromDict": [[131, 1, 1, "", "extra_repr"], [131, 1, 1, "", "forward"]], "deeplay.components.GraphConvolutionalNeuralNetwork": [[132, 1, 1, "", "configure"], [132, 1, 1, "", "forward"], [132, 2, 1, "", "hidden"], [132, 2, 1, "", "input"], [132, 2, 1, "", "output"], [132, 2, 1, "", "propagate"], [132, 2, 1, "", "transform"], [132, 2, 1, "", "update"]], "deeplay.components.IndexedPositionalEmbedding": [[133, 1, 1, "", "fetch_embeddings"], [133, 1, 1, "", "forward"]], "deeplay.components.LayerDropoutSkipNormalization": [[134, 1, 1, "", "configure"], [134, 1, 1, "", "forward"]], "deeplay.components.LearnableDistancewWeighting": [[135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "forward"]], "deeplay.components.Max": [[136, 1, 1, "", "forward"]], "deeplay.components.Mean": [[137, 2, 1, "", "Sum"], [137, 1, 1, "", "forward"]], "deeplay.components.MessagePassingNeuralNetwork": [[138, 1, 1, "", "configure"], [138, 1, 1, "", "forward"], [138, 2, 1, "", "hidden"], [138, 2, 1, "", "input"], [138, 2, 1, "", "output"], [138, 2, 1, "", "propagate"], [138, 2, 1, "", "transform"], [138, 2, 1, "", "update"]], "deeplay.components.Min": [[139, 1, 1, "", "forward"]], "deeplay.components.MultiLayerPerceptron": [[140, 2, 1, "", "activation"], [140, 1, 1, "", "configure"], [140, 2, 1, "", "dropout"], [140, 1, 1, "", "forward"], [140, 2, 1, "", "hidden"], [140, 2, 1, "", "input"], [140, 2, 1, "", "layer"], [140, 2, 1, "", "normalization"], [140, 2, 1, "", "output"]], "deeplay.components.MultiheadSelfAttention": [[141, 1, 1, "", "forward"]], "deeplay.components.PositionalEmbedding": [[142, 1, 1, "", "forward"]], "deeplay.components.Prod": [[143, 1, 1, "", "forward"]], "deeplay.components.RecurrentNeuralNetwork": [[144, 2, 1, "", "activation"], [144, 1, 1, "", "bidirectional"], [144, 1, 1, "", "configure"], [144, 2, 1, "", "dropout"], [144, 1, 1, "", "forward"], [144, 2, 1, "", "hidden"], [144, 2, 1, "", "input"], [144, 2, 1, "", "layer"], [144, 2, 1, "", "normalization"], [144, 2, 1, "", "output"]], "deeplay.components.ResidualMessagePassingNeuralNetwork": [[145, 1, 1, "", "configure"], [145, 1, 1, "", "forward"], [145, 2, 1, "", "hidden"], [145, 2, 1, "", "input"], [145, 2, 1, "", "output"], [145, 2, 1, "", "propagate"], [145, 2, 1, "", "transform"], [145, 2, 1, "", "update"]], "deeplay.components.Sum": [[146, 1, 1, "", "forward"]], "deeplay.components.Transform": [[147, 1, 1, "", "get_forward_args"]], "deeplay.components.TransformPropagateUpdate": [[148, 1, 1, "", "configure"]], "deeplay.components.TransformerEncoderLayer": [[149, 1, 1, "", "configure"], [149, 2, 1, "", "feed_forward"], [149, 1, 1, "", "forward"], [149, 2, 1, "", "hidden"], [149, 2, 1, "", "input"], [149, 2, 1, "", "multihead"], [149, 2, 1, "", "output"]], "deeplay.components.UNet2d": [[150, 1, 1, "", "configure"], [150, 1, 1, "", "forward"]], "deeplay.components.Update": [[151, 1, 1, "", "get_forward_args"]], "deeplay.components.WeightedSum": [[152, 1, 1, "", "forward"]], "deeplay.components.dense_laplacian_normalization": [[153, 1, 1, "", "degree"], [153, 1, 1, "", "forward"], [153, 1, 1, "", "normalize"]], "deeplay.components.sparse_laplacian_normalization": [[154, 1, 1, "", "add_self_loops"], [154, 1, 1, "", "degree"], [154, 1, 1, "", "forward"], [154, 1, 1, "", "normalize"]], "deeplay.decorators": [[155, 0, 1, "", "Callback"], [156, 4, 1, "", "after_build"], [157, 4, 1, "", "after_init"], [158, 4, 1, "", "before_build"], [159, 4, 1, "", "stateful"]], "deeplay.decorators.Callback": [[155, 1, 1, "", "__call__"], [155, 2, 1, "", "instance_count"]], "deeplay.dense_laplacian_normalization": [[160, 1, 1, "", "degree"], [160, 1, 1, "", "forward"], [160, 1, 1, "", "normalize"]], "deeplay.external": [[161, 0, 1, "", "Adam"], [162, 0, 1, "", "AdamW"], [163, 0, 1, "", "External"], [164, 0, 1, "", "Layer"], [165, 0, 1, "", "Optimizer"], [166, 0, 1, "", "RMSprop"], [167, 0, 1, "", "SGD"]], "deeplay.external.External": [[163, 1, 1, "", "assert_not_positional_only_and_variadic"], [163, 1, 1, "", "build"], [163, 1, 1, "", "build_arguments_from"], [163, 1, 1, "", "configure"], [163, 1, 1, "", "create"], [163, 1, 1, "", "get_argspec"], [163, 1, 1, "", "get_init_args"], [163, 1, 1, "", "get_signature"], [163, 2, 1, "", "kwargs"]], "deeplay.external.Layer": [[164, 1, 1, "", "configure"], [164, 1, 1, "", "forward"], [164, 1, 1, "", "register_computed"]], "deeplay.external.Optimizer": [[165, 2, 1, "", "kwargs"], [165, 1, 1, "", "params"]], "deeplay.initializers": [[168, 0, 1, "", "Constant"], [169, 0, 1, "", "Kaiming"], [170, 0, 1, "", "Normal"]], "deeplay.initializers.Constant": [[168, 1, 1, "", "initialize_tensor"]], "deeplay.initializers.Kaiming": [[169, 1, 1, "", "initialize_tensor"]], "deeplay.initializers.Normal": [[170, 1, 1, "", "initialize_tensor"]], "deeplay.list": [[171, 0, 1, "", "LayerList"], [172, 0, 1, "", "Parallel"], [173, 0, 1, "", "ReferringLayerList"], [174, 0, 1, "", "Sequential"]], "deeplay.list.LayerList": [[171, 1, 1, "", "append"], [171, 1, 1, "", "configure"], [171, 1, 1, "", "extend"], [171, 1, 1, "", "insert"], [171, 1, 1, "", "pop"], [171, 1, 1, "", "remove"], [171, 1, 1, "", "set_input_map"], [171, 1, 1, "", "set_output_map"]], "deeplay.list.Parallel": [[172, 1, 1, "", "forward"]], "deeplay.list.ReferringLayerList": [[173, 1, 1, "", "__call__"]], "deeplay.list.Sequential": [[174, 1, 1, "", "forward"]], "deeplay.meta": [[175, 0, 1, "", "ExtendedConstructorMeta"], [176, 4, 1, "", "not_top_level"]], "deeplay.meta.ExtendedConstructorMeta": [[175, 1, 1, "", "__call__"]], "deeplay.models": [[177, 0, 1, "", "BackboneResnet18"], [178, 0, 1, "", "CycleGANDiscriminator"], [179, 0, 1, "", "CycleGANResnetGenerator"], [180, 0, 1, "", "DCGANDiscriminator"], [181, 0, 1, "", "DCGANGenerator"], [182, 0, 1, "", "GlobalMeanPool"], [183, 0, 1, "", "GraphToEdgeMAGIK"], [184, 0, 1, "", "GraphToEdgeMPM"], [185, 0, 1, "", "GraphToGlobalMPM"], [186, 0, 1, "", "GraphToNodeMPM"], [187, 0, 1, "", "LargeMLP"], [188, 0, 1, "", "MPM"], [189, 0, 1, "", "MediumMLP"], [190, 0, 1, "", "RecurrentModel"], [191, 0, 1, "", "SmallMLP"], [192, 0, 1, "", "ViT"], [193, 0, 1, "", "XLargeMLP"]], "deeplay.models.BackboneResnet18": [[177, 1, 1, "", "forward"]], "deeplay.models.CycleGANResnetGenerator": [[179, 1, 1, "", "configure"], [179, 1, 1, "", "forward"]], "deeplay.models.DCGANDiscriminator": [[180, 1, 1, "", "forward"]], "deeplay.models.DCGANGenerator": [[181, 1, 1, "", "forward"]], "deeplay.models.GlobalMeanPool": [[182, 1, 1, "", "forward"]], "deeplay.models.MPM": [[188, 1, 1, "", "forward"]], "deeplay.models.RecurrentModel": [[190, 2, 1, "", "activation"], [190, 1, 1, "", "configure"], [190, 2, 1, "", "dropout"], [190, 1, 1, "", "forward"], [190, 2, 1, "", "hidden"], [190, 2, 1, "", "input"], [190, 2, 1, "", "layer"], [190, 2, 1, "", "normalization"], [190, 2, 1, "", "output"]], "deeplay.models.ViT": [[192, 1, 1, "", "forward"], [192, 2, 1, "", "hidden"], [192, 2, 1, "", "input"], [192, 2, 1, "", "output"]], "deeplay.module": [[194, 0, 1, "", "Config"], [195, 0, 1, "", "ConfigItem"], [196, 0, 1, "", "ConfigItemList"], [197, 0, 1, "", "DeeplayModule"], [198, 0, 1, "", "DetachedConfigItem"], [199, 0, 1, "", "Selection"], [200, 4, 1, "", "builder"]], "deeplay.module.Config": [[194, 1, 1, "", "add_detached_configuration"], [194, 1, 1, "", "prefix"], [194, 1, 1, "", "remove_derived_configurations"], [194, 1, 1, "", "set_for_tags"], [194, 1, 1, "", "take"], [194, 1, 1, "", "try_attach_detached_configurations"], [194, 1, 1, "", "update"]], "deeplay.module.ConfigItem": [[195, 1, 1, "", "prefix"], [195, 2, 1, "", "source_depth"]], "deeplay.module.DeeplayModule": [[197, 1, 1, "", "__call__"], [197, 1, 1, "", "available_styles"], [197, 1, 1, "", "build"], [197, 1, 1, "", "calling_stateful"], [197, 1, 1, "", "computed"], [197, 2, 1, "", "configurables"], [197, 1, 1, "", "configure"], [197, 1, 1, "", "create"], [197, 2, 1, "", "device"], [197, 2, 1, "", "dtype"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "get_argspec"], [197, 1, 1, "", "get_from_user_config"], [197, 1, 1, "", "get_init_args"], [197, 1, 1, "", "get_signature"], [197, 1, 1, "", "get_subconfig"], [197, 1, 1, "", "get_user_configuration"], [197, 1, 1, "", "getitem_with_selections"], [197, 1, 1, "", "initialize"], [197, 2, 1, "", "is_constructing"], [197, 2, 1, "", "kwargs"], [197, 1, 1, "", "log_input"], [197, 1, 1, "", "log_output"], [197, 1, 1, "", "log_tensor"], [197, 2, 1, "", "logs"], [197, 1, 1, "", "new"], [197, 1, 1, "", "predict"], [197, 1, 1, "", "register_after_build_hook"], [197, 1, 1, "", "register_after_init_hook"], [197, 1, 1, "", "register_before_build_hook"], [197, 1, 1, "", "register_style"], [197, 1, 1, "", "replace"], [197, 2, 1, "", "root_module"], [197, 1, 1, "", "set_input_map"], [197, 1, 1, "", "set_output_map"], [197, 1, 1, "", "set_root_module"], [197, 1, 1, "", "style"], [197, 1, 1, "", "styled"], [197, 2, 1, "", "tags"]], "deeplay.module.DetachedConfigItem": [[198, 1, 1, "", "prefix"], [198, 2, 1, "", "source_depth"]], "deeplay.module.Selection": [[199, 1, 1, "", "append"], [199, 1, 1, "", "append_dropout"], [199, 1, 1, "", "configure"], [199, 1, 1, "", "filter"], [199, 1, 1, "", "hasattr"], [199, 1, 1, "", "insert"], [199, 1, 1, "", "insert_dropout"], [199, 1, 1, "", "isinstance"], [199, 1, 1, "", "list_names"], [199, 1, 1, "", "log_input"], [199, 1, 1, "", "log_output"], [199, 1, 1, "", "prepend"], [199, 1, 1, "", "prepend_dropout"], [199, 1, 1, "", "remove"], [199, 1, 1, "", "remove_dropout"], [199, 1, 1, "", "replace"], [199, 1, 1, "", "set_dropout"], [199, 1, 1, "", "set_input_map"], [199, 1, 1, "", "set_output_map"]], "deeplay.ops": [[201, 0, 1, "", "Add"], [202, 0, 1, "", "Cat"], [203, 0, 1, "", "Flatten"], [204, 0, 1, "", "FromLogs"], [205, 0, 1, "", "Lambda"], [206, 0, 1, "", "MergeOp"], [207, 0, 1, "", "MultiheadCrossAttention"], [208, 0, 1, "", "MultiheadSelfAttention"], [209, 0, 1, "", "Permute"], [210, 0, 1, "", "Reshape"], [211, 0, 1, "", "Squeeze"], [212, 0, 1, "", "Unsqueeze"], [213, 0, 1, "", "View"]], "deeplay.ops.Add": [[201, 1, 1, "", "forward"]], "deeplay.ops.Cat": [[202, 1, 1, "", "forward"]], "deeplay.ops.Flatten": [[203, 1, 1, "", "forward"]], "deeplay.ops.FromLogs": [[204, 1, 1, "", "forward"]], "deeplay.ops.Lambda": [[205, 1, 1, "", "forward"]], "deeplay.ops.MergeOp": [[206, 1, 1, "", "forward"]], "deeplay.ops.MultiheadCrossAttention": [[207, 1, 1, "", "forward"]], "deeplay.ops.MultiheadSelfAttention": [[208, 1, 1, "", "forward"]], "deeplay.ops.Permute": [[209, 1, 1, "", "forward"]], "deeplay.ops.Squeeze": [[211, 1, 1, "", "forward"]], "deeplay.ops.Unsqueeze": [[212, 1, 1, "", "forward"]], "deeplay.ops.View": [[213, 1, 1, "", "forward"]], "deeplay.shapes": [[214, 0, 1, "", "Computed"], [215, 0, 1, "", "Variable"], [216, 4, 1, "", "reverse_two_operation"], [217, 4, 1, "", "two_operation"], [218, 4, 1, "", "unary_operation"]], "deeplay.shapes.Computed": [[214, 1, 1, "", "__call__"]], "deeplay.shapes.Variable": [[215, 1, 1, "", "__call__"]], "deeplay.sparse_laplacian_normalization": [[219, 1, 1, "", "add_self_loops"], [219, 1, 1, "", "degree"], [219, 1, 1, "", "forward"], [219, 1, 1, "", "normalize"]], "deeplay.trainer": [[220, 0, 1, "", "Trainer"]], "deeplay.trainer.Trainer": [[220, 1, 1, "", "disable_history"], [220, 2, 1, "", "history"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:module", "4": "py:function"}, "terms": {"": [4, 5, 8, 9, 11, 12, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 53, 54, 58, 62, 63, 64, 65, 66, 70, 75, 76, 79, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 199], "0": [4, 14, 16, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 46, 47, 51, 54, 63, 64, 66, 73, 74, 76, 96, 100, 104, 111, 121, 127, 130, 132, 133, 138, 140, 144, 145, 147, 149, 155, 163, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 197, 220], "1": [4, 5, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 42, 46, 47, 51, 54, 63, 64, 66, 73, 74, 76, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 121, 122, 125, 127, 128, 130, 132, 133, 138, 140, 144, 145, 147, 149, 163, 168, 170, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 197, 215, 220], "10": [4, 28, 30, 31, 32, 33, 47, 54, 76, 80, 100, 140, 149, 182, 183, 184, 185, 186, 188, 192], "100": [4, 23, 100, 121, 181], "12": [80, 192], "128": [16, 17, 19, 54, 127, 128, 130, 140], "16": [4, 22, 23, 28, 30, 31, 32, 33, 47, 73, 76, 86, 100, 149, 180, 181, 182, 183, 184, 185, 186, 188, 220], "2": [4, 14, 16, 17, 19, 22, 23, 28, 30, 31, 32, 33, 34, 46, 47, 76, 80, 96, 100, 104, 111, 121, 127, 128, 130, 133, 149, 180, 181, 182, 183, 184, 185, 186, 188, 192, 215], "20": [24, 26, 30, 31, 32, 33, 47, 163, 183, 184, 185, 186, 188, 197], "200": 121, "256": [20, 21, 178, 179], "28": [54, 140], "2d": [16, 17, 127, 128], "3": [17, 19, 20, 21, 28, 36, 80, 121, 128, 130, 164, 178, 179, 182, 192, 215], "32": [4, 16, 17, 19, 24, 73, 80, 100, 127, 128, 130, 192, 197, 220], "384": [80, 192], "3g": 122, "4": [2, 22, 23, 76, 80, 123, 149, 180, 181, 192], "40": [24, 26, 163, 197], "5": [19, 46, 104, 130], "6": [4, 86, 96, 100], "6206e0": 122, "64": [16, 17, 19, 22, 23, 24, 30, 31, 32, 33, 47, 73, 127, 128, 130, 180, 181, 183, 184, 185, 186, 188, 197, 220], "7": [80, 192], "8": [4, 22, 23, 30, 31, 32, 33, 47, 100, 180, 181, 183, 184, 185, 186, 188], "9": [46, 104], "97": [46, 104], "A": [4, 24, 26, 74, 79, 81, 86, 96, 98, 99, 100, 107, 108, 121, 147, 153, 154, 155, 160, 163, 197, 199, 219], "As": [24, 197], "At": [4, 24, 26, 96, 100, 163, 197], "But": [4, 86, 100], "By": [4, 70, 100, 199], "For": [4, 16, 17, 19, 24, 26, 36, 79, 81, 86, 96, 98, 99, 100, 107, 108, 127, 128, 130, 163, 164, 197, 199], "If": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 55, 58, 62, 63, 64, 66, 68, 70, 75, 76, 80, 86, 96, 100, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 141, 144, 145, 148, 149, 156, 157, 163, 164, 171, 179, 190, 192, 194, 197, 207, 208], "In": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108, 194], "It": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "The": [4, 5, 9, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 68, 70, 75, 76, 79, 80, 81, 86, 96, 98, 99, 100, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 178, 179, 180, 181, 190, 192, 197, 199, 215, 223], "There": [86, 96], "These": [46, 104], "To": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 98, 99, 100, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "__call__": [4, 24, 25, 100, 155, 173, 175, 197, 214, 215], "__extra_configurables__": [24, 197], "__init__": [4, 24, 79, 81, 86, 98, 99, 100, 107, 108, 121, 197], "_and_": 157, "_conv_forward": 199, "_f": [24, 197], "_x": [24, 197], "abl": [4, 100], "about": [86, 96], "abov": [86, 96], "acc": [4, 96, 100], "acceler": [4, 73, 100, 220], "accept": [27, 44, 46, 104, 131, 135, 199], "access": [121, 199], "accumul": [4, 100], "accumulate_grad_batch": [4, 73, 79, 81, 86, 98, 99, 100, 107, 108, 121, 220], "accuraci": [4, 96, 100], "acquir": [46, 104], "across": [4, 46, 100, 104], "action": 70, "activ": [13, 14, 16, 17, 19, 21, 22, 23, 29, 30, 31, 32, 33, 37, 38, 39, 40, 45, 47, 54, 58, 62, 63, 64, 68, 80, 111, 113, 114, 115, 116, 118, 119, 120, 126, 127, 128, 130, 132, 140, 144, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192], "activelearn": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 221, 223], "activelearningcriterion": [87, 88, 89, 91, 92, 93, 94, 95, 97], "actual": [4, 24, 26, 100, 163, 197], "ad": [3, 5, 124, 125], "add": [4, 86, 96, 100, 154, 219], "add_dataloader_idx": [4, 100], "add_detached_configur": 194, "add_imag": [4, 96, 100], "add_self_loop": [154, 219], "addit": [2, 3, 4, 24, 26, 79, 81, 86, 96, 98, 99, 100, 107, 108, 123, 124, 163, 197, 221], "address": 221, "adjac": [74, 147, 153, 154, 160, 219], "adjust": [4, 24, 26, 100, 163, 197, 221], "advanc": [4, 100], "adversari": [22, 23, 180, 181], "after": [4, 14, 16, 19, 24, 26, 68, 70, 86, 96, 100, 111, 127, 130, 156, 157, 163, 197, 221], "after_last_lay": [19, 130], "afterward": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "aggreg": [78, 151], "all": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 100, 109, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 163, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "allclos": [28, 182], "allow": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 221], "allow_miss": 70, "alpha": [46, 104], "alreadi": [24, 197], "also": [4, 8, 11, 12, 24, 26, 46, 53, 54, 65, 79, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 140, 163, 197], "although": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "among": [24, 197], "an": [4, 5, 24, 25, 26, 34, 63, 70, 74, 78, 86, 96, 100, 121, 125, 133, 147, 151, 163, 175, 190, 197], "ani": [3, 4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128, 130, 131, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 183, 184, 185, 186, 188, 190, 194, 195, 197, 198, 204, 214], "annot": [85, 96], "annotate_random": 85, "anoth": [24, 197], "anyth": [4, 96, 100], "append": [4, 14, 16, 19, 42, 68, 70, 100, 111, 121, 127, 130, 171, 199], "append_dropout": [68, 70, 199], "appli": [4, 5, 16, 17, 19, 24, 26, 46, 55, 63, 100, 104, 125, 127, 128, 130, 141, 163, 190, 197, 199, 207, 208], "applic": [5, 8, 9, 11, 12, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 53, 54, 58, 62, 63, 64, 65, 66, 70, 75, 76, 79, 81, 96, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 221, 223], "apply_to_first": [19, 130], "apply_to_first_lay": [17, 128], "apply_to_last_lay": [16, 17, 127, 128], "ar": [4, 5, 8, 9, 11, 12, 13, 16, 17, 19, 21, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 51, 53, 54, 58, 62, 63, 64, 65, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 183, 184, 185, 186, 188, 190, 197, 199], "arbitrari": [86, 96], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219], "argmax": [4, 96, 100], "argument": [4, 5, 8, 9, 11, 12, 13, 16, 17, 19, 21, 24, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 53, 54, 58, 62, 63, 64, 65, 66, 70, 74, 75, 76, 78, 79, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 147, 148, 149, 151, 163, 164, 171, 179, 182, 190, 197], "around": [24, 197], "arrai": [4, 24, 34, 46, 100, 104, 133, 197], "assert_not_positional_only_and_variad": [26, 163], "assign": [86, 96], "associ": [4, 86, 100], "assum": [24, 80, 192, 197], "attempt": [4, 100], "attent": [5, 55, 76, 80, 125, 141, 149, 192, 207, 208], "attn": [55, 141, 207, 208], "attr": [25, 175, 199], "attribut": [4, 5, 9, 13, 14, 16, 17, 18, 19, 21, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 51, 54, 56, 58, 62, 63, 64, 66, 68, 70, 73, 75, 76, 80, 100, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 134, 137, 138, 140, 144, 145, 148, 149, 155, 163, 164, 165, 171, 179, 183, 184, 185, 186, 188, 190, 192, 195, 198, 199, 220], "attribute1": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "attribute2": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "attribute_nam": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "attribute_valu": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "attrivut": [36, 164], "auto": [4, 73, 100, 220], "automat": [4, 24, 26, 79, 81, 86, 98, 99, 100, 107, 108, 163, 197], "automatic_optim": [4, 79, 81, 86, 98, 99, 100, 107, 108], "avail": [4, 24, 86, 100, 197], "available_styl": [24, 197], "averag": [49, 137], "b": [46, 104], "back": [4, 96, 100], "backbon": [30, 31, 32, 33, 46, 47, 104, 183, 184, 185, 186, 188], "backward": [4, 86, 100], "bar": [4, 79, 81, 86, 98, 99, 100, 107, 108], "barebon": [73, 220], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220], "base_channel": [5, 125], "baseblock": [14, 45, 68, 111, 118], "basepredictionwrit": [4, 100], "baseresidu": [15, 112], "batch": [4, 24, 28, 32, 34, 46, 63, 79, 80, 81, 86, 96, 98, 99, 100, 104, 107, 108, 121, 133, 182, 185, 190, 192, 197], "batch_first": [63, 190], "batch_idx": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108], "batch_index": [34, 55, 133, 141, 207, 208], "batch_progress": 122, "batch_siz": [4, 16, 17, 19, 22, 23, 24, 28, 32, 76, 80, 100, 127, 128, 130, 149, 180, 181, 182, 185, 192, 197], "batchnorm": [14, 111, 168, 169, 170], "batchnorm1d": [54, 140, 168, 169, 170], "batchnorm2d": [14, 19, 111, 130, 168, 169, 170], "batchnorm3d": [168, 169, 170], "been": [4, 24, 96, 100, 197], "befor": [24, 42, 46, 70, 104, 158, 171, 197], "before_first": [19, 130], "begin": 96, "behavior": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "below": [4, 86, 100], "benchmark": [73, 220], "beta": [46, 104], "between": [4, 46, 86, 96, 100, 104], "between_loss": [46, 104], "between_loss_weight": [46, 104], "beyond": [24, 26, 163, 197], "bf16": [73, 220], "bia": [24, 54, 140, 168, 169, 197], "bidirect": [63, 64, 68, 144, 190], "bidirection": [63, 190], "bit": [4, 86, 100], "block": [5, 7, 14, 16, 17, 18, 19, 21, 22, 23, 29, 45, 51, 54, 63, 64, 66, 68, 70, 76, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 127, 128, 129, 130, 132, 138, 140, 144, 145, 149, 179, 180, 181, 190, 221, 223], "bool": [4, 5, 16, 17, 19, 22, 23, 24, 63, 70, 73, 100, 122, 125, 127, 128, 130, 169, 180, 181, 190, 197, 199, 220], "boolean": 199, "both": [3, 4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "bottleneck": [18, 129], "build": [4, 14, 20, 21, 22, 23, 24, 26, 45, 54, 76, 100, 111, 118, 140, 149, 156, 158, 163, 178, 179, 180, 181, 197], "build_arguments_from": [26, 163], "built": [24, 197], "built_lay": [24, 26, 163, 197], "built_modul": [4, 24, 26, 100, 163, 197], "cach": 121, "calcul": [4, 46, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108], "call": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 96, 100, 104, 109, 111, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 157, 160, 163, 164, 172, 173, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 219], "call_with_dummy_data": [14, 45, 111, 118], "callabl": [24, 46, 56, 104, 165, 197, 199, 214, 215, 216, 217, 218], "callback": [4, 73, 86, 100, 121, 122, 220, 221, 223], "calling_st": [24, 197], "can": [4, 5, 9, 13, 16, 17, 19, 21, 22, 23, 24, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 180, 181, 182, 190, 197, 215], "capabl": 221, "care": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "case": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108, 194], "center": [46, 104], "certain": 199, "ch_in": [16, 17, 19, 22, 127, 128, 130, 180], "ch_out": [16, 17, 19, 23, 127, 128, 130, 181], "chang": [19, 130], "channel": [4, 5, 16, 17, 20, 21, 22, 23, 36, 46, 80, 100, 104, 125, 127, 128, 164, 178, 179, 180, 181, 192], "channel_attent": [5, 125], "check": [96, 199], "check_val_every_n_epoch": [73, 220], "checkpointio": [73, 220], "child": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 194, 197], "child_attribut": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "child_attribute_valu": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "child_modul": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "child_module_attribut": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "children": [4, 24, 100, 197], "choos": [4, 86, 100], "cl": [176, 199, 200], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220], "class_conditioned_model": [22, 23, 180, 181], "classmethod": [24, 36, 46, 104, 164, 197], "classtyp": [26, 36, 163, 164, 199], "clear": 121, "clone_metr": [4, 100], "close": [46, 104], "closur": [4, 86, 100], "clusterenviron": [73, 220], "cnn": [19, 130], "collect": [24, 86, 96, 197], "combin": [13, 126], "combinelayeractiv": [74, 78, 147, 151], "common": 221, "commonli": [54, 140], "commun": [4, 100], "complet": [4, 24, 26, 100, 163, 197], "compon": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 221, 223], "comput": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 86, 98, 99, 100, 107, 108, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "compute_imq": [81, 108], "compute_kernel": [81, 108], "compute_loss": [4, 8, 11, 12, 46, 53, 79, 81, 100, 101, 102, 103, 104, 105, 107, 108], "compute_mmd": [81, 108], "condit": [4, 5, 22, 23, 86, 100, 125, 180, 181, 199], "config": [16, 17, 19, 127, 128, 130], "configitem": 196, "configitemlist": 194, "configur": [4, 5, 9, 13, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 58, 62, 64, 66, 70, 75, 77, 86, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 132, 134, 138, 144, 145, 148, 150, 163, 164, 171, 179, 197, 199], "configure_optim": [4, 86, 100], "connect": [54, 140], "consist": [5, 30, 31, 32, 33, 46, 47, 104, 125, 183, 184, 185, 186, 188], "consistenct": [46, 104], "console_kwarg": 122, "constant": [46, 104], "construct": [24, 25, 175, 197], "contain": [3, 4, 24, 30, 31, 32, 33, 47, 86, 100, 124, 183, 184, 185, 186, 188, 197], "context": [5, 125], "context_embedding_dim": [5, 125], "control": [4, 22, 23, 79, 81, 86, 98, 99, 100, 107, 108, 180, 181], "conv": [169, 170], "conv1d": [169, 170], "conv2d": [36, 164, 169, 170, 199], "conv3d": [169, 170], "conv4": [4, 100], "conv5": [4, 100], "convblock": [22, 180], "convolut": [14, 16, 17, 19, 22, 23, 36, 45, 68, 111, 118, 127, 128, 130, 164, 180, 181], "convolutionaldecoder2d": [23, 181], "convolutionalencoder2d": [6, 20, 22, 177, 178, 180], "convolutionalencoderdecoder2d": [21, 77, 150, 179], "convolutionalneuralnetwork": [16, 17, 127, 128], "convtranspose1d": [169, 170], "convtranspose2d": [14, 16, 111, 127, 169, 170], "convtranspose3d": [169, 170], "convtransposeblock": [23, 181], "coordin": [46, 104], "core": [4, 100, 121], "correct": [4, 86, 96, 100], "correspond": [4, 5, 24, 86, 100, 125, 197], "could": [4, 86, 100], "creat": [4, 24, 26, 28, 30, 31, 32, 33, 46, 47, 80, 100, 104, 156, 163, 182, 183, 184, 185, 186, 188, 192, 197], "create_data": [4, 100], "create_optimizer_with_param": [4, 100], "creation": 221, "criterion": [89, 95, 97], "crop": [46, 104], "cross": [5, 125], "crucial": [4, 24, 26, 100, 163, 197], "current": [4, 24, 26, 100, 163, 197], "current_config": [24, 197], "custom": [4, 16, 17, 19, 24, 27, 44, 63, 86, 100, 127, 128, 130, 131, 135, 190, 197, 221], "cutoff": [46, 104], "cyclegan": [20, 21, 178, 179], "d": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108, 194], "data": [3, 4, 14, 24, 30, 31, 32, 33, 45, 47, 63, 79, 81, 86, 96, 98, 99, 100, 107, 108, 111, 118, 124, 183, 184, 185, 186, 188, 190, 197], "databas": [4, 100], "dataload": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108], "dataloader_idx": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108], "dataset": [4, 24, 46, 85, 90, 96, 100, 104, 197], "dcgan": [22, 23, 180, 181], "dcgan_discrimin": [22, 180], "ddp": [4, 100], "ddp_spawn": [4, 100], "deadlock": [4, 100], "debug": [24, 197], "dec": [16, 127], "decid": [4, 8, 11, 12, 46, 53, 65, 79, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "decod": [4, 5, 16, 18, 79, 81, 86, 98, 99, 100, 107, 108, 125, 127, 129], "decor": [24, 155, 156, 157, 158, 159, 197], "deep": [22, 23, 180, 181, 221], "deepcopi": 155, "deeplai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223], "deeplaylay": 70, "deeplaymodul": [2, 3, 4, 5, 9, 13, 14, 16, 17, 18, 19, 21, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 58, 59, 60, 62, 63, 64, 66, 68, 70, 72, 75, 76, 80, 82, 100, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 152, 153, 154, 160, 163, 164, 171, 179, 182, 188, 190, 192, 194, 198, 199, 204, 206, 207, 219], "deepspe": [4, 79, 81, 86, 98, 99, 100, 107, 108], "def": [4, 24, 36, 79, 81, 86, 96, 98, 99, 100, 107, 108, 121, 164, 197], "default": [4, 5, 14, 16, 17, 19, 24, 30, 31, 32, 33, 36, 45, 46, 47, 54, 63, 68, 70, 76, 80, 86, 96, 100, 104, 111, 118, 125, 127, 128, 130, 140, 149, 164, 183, 184, 185, 186, 188, 190, 192, 197, 199, 215], "default_root_dir": [73, 220], "defin": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 104, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "definit": 221, "degre": [153, 154, 160, 219], "deleg": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "dens": [54, 80, 140, 192], "dense_top": [80, 192], "descript": 122, "design": [24, 63, 190, 197], "detach": [4, 24, 100, 197], "detachedconfigitem": 196, "detail": [4, 16, 17, 19, 100, 127, 128, 130], "detect": [46, 104], "detect_anomali": [73, 220], "detect_singl": [46, 104], "determin": [4, 100], "determinist": [73, 220], "devic": [4, 24, 73, 100, 197, 220], "dict": [3, 4, 5, 24, 27, 30, 31, 32, 33, 47, 56, 73, 79, 81, 86, 96, 98, 99, 100, 107, 108, 124, 125, 131, 165, 183, 184, 185, 186, 188, 194, 197, 220], "dictionari": [3, 4, 24, 47, 79, 81, 86, 96, 98, 99, 100, 107, 108, 124, 188, 197], "differ": [24, 26, 63, 163, 190, 197], "dim": [4, 96, 100], "dimens": [5, 22, 23, 125, 180, 181], "direct": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "directli": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "disabl": [4, 73, 96, 100, 220], "disable_histori": [73, 220], "disagr": [46, 104], "discrimin": [20, 22, 178, 180], "disk": [4, 100], "distanc": [30, 183], "distribut": [4, 86, 96, 100], "divid": [80, 192], "dl": [4, 24, 26, 30, 31, 32, 33, 47, 80, 100, 121, 163, 183, 184, 185, 186, 188, 192, 197], "dm": [4, 100], "do": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "document": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 188, 190, 192, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220], "doe": [194, 199], "don": [4, 96, 100], "download": [86, 96], "dropout": [19, 39, 41, 54, 62, 63, 64, 68, 70, 115, 120, 130, 134, 140, 144, 190], "dtype": [24, 197], "dummi": [14, 45, 111, 118], "dure": [4, 24, 26, 100, 121, 157, 163, 197], "dynam": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 221], "e": [4, 79, 81, 86, 98, 99, 100, 107, 108, 194], "each": [4, 19, 30, 31, 32, 33, 34, 47, 48, 49, 52, 54, 60, 63, 72, 76, 80, 82, 100, 130, 133, 136, 137, 139, 140, 143, 146, 149, 152, 153, 154, 160, 183, 184, 185, 186, 188, 190, 192, 219], "earli": [4, 100], "easi": 221, "edg": [30, 31, 32, 33, 47, 48, 49, 52, 60, 72, 74, 78, 82, 136, 137, 139, 143, 146, 147, 151, 152, 154, 183, 184, 185, 186, 188, 219], "edge_attr": [30, 31, 32, 33, 47, 48, 49, 52, 60, 72, 82, 136, 137, 139, 143, 146, 152, 183, 184, 185, 186, 188], "edge_in_featur": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "edge_index": [30, 31, 32, 33, 47, 48, 49, 52, 60, 72, 82, 136, 137, 139, 143, 146, 152, 183, 184, 185, 186, 188], "edgefeat": [74, 147], "effect": [24, 26, 163, 197], "either": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 194, 197], "element": [2, 3, 34, 123, 124, 133], "embed": [5, 22, 23, 63, 125, 180, 181, 190], "embedd": [80, 192], "embedding_dim": [22, 23, 180, 181], "enabl": [4, 5, 96, 100, 125], "enable_checkpoint": [73, 220], "enable_graph": [4, 100], "enable_model_summari": [73, 220], "enable_progress_bar": [73, 220], "enc": [17, 128], "encod": [4, 5, 17, 18, 30, 31, 32, 33, 47, 76, 79, 80, 81, 86, 98, 99, 100, 107, 108, 125, 128, 129, 149, 183, 184, 185, 186, 188, 192], "end": [4, 42, 46, 86, 96, 100, 104, 121, 171], "enforc": [4, 86, 100], "engin": [73, 220], "enhanc": [24, 197], "ensur": [4, 24, 26, 100, 163, 197], "epoch": [4, 86, 96, 100, 121], "epoch_mean": 121, "equival": [18, 19, 29, 51, 54, 63, 64, 66, 76, 80, 129, 130, 132, 138, 140, 144, 145, 149, 190, 192], "error": [4, 70, 100], "especi": [24, 197], "essenti": [4, 24, 26, 100, 163, 197], "etc": [4, 24, 26, 100, 163, 197], "eval": [4, 96, 100], "everi": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "examin": [24, 197], "exampl": [34, 79, 81, 86, 96, 98, 99, 107, 108, 121, 133, 199], "example_imag": [4, 96, 100], "examplemodul": [4, 24, 26, 100, 163, 197], "except": [63, 190], "exclud": 199, "execut": [68, 70], "exist": [4, 24, 26, 100, 163, 197], "expect": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "expected_input_shap": [14, 111], "experi": [4, 46, 96, 100, 104], "explicitli": [4, 100], "express": 215, "extend": [24, 42, 171, 197, 221], "extendedconstructormeta": [24, 176, 197], "extens": [4, 24, 100, 197], "extern": [4, 24, 36, 56, 100, 161, 162, 164, 165, 166, 167, 197, 221, 223], "extra": [27, 44, 131, 135], "extra_repr": [27, 44, 131, 135], "f": [24, 194, 197], "facilit": 221, "fake": 86, "fals": [4, 16, 17, 19, 22, 23, 54, 63, 70, 73, 79, 81, 86, 98, 99, 100, 107, 108, 122, 127, 128, 130, 140, 180, 181, 190, 194, 199, 220], "fan_out": 169, "fancier": [4, 79, 81, 86, 98, 99, 100, 107, 108], "fast_dev_run": [73, 220], "featur": [4, 5, 16, 17, 19, 22, 23, 28, 30, 31, 32, 33, 47, 48, 49, 52, 54, 60, 63, 72, 74, 76, 78, 80, 82, 100, 125, 127, 128, 130, 136, 137, 139, 140, 143, 146, 147, 149, 151, 152, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192], "feature_dim": [23, 181], "features_dim": [22, 23, 180, 181], "feed": [76, 149], "feed_forward": [76, 149], "fetch_embed": [34, 133], "fill_bia": 169, "filter": 199, "final": [4, 24, 26, 63, 100, 163, 190, 197], "find": [46, 104, 223], "find_local_maxima": [46, 104], "first": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 80, 86, 100, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 192, 197, 199], "fit": [4, 86, 96, 100, 121], "flag": [5, 125], "flexibl": [63, 190], "float": [4, 46, 63, 68, 70, 73, 100, 104, 168, 169, 170, 190, 220], "float16": [73, 220], "focus": 221, "follow": [30, 31, 32, 33, 47, 74, 78, 86, 96, 147, 151, 183, 184, 185, 186, 188, 194, 223], "former": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "forward": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 76, 77, 79, 80, 81, 82, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 163, 164, 172, 174, 177, 178, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 219], "found": [4, 24, 68, 70, 86, 100, 197], "four": [22, 23, 180, 181], "free": 121, "frequenc": [4, 86, 100], "fresh": [24, 197], "from": [4, 16, 17, 19, 24, 26, 30, 31, 32, 33, 36, 42, 46, 47, 70, 80, 96, 100, 104, 121, 127, 128, 130, 163, 164, 171, 183, 184, 185, 186, 188, 192, 194, 197, 199], "fromdict": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "fulli": [4, 24, 26, 54, 100, 140, 163, 197, 215], "func": [24, 56, 155, 156, 157, 158, 159, 165, 197, 199, 214, 215], "function": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 104, 109, 111, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 160, 164, 172, 173, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 219, 221], "g": [4, 79, 81, 86, 98, 99, 100, 107, 108], "gan": [4, 79, 81, 86, 98, 99, 100, 107, 108], "gelu": [63, 190], "gener": [4, 21, 22, 23, 24, 26, 42, 57, 69, 96, 100, 163, 171, 172, 173, 174, 179, 180, 181, 197], "geometr": [30, 31, 32, 33, 46, 47, 104, 183, 184, 185, 186, 188], "get": [24, 74, 78, 147, 151, 197], "get_annotated_data": 85, "get_annotated_label": 85, "get_annotated_sampl": 85, "get_argspec": [24, 26, 163, 197], "get_default_activ": [14, 45, 111, 118], "get_default_merg": [14, 45, 111, 118], "get_default_norm": [14, 45, 68, 111, 118], "get_default_shortcut": [14, 45, 111, 118], "get_detection_scor": [46, 104], "get_forward_arg": [13, 74, 78, 126, 147, 151], "get_from_user_config": [24, 197], "get_init_arg": [24, 26, 163, 197], "get_num_annot": 85, "get_signatur": [24, 26, 163, 197], "get_subconfig": [24, 197], "get_unannotated_data": 85, "get_unannotated_label": 85, "get_unannotated_sampl": 85, "get_user_configur": [24, 197], "getitem_with_select": [24, 197], "give": [4, 100], "given": [4, 5, 24, 42, 100, 125, 153, 154, 160, 171, 197, 219], "global": [24, 28, 32, 182, 185, 197], "goe": [4, 96, 100], "gpu": [4, 79, 81, 86, 98, 99, 100, 107, 108], "gradient": [4, 96, 100], "gradient_clip_algorithm": [73, 220], "gradient_clip_v": [73, 220], "gradient_penalti": 86, "graph": [4, 28, 30, 31, 32, 33, 74, 100, 147, 153, 154, 160, 182, 183, 184, 185, 186, 219], "graphtonodesmpm": [33, 186], "grey54": 122, "grey70": 122, "grid": [4, 96, 100], "group": [4, 100], "gru": [63, 68, 190], "h": [46, 104], "ha": [4, 24, 26, 79, 81, 86, 96, 98, 99, 100, 107, 108, 163, 194, 197], "handl": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "happen": [4, 100], "hardwar": [86, 96], "hasattr": 199, "have": [4, 24, 46, 86, 96, 100, 104, 197, 199], "head": [5, 30, 31, 32, 33, 47, 76, 80, 125, 149, 183, 184, 185, 186, 188, 192], "height": [46, 104], "helper": [77, 150], "here": [4, 24, 79, 81, 86, 96, 98, 99, 100, 107, 108, 121, 197, 223], "hidden": [16, 17, 19, 21, 22, 23, 29, 30, 31, 32, 33, 47, 51, 54, 63, 64, 66, 76, 80, 127, 128, 130, 132, 138, 140, 144, 145, 149, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192], "hidden_channel": [19, 130], "hidden_featur": [30, 31, 32, 33, 47, 54, 63, 76, 80, 140, 149, 183, 184, 185, 186, 188, 190, 192], "histori": [73, 121, 220], "hook": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 109, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "how": [4, 86, 100], "howev": [86, 96, 199], "i": [4, 5, 9, 13, 16, 17, 19, 21, 22, 23, 24, 25, 26, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 55, 58, 62, 63, 64, 66, 68, 70, 74, 75, 76, 79, 80, 81, 86, 96, 98, 99, 100, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 133, 134, 138, 140, 141, 144, 145, 147, 148, 149, 163, 164, 171, 175, 179, 180, 181, 190, 192, 194, 197, 199, 207, 208, 215, 221, 223], "ident": [4, 16, 17, 19, 30, 31, 32, 33, 47, 54, 55, 80, 100, 127, 128, 130, 140, 141, 183, 184, 185, 186, 188, 192, 207, 208], "ignor": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 104, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "imag": [4, 20, 21, 46, 80, 96, 100, 104, 178, 179, 192], "image_s": [80, 192], "immedi": [4, 100, 156, 157, 158], "implement": [4, 24, 27, 44, 86, 96, 98, 99, 100, 131, 135, 197], "improp": [4, 100], "in_channel": [5, 16, 17, 19, 20, 21, 36, 80, 125, 127, 128, 130, 164, 178, 179, 192], "in_featur": [24, 26, 54, 63, 76, 140, 149, 163, 190, 197], "includ": [4, 5, 79, 81, 86, 96, 98, 99, 100, 107, 108, 125, 199], "include_layer_classtyp": 199, "independ": [24, 26, 163, 197], "index": [4, 34, 42, 47, 79, 81, 86, 96, 98, 99, 100, 107, 108, 133, 154, 171, 188, 219], "indic": [34, 46, 85, 104, 133], "infer": [4, 16, 17, 19, 24, 30, 31, 32, 33, 47, 54, 76, 80, 100, 127, 128, 130, 140, 149, 183, 184, 185, 186, 188, 192, 197], "inference_mod": [73, 220], "inform": [5, 27, 44, 86, 96, 125, 131, 135], "init": 157, "initi": [4, 24, 26, 36, 96, 100, 163, 164, 168, 169, 170, 197, 221, 223], "initialize_tensor": [168, 169, 170], "inp": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "input": [2, 4, 5, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 44, 46, 47, 51, 54, 55, 63, 64, 66, 76, 80, 100, 104, 123, 125, 127, 128, 130, 132, 135, 138, 140, 141, 144, 145, 149, 163, 164, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 199, 207, 208], "input_block": [19, 130], "input_channel": [22, 180], "input_data": [24, 197], "input_seq": [76, 149], "input_shap": [80, 192], "insert": [19, 42, 68, 70, 130, 171, 199], "insert_dropout": [68, 70, 199], "insid": 215, "inspect": [24, 197], "instanc": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 160, 163, 164, 172, 174, 175, 177, 179, 180, 181, 182, 188, 190, 192, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "instance_count": 155, "instanti": [4, 24, 26, 100, 163, 197], "instead": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 158, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "int": [4, 5, 9, 14, 16, 17, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 42, 46, 47, 54, 63, 73, 76, 80, 100, 104, 110, 111, 122, 125, 127, 128, 130, 140, 149, 171, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192, 197, 214, 215, 216, 217, 220], "integ": [86, 96, 215], "integr": [5, 125], "intellig": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "interest": [4, 96, 100], "intern": [4, 24, 26, 79, 81, 86, 98, 99, 100, 107, 108, 163, 197], "interv": [4, 86, 100], "introduc": 221, "inverse_fn": [46, 104], "is_construct": [24, 197], "is_recurr": 68, "isinst": 199, "issu": 221, "item": [4, 96, 100], "iter": [4, 42, 56, 73, 79, 81, 86, 96, 98, 99, 100, 107, 108, 165, 171, 194, 196, 220], "its": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 96, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 133, 134, 138, 140, 144, 145, 148, 149, 153, 154, 160, 163, 164, 171, 179, 190, 197, 219], "itself": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "just": [5, 125], "k": 194, "keep": 121, "keep_list": 194, "kei": [3, 4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 194, 197, 199], "kera": 121, "kernel": [19, 130], "kernel_s": [14, 16, 19, 111, 127, 130, 199], "keyword": [4, 5, 8, 9, 11, 12, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 53, 54, 58, 62, 63, 64, 65, 66, 70, 75, 76, 79, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "kind": [4, 100], "know": [4, 86, 100], "known": [36, 54, 140, 164, 215], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219], "kwd": [77, 150], "l": 121, "l1loss": [46, 104], "label": [22, 23, 180, 181], "labels_hat": [4, 96, 100], "lack": 194, "lambda": [24, 197], "larg": [24, 197], "larger": [24, 197], "last": [19, 29, 51, 54, 63, 64, 66, 76, 80, 130, 132, 138, 140, 144, 145, 149, 190, 192], "latent": [23, 181], "latent_dim": [23, 181], "latter": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "layer": [4, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 47, 51, 54, 55, 58, 62, 63, 64, 66, 68, 70, 76, 80, 100, 111, 113, 114, 115, 116, 117, 119, 120, 126, 127, 128, 129, 130, 132, 134, 138, 140, 141, 144, 145, 149, 163, 173, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 199, 207, 208], "layerlist": [57, 69, 172, 174], "layersync": [73, 220], "lazi": [36, 164], "lbfg": [4, 86, 100], "lead": [4, 100], "leaky_relu": [63, 190], "learn": [4, 46, 86, 100, 104, 221], "learningratemonitor": [4, 86, 100], "leav": 122, "len": [4, 96, 100], "length": [24, 63, 190, 197], "librari": 221, "lightn": [4, 86, 96, 100, 121], "lightningmodul": [4, 86, 100, 121], "like": [4, 16, 17, 19, 24, 26, 30, 31, 32, 33, 46, 47, 54, 79, 80, 81, 86, 96, 98, 99, 100, 104, 107, 108, 121, 127, 128, 130, 140, 163, 183, 184, 185, 186, 188, 192, 197], "limit_predict_batch": [73, 220], "limit_test_batch": [73, 220], "limit_train_batch": [73, 220], "limit_val_batch": [73, 220], "line": [27, 44, 131, 135], "linear": [4, 19, 24, 26, 54, 100, 130, 140, 163, 169, 170, 197], "list": [4, 5, 9, 16, 17, 19, 24, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 47, 54, 56, 58, 62, 73, 75, 76, 80, 86, 100, 110, 113, 114, 115, 116, 119, 120, 125, 127, 128, 130, 134, 140, 148, 149, 165, 171, 172, 173, 174, 183, 184, 185, 186, 188, 192, 194, 195, 196, 197, 220], "list_nam": 199, "liter": [4, 13, 19, 37, 38, 39, 40, 41, 43, 58, 62, 63, 70, 73, 75, 100, 113, 114, 115, 116, 117, 119, 120, 126, 130, 134, 148, 190, 220], "load": [4, 100], "local": [46, 104], "local_consist": [46, 104], "log": [4, 24, 86, 96, 100, 121, 197], "log_dict": [4, 96, 100], "log_every_n_step": [73, 220], "log_input": [24, 197, 199], "log_metr": [4, 100], "log_output": [24, 197, 199], "log_tensor": [24, 197], "log_var": [79, 107], "logger": [4, 46, 73, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 220], "logger_kwarg": [4, 100], "loghistori": [4, 100], "logic": [4, 24, 100, 197], "long": [28, 32, 182, 185], "loop": [154, 219], "loss": [4, 46, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 121], "lowercas": 70, "lr": [4, 86, 100], "lr_schedul": [4, 86, 100], "lr_scheduler_config": [4, 86, 100], "lstm": [63, 68, 190], "made": [4, 86, 100], "magik": [30, 183], "mai": [4, 100], "make": [24, 63, 64, 144, 190, 197], "make_grid": [4, 96, 100], "manag": [24, 197], "mani": [4, 86, 100], "manual": [4, 79, 81, 86, 98, 99, 100, 107, 108], "map": [5, 46, 104, 125], "mask": [46, 104], "match": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "matrix": [55, 74, 141, 147, 153, 154, 160, 207, 208, 219], "max": [46, 104], "max_epoch": [4, 73, 100, 220], "max_step": [73, 220], "max_tim": [73, 220], "maxima": [46, 104], "maximum": [4, 48, 100, 136], "maxpool2d": [14, 16, 17, 19, 111, 127, 128, 130], "mean": [4, 28, 79, 81, 86, 98, 99, 100, 107, 108, 121, 170, 182], "measur": [46, 104], "mechan": [5, 125], "memo": [24, 197], "memori": 121, "merg": [14, 45, 111, 118], "mergeop": [10, 14, 45, 111, 118, 201, 202, 205], "messag": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "messagepassingneuralnetwork": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "meta": [24, 25, 175, 176, 197], "metaclass": [25, 175], "method": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 188, 192, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220], "metric": [4, 46, 79, 81, 86, 98, 99, 100, 104, 107, 108, 121, 122], "metric_attribut": [4, 100], "metric_to_track": [4, 86, 100], "metric_v": [4, 86, 100], "metrics_format": 122, "metrics_preprocess": [4, 8, 100, 101], "metrics_text_delimit": 122, "might": [4, 86, 96, 100], "min_epoch": [73, 220], "min_step": [73, 220], "minimum": [52, 139], "mix": [4, 73, 100, 220], "mlp": [19, 30, 31, 32, 33, 47, 54, 130, 140, 183, 184, 185, 186, 188], "mode": [4, 14, 16, 19, 46, 86, 96, 100, 104, 111, 127, 130, 169], "model": [4, 5, 8, 11, 12, 22, 23, 24, 30, 31, 32, 33, 46, 47, 53, 63, 65, 79, 80, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 125, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 221, 223], "modif": 221, "modifi": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 159, 163, 164, 171, 179, 190, 197], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 163, 164, 165, 168, 169, 170, 171, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219, 221], "modular": 221, "modulelist": [42, 171], "monitor": [4, 86, 100], "more": [4, 16, 17, 19, 86, 96, 100, 127, 128, 130], "most": [4, 24, 26, 100, 163, 197], "mpm": [30, 31, 32, 33, 183, 184, 185, 186], "mpn": [31, 32, 33, 47, 74, 78, 147, 151, 184, 185, 186, 188], "mu": [79, 107], "multi": [4, 27, 44, 54, 79, 81, 86, 98, 99, 100, 107, 108, 131, 135, 140], "multihead": [55, 76, 80, 141, 149, 192, 207, 208], "multiheadcrossattent": 208, "multilayerperceptron": [30, 31, 32, 33, 35, 47, 50, 71, 80, 83, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193], "multipl": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "must": [3, 4, 63, 79, 81, 86, 96, 98, 99, 100, 107, 108, 124, 190], "mycallback": 121, "mylightningmodul": 121, "mymodel": [4, 100], "mymodul": [24, 197], "n": [85, 86, 96, 98, 99], "n_residual_block": [21, 179], "n_transform": [46, 104], "name": [4, 5, 9, 13, 16, 17, 19, 21, 24, 25, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 68, 70, 75, 76, 86, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 168, 169, 170, 171, 175, 179, 190, 194, 197, 199], "named_children": [4, 100], "ndarrai": 85, "necessari": [4, 24, 26, 86, 96, 100, 163, 197], "need": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 96, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "network": [19, 22, 23, 28, 29, 31, 32, 33, 47, 51, 54, 63, 64, 66, 76, 80, 130, 132, 138, 140, 144, 145, 149, 180, 181, 182, 184, 185, 186, 188, 190, 192, 221], "neural": [19, 28, 31, 32, 33, 47, 54, 63, 130, 140, 182, 184, 185, 186, 188, 190, 221], "new": [4, 24, 26, 70, 96, 100, 156, 163, 197, 199], "newli": [4, 24, 26, 100, 163, 197], "next": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108], "nn": [4, 8, 11, 12, 14, 16, 17, 19, 24, 26, 30, 31, 32, 33, 36, 42, 46, 47, 53, 54, 55, 63, 65, 79, 80, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 127, 128, 130, 140, 141, 163, 164, 168, 169, 170, 171, 183, 184, 185, 186, 188, 190, 192, 197, 199, 207, 208], "node": [28, 30, 31, 32, 33, 47, 48, 49, 52, 60, 72, 74, 78, 82, 136, 137, 139, 143, 146, 147, 151, 152, 153, 154, 160, 182, 183, 184, 185, 186, 188, 219], "node_in_featur": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "non": [199, 221], "none": [4, 5, 9, 13, 14, 16, 17, 19, 22, 23, 24, 26, 36, 37, 38, 39, 40, 41, 42, 43, 46, 54, 55, 58, 62, 63, 68, 70, 73, 75, 76, 79, 80, 81, 86, 96, 98, 99, 100, 104, 107, 108, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 125, 126, 127, 128, 130, 134, 140, 141, 148, 149, 163, 164, 171, 180, 181, 190, 192, 194, 195, 197, 207, 208, 215, 220], "nonlinear": 169, "normal": [4, 14, 18, 19, 29, 38, 39, 40, 41, 45, 46, 54, 58, 62, 63, 64, 68, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 111, 114, 115, 116, 118, 119, 120, 121, 129, 130, 132, 134, 140, 144, 153, 154, 160, 190, 219], "note": [4, 24, 26, 30, 31, 32, 33, 47, 79, 81, 86, 96, 98, 99, 100, 107, 108, 121, 163, 183, 184, 185, 186, 188, 197, 199], "now": [4, 24, 26, 100, 163, 197], "num_attention_head": [5, 125], "num_class": [5, 22, 23, 125, 180, 181], "num_edg": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "num_featur": [28, 182], "num_head": [76, 80, 149, 192], "num_nod": [28, 30, 31, 32, 33, 47, 73, 154, 182, 183, 184, 185, 186, 188, 219, 220], "num_output": [46, 104], "num_sanity_val_step": [73, 220], "number": [4, 5, 16, 17, 19, 20, 21, 22, 23, 30, 31, 32, 33, 36, 46, 47, 54, 63, 76, 80, 100, 104, 125, 127, 128, 130, 140, 149, 164, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192], "numpi": [4, 100], "obj": 176, "object": [4, 24, 26, 30, 31, 32, 33, 46, 47, 84, 100, 104, 155, 156, 159, 163, 183, 184, 185, 186, 188, 195, 197, 198, 214, 215], "ocl": [36, 164], "offer": 221, "often": [4, 86, 100], "on_epoch": [4, 100], "on_miss": 70, "on_step": [4, 100], "on_train_batch_end": 121, "on_train_end": [46, 104], "on_train_epoch_end": 121, "on_train_start": 96, "on_validation_epoch_end": 121, "one": [2, 3, 4, 5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 54, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 72, 75, 76, 77, 80, 82, 86, 96, 100, 109, 110, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 160, 163, 164, 171, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "onli": [4, 24, 26, 79, 81, 86, 96, 98, 99, 100, 107, 108, 157, 163, 197, 199], "oom": [4, 100], "op": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 221, 223], "oper": [3, 4, 14, 45, 96, 100, 111, 118, 124, 215], "opt1": [4, 79, 81, 86, 98, 99, 100, 107, 108], "opt2": [4, 79, 81, 86, 98, 99, 100, 107, 108], "optim": [0, 1, 4, 46, 61, 67, 79, 81, 86, 98, 99, 100, 104, 107, 108, 161, 162, 166, 167, 221], "optimizer_step": [4, 86, 100], "option": [4, 5, 9, 13, 14, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 54, 58, 62, 63, 64, 66, 68, 70, 75, 76, 86, 100, 104, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 199, 215], "order": [9, 37, 38, 39, 40, 41, 58, 62, 75, 110, 113, 114, 115, 116, 119, 120, 134, 148], "organ": 223, "origin": [24, 197], "other": [4, 24, 26, 63, 70, 100, 163, 190, 197], "otherwis": [55, 141, 207, 208], "out": [4, 24, 47, 79, 81, 86, 96, 98, 99, 100, 107, 108, 188, 197], "out1": [28, 182], "out2": [28, 182], "out_activ": [16, 17, 19, 30, 31, 32, 33, 47, 54, 63, 80, 127, 128, 130, 140, 183, 184, 185, 186, 188, 190, 192], "out_channel": [5, 16, 17, 19, 21, 80, 125, 127, 128, 130, 179, 192], "out_featur": [24, 26, 30, 31, 32, 33, 47, 54, 63, 76, 80, 140, 149, 163, 183, 184, 185, 186, 188, 190, 192, 197], "output": [4, 5, 8, 11, 12, 16, 17, 19, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 46, 47, 51, 53, 54, 55, 63, 64, 65, 66, 76, 79, 80, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 125, 127, 128, 130, 132, 138, 140, 141, 144, 145, 149, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 207, 208], "output_block": [19, 130], "output_channel": [23, 181], "output_devic": [24, 197], "output_shap": [80, 192], "outsid": [5, 24, 125, 197], "over": [4, 100], "overfit_batch": [73, 220], "overhead": [4, 100], "overload": [77, 150], "overrid": [4, 86, 100], "overridden": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "own": [4, 27, 44, 96, 100, 131, 135], "p": [68, 70], "packag": [221, 223], "pad": [14, 16, 111, 127], "pair": [4, 100], "parallel": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "param": [4, 56, 100, 165], "param1": [24, 197], "param2": [24, 197], "paramet": [56, 165], "paramref": [86, 96], "particularli": [4, 24, 26, 100, 163, 197], "pass": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 79, 80, 81, 82, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 160, 163, 164, 171, 172, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "patch": [80, 192], "patch_embedd": [80, 192], "patch_siz": [80, 192], "patchifi": [80, 192], "path": [73, 220], "pattern": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 96, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "per": [4, 100], "perceptron": [54, 140], "perform": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "permut": [4, 100], "permute_target_channel": [4, 100], "pixel": [80, 192], "pl_modul": 121, "place": [4, 24, 26, 100, 163, 197], "plot": 121, "plugin": [73, 220], "point": [24, 26, 163, 197], "pool": [14, 16, 17, 18, 19, 28, 32, 46, 47, 58, 86, 96, 98, 99, 104, 111, 119, 127, 128, 129, 130, 182, 185, 188], "pop": [42, 171], "posit": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 80, 86, 96, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 192, 197], "position_embedding_dim": [5, 125], "positional_embedd": [80, 192], "positionalembed": [34, 80, 133, 192], "possibl": [4, 8, 11, 12, 46, 53, 65, 79, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "postprocess": [17, 128], "precis": [4, 73, 86, 100, 220], "pred": [46, 104], "predict": [4, 24, 46, 100, 104, 197], "predict_step": [4, 100], "prefix": [194, 195, 198], "prepare_data": [86, 96], "prepend": [14, 19, 68, 70, 111, 130, 199], "prepend_dropout": [68, 70, 199], "preprocess": [16, 127], "present": 194, "prevent": [4, 100], "primarili": [4, 24, 26, 100, 163, 197], "print": [4, 27, 44, 47, 100, 131, 135, 188], "probabl": [4, 68, 70, 84, 87, 88, 89, 91, 92, 93, 94, 95, 97, 100], "process": [4, 16, 17, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 47, 54, 73, 76, 80, 86, 96, 100, 127, 128, 130, 140, 149, 163, 178, 179, 180, 181, 183, 184, 185, 186, 188, 192, 197, 220], "processing_spe": 122, "produc": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108], "product": [60, 143], "profil": [73, 220], "prog_bar": [4, 100], "progress": [4, 79, 81, 86, 98, 99, 100, 107, 108], "progress_bar": 122, "progress_bar_finish": 122, "progress_bar_puls": 122, "project": [55, 141, 207, 208, 221], "propag": [29, 51, 66, 75, 132, 138, 145, 148], "properti": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 197, 199], "provid": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "put": [4, 96, 100], "python": [42, 171, 221], "pytorch": [4, 63, 86, 96, 100, 121, 190, 221], "quantil": [46, 104], "queri": [86, 96, 98, 99], "query_and_upd": 96, "query_strategi": [86, 96, 98, 99], "query_train": 96, "query_v": 96, "quickli": [4, 96, 100], "r": 121, "rais": [77, 150], "randint": [30, 31, 32, 33, 47, 183, 184, 185, 186, 188], "randn": [2, 20, 21, 22, 23, 28, 30, 31, 32, 33, 47, 76, 80, 123, 149, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 192], "random": 85, "rank": [4, 100], "rank_zero_onli": [4, 100], "rate": [4, 86, 100], "rather": [24, 26, 163, 197], "ratio": [46, 104], "re": [27, 44, 131, 135], "readi": [4, 24, 26, 100, 163, 197], "real": [86, 199], "receiv": [48, 49, 52, 60, 72, 74, 82, 136, 137, 139, 143, 146, 147, 152], "recip": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "recogn": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "recommend": [4, 96, 100], "recurr": [63, 190], "recurrentneuralnetwork": [63, 190], "reduc": [4, 46, 100, 104], "reduce_fx": [4, 100], "reducelronplateau": [4, 86, 100], "reduct": [4, 100], "refer": [4, 16, 17, 19, 100, 127, 128, 130], "refresh_r": 122, "regist": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "register_after_build_hook": [24, 197], "register_after_init_hook": [24, 197], "register_before_build_hook": [24, 197], "register_comput": [36, 164], "register_styl": [24, 197], "rel": [34, 133], "relev": [24, 26, 163, 197], "reload": [86, 96], "reload_dataloaders_every_n_epoch": [73, 86, 96, 220], "relu": [4, 16, 17, 19, 24, 26, 54, 63, 100, 127, 128, 130, 140, 163, 169, 190, 197], "remain": [24, 197], "remov": [42, 70, 171, 199], "remove_derived_configur": 194, "remove_dropout": [70, 199], "remove_lay": [14, 111], "remove_pool": [14, 111], "remove_upsampl": [14, 111], "reparameter": [79, 107], "replac": [4, 24, 34, 100, 133, 197, 199], "replacementmodul": [24, 197], "repres": [24, 197, 215], "represent": [27, 44, 131, 135], "requir": [4, 79, 81, 86, 98, 99, 100, 107, 108], "reset": 96, "reset_metr": [4, 100], "reset_model": 96, "residu": [21, 179], "respect": [5, 125], "restor": [4, 100], "result": 215, "retriev": [24, 197], "return": [8, 11, 12, 14, 18, 29, 34, 36, 45, 46, 51, 53, 55, 63, 64, 65, 66, 68, 73, 79, 81, 86, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 118, 121, 129, 132, 133, 138, 141, 144, 145, 164, 190, 207, 208, 220], "return_attn": [55, 141, 207, 208], "reusabl": 221, "richprogressbarthem": 122, "rigid": 221, "rnn": [63, 68, 190], "rnn_type": [63, 190], "root": [24, 197], "root_modul": [24, 197], "run": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 158, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "run_with_dummy_data": 68, "safe": 155, "sake": [5, 125], "same": [3, 4, 8, 11, 12, 24, 26, 34, 46, 53, 55, 65, 79, 81, 86, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 124, 133, 141, 163, 197, 207, 208], "sampl": [85, 86, 96], "sample_img": [4, 96, 100], "sampler": [86, 96], "saniti": 96, "satisfi": 199, "scale": [4, 100], "schedul": [4, 86, 100], "score": [46, 84, 87, 88, 89, 91, 92, 93, 94, 95, 97, 104], "scratch": 96, "second": [4, 24, 86, 100, 197], "section": [86, 96, 223], "see": [4, 86, 96, 100], "seek": 221, "select": [24, 30, 31, 32, 33, 47, 183, 184, 185, 186, 188, 197], "selector": [24, 30, 31, 32, 33, 47, 183, 184, 185, 186, 188, 197], "self": [4, 5, 14, 16, 17, 24, 46, 55, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 111, 121, 125, 127, 128, 141, 154, 155, 173, 197, 207, 208, 214, 215, 219], "sender": [74, 147], "separ": [28, 182, 199], "seq": [63, 190], "seq_len": [76, 149], "sequenc": [4, 63, 80, 100, 190, 192], "sequentialblock": [37, 38, 39, 40, 41, 43, 58, 62, 75, 113, 114, 115, 116, 117, 119, 120, 134, 148, 199], "serv": [4, 24, 26, 100, 163, 197], "set": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 96, 100, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 215], "set_dropout": [70, 199], "set_for_tag": 194, "set_input_map": [9, 24, 42, 110, 171, 197, 199], "set_output_map": [9, 24, 42, 110, 171, 197, 199], "set_root_modul": [24, 197], "setup": [4, 24, 26, 86, 96, 100, 163, 197], "shape": [4, 16, 17, 19, 20, 21, 22, 23, 24, 28, 30, 31, 32, 33, 36, 46, 47, 54, 76, 80, 100, 104, 127, 128, 130, 140, 149, 164, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 192, 197, 214, 215, 216, 217, 218], "shapeop": [203, 209, 211, 212, 213], "shortcut": [14, 45, 111, 118], "should": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 104, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 219], "shown": [4, 86, 100], "sigmoid": [4, 16, 17, 19, 24, 26, 63, 100, 127, 128, 130, 163, 190, 197], "signal": [36, 164], "signatur": [24, 197], "signific": [4, 100], "silent": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "similar": [4, 86, 100], "simpl": [63, 190], "simpli": [4, 86, 100], "sinc": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "singl": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 96, 100, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "size": [4, 19, 24, 28, 30, 31, 32, 33, 34, 46, 47, 76, 80, 86, 100, 104, 130, 133, 149, 182, 183, 184, 185, 186, 188, 192, 197], "skip": [4, 41, 43, 79, 81, 86, 96, 98, 99, 100, 107, 108, 117, 134], "slice": [42, 171], "so": [4, 96, 100], "softmax": [54, 63, 140, 190], "some": [4, 79, 81, 86, 98, 99, 100, 107, 108], "some_other_valu": [24, 197], "some_valu": [24, 197], "someth": [4, 79, 81, 86, 98, 99, 100, 107, 108, 121], "sourc": [194, 195, 198], "source_depth": [195, 198], "space": [23, 181], "spawn": [4, 100], "special": [4, 79, 81, 86, 98, 99, 100, 107, 108], "specif": [4, 16, 17, 19, 24, 30, 31, 32, 33, 47, 54, 70, 79, 80, 81, 85, 86, 98, 99, 100, 107, 108, 127, 128, 130, 140, 183, 184, 185, 186, 188, 192, 197, 221], "specifi": [3, 4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 96, 100, 110, 113, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "split": [86, 96], "squar": [80, 192], "stack": 121, "state": [4, 24, 86, 96, 100, 197], "static": [4, 46, 100, 104], "std": 170, "step": [4, 5, 24, 26, 79, 81, 86, 96, 98, 99, 100, 107, 108, 121, 125, 163, 197], "step_histori": 121, "steps_per_epoch": [4, 100], "still": [5, 125], "stop": [4, 86, 100], "store": [24, 157, 197], "str": [3, 4, 9, 13, 24, 27, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 56, 58, 62, 68, 70, 73, 75, 100, 110, 113, 114, 115, 116, 117, 119, 120, 124, 126, 131, 134, 135, 148, 164, 165, 169, 171, 183, 184, 185, 186, 188, 194, 195, 197, 198, 199, 220], "strategi": [4, 73, 86, 98, 99, 100, 220], "strict": [4, 86, 100, 199], "stride": [14, 16, 17, 19, 111, 127, 128, 130], "string": [5, 9, 13, 16, 17, 19, 21, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 104, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 131, 132, 134, 135, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "structur": [4, 63, 100, 190], "style": [24, 197], "subclass": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 163, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "subsequ": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "sum": [4, 49, 82, 96, 100, 137, 152], "summari": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 188, 190, 192, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220], "super": [4, 24, 79, 81, 86, 98, 99, 100, 107, 108, 121, 197], "supervis": [46, 104], "support": [4, 46, 63, 79, 81, 86, 98, 99, 100, 104, 107, 108, 190], "swap": [24, 197], "switch": [4, 79, 81, 86, 96, 98, 99, 100, 107, 108], "sync": [4, 100], "sync_batchnorm": [73, 220], "sync_dist": [4, 100], "sync_dist_group": [4, 100], "system": 221, "t": [4, 5, 25, 42, 57, 69, 96, 100, 121, 125, 171, 172, 173, 174, 175], "tag": [24, 194, 195, 197, 198], "take": [2, 3, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 74, 76, 77, 78, 80, 82, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 194, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "take_subconfig": 194, "tanh": [63, 190], "target": [4, 24, 100, 168, 169, 170, 194, 197], "tel": [76, 149], "tell": [4, 96, 100], "templat": [16, 17, 19, 30, 31, 32, 33, 47, 54, 80, 127, 128, 130, 140, 183, 184, 185, 186, 188, 192], "tensor": [2, 4, 8, 16, 17, 19, 20, 21, 22, 23, 24, 28, 30, 31, 32, 33, 36, 46, 47, 54, 55, 63, 76, 79, 80, 81, 86, 96, 98, 99, 100, 101, 104, 107, 108, 123, 127, 128, 130, 140, 141, 149, 164, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 204, 207, 208, 215], "test": [4, 80, 96, 100, 192], "test_acc": [4, 96, 100], "test_dataload": 96, "test_loss": [4, 96, 100], "test_preprocess": [4, 46, 100, 104], "test_step": [4, 96, 100], "text": [4, 96, 100], "than": [24, 26, 163, 197], "thei": 199, "them": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 86, 100, 109, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "theme": 122, "thi": [2, 3, 4, 5, 6, 7, 9, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 54, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 72, 75, 76, 77, 79, 80, 81, 82, 86, 96, 98, 99, 100, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 160, 163, 164, 171, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 194, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 215, 219], "thing": [4, 79, 81, 86, 98, 99, 100, 107, 108], "threshhold": [46, 104], "threshold": [46, 104], "thu": [4, 86, 100], "time": [5, 36, 122, 125, 164], "timedelta": [73, 220], "top": [80, 192], "torch": [2, 4, 8, 11, 12, 14, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 46, 47, 53, 63, 65, 76, 79, 80, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 121, 123, 149, 163, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197], "torch_geometr": [3, 124], "torchmetr": [4, 100], "torchvis": [4, 96, 100], "tpu": [4, 79, 81, 86, 98, 99, 100, 107, 108], "track": 121, "train": [4, 46, 73, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 121, 220, 221], "train_data": [4, 100], "train_dataload": [86, 96, 121], "train_loss": [4, 100], "train_loss_epoch": 121, "train_preprocess": [4, 46, 100, 104], "trainabl": [46, 104], "trainer": [4, 86, 96, 100, 121], "training_epoch_mean": 121, "training_step": [4, 79, 81, 86, 98, 99, 100, 107, 108, 121], "training_step_output": 121, "transform": [29, 46, 51, 66, 73, 75, 76, 80, 104, 132, 138, 145, 148, 149, 192, 220], "transform_data": [46, 104], "transformer_encod": [80, 192], "transformerencoderlay": [80, 192], "transpos": [14, 23, 111, 181], "treshhold": [46, 104], "tri": [86, 96], "trigger": [4, 24, 26, 100, 163, 197], "trim_deriv": 194, "trim_tag": 194, "true": [4, 5, 14, 17, 19, 24, 28, 55, 63, 73, 86, 100, 111, 125, 128, 130, 141, 169, 182, 190, 197, 199, 207, 208, 220], "try_attach_detached_configur": 194, "tupl": [3, 4, 14, 19, 24, 27, 28, 86, 100, 111, 124, 130, 131, 168, 169, 170, 182, 194, 195, 197, 198, 214], "two": [3, 4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 100, 110, 113, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 183, 184, 185, 186, 188, 190, 197], "type": [14, 25, 36, 63, 111, 164, 168, 169, 170, 175, 190, 199], "typic": [63, 190], "unchang": [24, 197], "undefin": [4, 100], "unet": [5, 125], "union": [24, 63, 190, 197], "uniqu": [4, 100], "unit": [4, 16, 17, 19, 30, 31, 32, 33, 47, 54, 76, 80, 86, 100, 127, 128, 130, 140, 149, 183, 184, 185, 186, 188, 192], "unless": [86, 96], "unlik": [4, 24, 26, 100, 163, 197], "up": 121, "updat": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 86, 96, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 194, 197], "upsampl": [14, 16, 18, 40, 111, 116, 127, 129], "us": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197, 215], "use_distributed_sampl": [73, 220], "user": [4, 24, 100, 197], "usual": 215, "util": [4, 24, 96, 100, 197], "v": [46, 104, 194], "val": [4, 96, 100, 121], "val_acc": [4, 96, 100], "val_batch_s": [4, 100], "val_check_interv": [73, 220], "val_data": [4, 100], "val_dataload": 121, "val_loss": [4, 86, 96, 100], "val_preprocess": [4, 46, 100, 104], "val_steps_per_epoch": [4, 100], "valid": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 96, 100, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "validate_after_build": [15, 112], "validation_step": [4, 96, 100], "valu": [4, 5, 9, 13, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 58, 62, 63, 64, 66, 70, 75, 86, 87, 96, 100, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 132, 134, 138, 144, 145, 148, 163, 164, 171, 190, 194, 195, 197, 198, 215], "value1": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "value2": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "valueerror": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 68, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "var": [4, 100], "variabl": [216, 217, 218], "variou": [63, 190], "view": 210, "vision": [80, 192], "w": [46, 104, 121], "want": 96, "warn": [4, 73, 86, 100, 220], "we": [4, 96, 100], "weight": [24, 46, 82, 104, 152, 168, 197], "well": [4, 100], "what": [4, 86, 100], "whatev": [4, 8, 11, 12, 46, 53, 65, 79, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "when": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 77, 79, 81, 86, 96, 98, 99, 100, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 150, 163, 164, 171, 179, 190, 197], "where": [24, 26, 34, 46, 104, 133, 163, 197], "wherea": [4, 86, 100], "whether": [4, 22, 23, 70, 100, 180, 181, 199], "which": [4, 24, 26, 46, 68, 70, 79, 81, 86, 96, 98, 99, 100, 104, 107, 108, 163, 197], "while": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 34, 36, 41, 43, 44, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 100, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "white": 122, "whose": [4, 25, 86, 100, 175], "width": [46, 104], "wise": [2, 3, 123, 124], "within": [2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 34, 36, 41, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 63, 64, 66, 68, 69, 70, 72, 76, 77, 80, 82, 100, 104, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 160, 163, 164, 172, 174, 177, 179, 180, 181, 182, 188, 190, 192, 197, 201, 202, 203, 204, 205, 206, 209, 211, 212, 213, 219], "within_loss": [46, 104], "within_loss_weight": [46, 104], "without": [4, 86, 100], "won": [4, 100], "work": [4, 24, 26, 86, 100, 163, 197], "wrapper": [24, 197], "write": [4, 100], "x": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 41, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 160, 164, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 219], "x1": [81, 108], "x2": [81, 108], "x_1": 90, "x_2": 90, "xdoctest": [4, 100], "y": [3, 4, 5, 8, 11, 12, 20, 21, 22, 23, 46, 53, 55, 79, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 124, 125, 141, 178, 179, 180, 181, 207, 208, 215], "y_1": 90, "y_2": 90, "y_hat": [4, 8, 11, 12, 46, 53, 79, 81, 100, 101, 102, 103, 104, 105, 107, 108], "y_pred": [46, 104], "yield": [4, 100], "you": [4, 8, 11, 12, 27, 44, 46, 53, 65, 79, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 131, 135, 223], "your": [4, 8, 11, 12, 24, 27, 44, 46, 53, 65, 79, 81, 86, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 131, 135, 197], "yourself": [4, 86, 96, 100], "yscale": 121, "z": [4, 79, 81, 86, 98, 99, 100, 107, 108]}, "titles": ["Adam", "AdamW", "Add", "AddDict", "Application", "AttentionUNet", "BackboneResnet18", "BaseResidual", "BinaryClassifier", "Block", "Cat", "CategoricalClassifier", "Classifier", "CombineLayerActivation", "Conv2dBlock", "Conv2dResidual", "ConvolutionalDecoder2d", "ConvolutionalEncoder2d", "ConvolutionalEncoderDecoder2d", "ConvolutionalNeuralNetwork", "CycleGANDiscriminator", "CycleGANResnetGenerator", "DCGANDiscriminator", "DCGANGenerator", "DeeplayModule", "ExtendedConstructorMeta", "External", "FromDict", "GlobalMeanPool", "GraphConvolutionalNeuralNetwork", "GraphToEdgeMAGIK", "GraphToEdgeMPM", "GraphToGlobalMPM", "GraphToNodeMPM", "IndexedPositionalEmbedding", "LargeMLP", "Layer", "LayerActivation", "LayerActivationNormalization", "LayerActivationNormalizationDropout", "LayerActivationNormalizationUpsample", "LayerDropoutSkipNormalization", "LayerList", "LayerSkip", "LearnableDistancewWeighting", "LinearBlock", "LodeSTAR", "MPM", "Max", "Mean", "MediumMLP", "MessagePassingNeuralNetwork", "Min", "MultiLabelClassifier", "MultiLayerPerceptron", "MultiheadSelfAttention", "Optimizer", "Parallel", "PoolLayerActivationNormalization", "PositionalEmbedding", "Prod", "RMSprop", "RecurrentBlock", "RecurrentModel", "RecurrentNeuralNetwork", "Regressor", "ResidualMessagePassingNeuralNetwork", "SGD", "Sequence1dBlock", "Sequential", "SequentialBlock", "SmallMLP", "Sum", "Trainer", "Transform", "TransformPropagateUpdate", "TransformerEncoderLayer", "UNet2d", "Update", "VariationalAutoEncoder", "ViT", "WassersteinAutoEncoder", "WeightedSum", "XLargeMLP", "ActiveLearningCriterion", "ActiveLearningDataset", "AdversarialStrategy", "Constant", "Entropy", "FractionCriterion", "JointDataset", "L1Upper", "L2Upper", "LeastConfidence", "Margin", "ProductCriterion", "Strategy", "SumCriterion", "UncertaintyStrategy", "UniformStrategy", "Application", "BinaryClassifier", "CategoricalClassifier", "Classifier", "LodeSTAR", "MultiLabelClassifier", "Regressor", "VariationalAutoEncoder", "WassersteinAutoEncoder", "BaseResidual", "Block", "Conv2dBlock", "Conv2dResidual", "LayerActivation", "LayerActivationNormalization", "LayerActivationNormalizationDropout", "LayerActivationNormalizationUpsample", "LayerSkip", "LinearBlock", "PoolLayerActivationNormalization", "RecurrentBlock", "LogHistory", "RichProgressBar", "Add", "AddDict", "AttentionUNet", "CombineLayerActivation", "ConvolutionalDecoder2d", "ConvolutionalEncoder2d", "ConvolutionalEncoderDecoder2d", "ConvolutionalNeuralNetwork", "FromDict", "GraphConvolutionalNeuralNetwork", "IndexedPositionalEmbedding", "LayerDropoutSkipNormalization", "LearnableDistancewWeighting", "Max", "Mean", "MessagePassingNeuralNetwork", "Min", "MultiLayerPerceptron", "MultiheadSelfAttention", "PositionalEmbedding", "Prod", "RecurrentNeuralNetwork", "ResidualMessagePassingNeuralNetwork", "Sum", "Transform", "TransformPropagateUpdate", "TransformerEncoderLayer", "UNet2d", "Update", "WeightedSum", "dense_laplacian_normalization", "sparse_laplacian_normalization", "Callback", "after_build", "after_init", "before_build", "stateful", "dense_laplacian_normalization", "Adam", "AdamW", "External", "Layer", "Optimizer", "RMSprop", "SGD", "Constant", "Kaiming", "Normal", "LayerList", "Parallel", "ReferringLayerList", "Sequential", "ExtendedConstructorMeta", "not_top_level", "BackboneResnet18", "CycleGANDiscriminator", "CycleGANResnetGenerator", "DCGANDiscriminator", "DCGANGenerator", "GlobalMeanPool", "GraphToEdgeMAGIK", "GraphToEdgeMPM", "GraphToGlobalMPM", "GraphToNodeMPM", "LargeMLP", "MPM", "MediumMLP", "RecurrentModel", "SmallMLP", "ViT", "XLargeMLP", "Config", "ConfigItem", "ConfigItemList", "DeeplayModule", "DetachedConfigItem", "Selection", "builder", "Add", "Cat", "Flatten", "FromLogs", "Lambda", "MergeOp", "MultiheadCrossAttention", "MultiheadSelfAttention", "Permute", "Reshape", "Squeeze", "Unsqueeze", "View", "Computed", "Variable", "reverse_two_operation", "two_operation", "unary_operation", "sparse_laplacian_normalization", "Trainer", "deeplay documentation", "Documentation", "Documentation", "deeplay.activelearning Package", "deeplay.applications Package", "deeplay.blocks Package", "deeplay.callbacks Package", "deeplay.components Package", "deeplay.decorators Module", "deeplay.external Package", "deeplay.initializers Package", "deeplay.list Module", "deeplay.meta Module", "deeplay.models Package", "deeplay.module Module", "deeplay.ops Package", "deeplay.shapes Module", "deeplay.trainer Module"], "titleterms": {"activelearn": 224, "activelearningcriterion": 84, "activelearningdataset": 85, "adam": [0, 161], "adamw": [1, 162], "add": [2, 123, 201], "adddict": [3, 124], "addit": [16, 17, 19, 127, 128, 130], "adversarialstrategi": 86, "after_build": 156, "after_init": 157, "applic": [4, 100, 225], "attentionunet": [5, 125], "attribut": [24, 197], "backboneresnet18": [6, 177], "baseresidu": [7, 109], "before_build": 158, "binaryclassifi": [8, 101], "block": [9, 110, 226], "builder": 200, "callback": [155, 227], "cat": [10, 202], "categoricalclassifi": [11, 102], "class": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "classifi": [12, 103], "combinelayeractiv": [13, 126], "compon": 228, "comput": 214, "config": 194, "configitem": 195, "configitemlist": 196, "configur": [16, 17, 19, 30, 31, 32, 33, 47, 54, 63, 76, 80, 127, 128, 130, 140, 149, 183, 184, 185, 186, 188, 190, 192], "constant": [87, 168], "constraint": [3, 16, 17, 19, 22, 23, 28, 30, 31, 32, 33, 47, 80, 124, 127, 128, 130, 180, 181, 182, 183, 184, 185, 186, 188, 192], "content": [221, 223], "conv2dblock": [14, 111], "conv2dresidu": [15, 112], "convolutionaldecoder2d": [16, 127], "convolutionalencoder2d": [17, 128], "convolutionalencoderdecoder2d": [18, 129], "convolutionalneuralnetwork": [19, 130], "cyclegandiscrimin": [20, 178], "cycleganresnetgener": [21, 179], "dcgandiscrimin": [22, 180], "dcgangener": [23, 181], "decor": 229, "deeplai": [221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "deeplaymodul": [24, 197], "dense_laplacian_norm": [153, 160], "detachedconfigitem": 198, "document": [221, 222, 223], "entropi": 88, "evalu": [16, 17, 19, 54, 76, 127, 128, 130, 140, 149], "exampl": [2, 4, 5, 9, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 47, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 80, 100, 110, 113, 114, 115, 116, 117, 119, 120, 123, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 197, 215], "extendedconstructormeta": [25, 175], "extern": [26, 163, 230], "flatten": 203, "fractioncriterion": 89, "fromdict": [27, 131], "fromlog": 204, "function": [229, 233, 235, 237], "globalmeanpool": [28, 182], "graphconvolutionalneuralnetwork": [29, 132], "graphtoedgemagik": [30, 183], "graphtoedgempm": [31, 184], "graphtoglobalmpm": [32, 185], "graphtonodempm": [33, 186], "indexedpositionalembed": [34, 133], "initi": 231, "jointdataset": 90, "kaim": 169, "l1upper": 91, "l2upper": 92, "lambda": 205, "largemlp": [35, 187], "layer": [36, 164], "layeractiv": [37, 113], "layeractivationnorm": [38, 114], "layeractivationnormalizationdropout": [39, 115], "layeractivationnormalizationupsampl": [40, 116], "layerdropoutskipnorm": [41, 134], "layerlist": [42, 171], "layerskip": [43, 117], "learnabledistancewweight": [44, 135], "leastconfid": 93, "linearblock": [45, 118], "list": 232, "lodestar": [46, 104], "loghistori": 121, "margin": 94, "max": [48, 136], "mean": [49, 137], "mediummlp": [50, 189], "mergeop": 206, "messagepassingneuralnetwork": [51, 138], "meta": 233, "method": [24, 63, 190, 197], "min": [52, 139], "model": 234, "modul": [229, 232, 233, 235, 237, 238], "mpm": [47, 188], "multiheadcrossattent": 207, "multiheadselfattent": [55, 141, 208], "multilabelclassifi": [53, 105], "multilayerperceptron": [54, 140], "normal": 170, "not_top_level": 176, "note": [16, 17, 19, 63, 127, 128, 130, 190], "op": 236, "optim": [56, 165], "packag": [224, 225, 226, 227, 228, 230, 231, 234, 236], "parallel": [57, 172], "paramet": [3, 4, 5, 9, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 51, 54, 58, 62, 63, 64, 66, 68, 70, 75, 76, 80, 100, 104, 110, 113, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 192, 197, 199, 215], "permut": 209, "poollayeractivationnorm": [58, 119], "positionalembed": [59, 142], "prod": [60, 143], "productcriterion": 95, "properti": [63, 190], "rais": [5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 68, 70, 75, 76, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "recurrentblock": [62, 120], "recurrentmodel": [63, 190], "recurrentneuralnetwork": [64, 144], "referringlayerlist": 173, "regressor": [65, 106], "reshap": 210, "residualmessagepassingneuralnetwork": [66, 145], "return": [4, 16, 17, 19, 20, 21, 22, 23, 24, 26, 54, 76, 80, 100, 127, 128, 130, 140, 149, 163, 178, 179, 180, 181, 192, 197, 199, 215], "reverse_two_oper": 216, "richprogressbar": 122, "rmsprop": [61, 166], "select": 199, "sequence1dblock": 68, "sequenti": [69, 174], "sequentialblock": 70, "sgd": [67, 167], "shape": 237, "shorthand": [21, 22, 23, 54, 76, 140, 149, 179, 180, 181], "smallmlp": [71, 191], "sparse_laplacian_norm": [154, 219], "squeez": 211, "state": 159, "strategi": 96, "sum": [72, 146], "sumcriterion": 97, "trainer": [73, 220, 238], "transform": [74, 147], "transformerencoderlay": [76, 149], "transformpropagateupd": [75, 148], "two_oper": 217, "unary_oper": 218, "uncertaintystrategi": 98, "unet2d": [77, 150], "uniformstrategi": 99, "unsqueez": 212, "updat": [78, 151], "usag": [4, 5, 9, 13, 16, 17, 19, 21, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 51, 54, 58, 62, 63, 64, 66, 70, 75, 76, 100, 110, 113, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 130, 132, 134, 138, 140, 144, 145, 148, 149, 163, 164, 171, 179, 190, 197], "valu": [16, 17, 19, 20, 21, 22, 23, 54, 76, 80, 127, 128, 130, 140, 149, 178, 179, 180, 181, 192], "variabl": 215, "variationalautoencod": [79, 107], "view": 213, "vit": [80, 192], "wassersteinautoencod": [81, 108], "weightedsum": [82, 152], "xlargemlp": [83, 193]}})