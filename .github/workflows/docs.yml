name: Update Documentation

on:
  release:
    types:
      - published

jobs:
  update-docs:
    name: Update Documentation on Release
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the docs branch
      - name: Checkout docs branch
        uses: actions/checkout@v3
        with:
          ref: docs

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Pull the release code into a separate directory
      - name: Checkout release code
        uses: actions/checkout@v3
        with:
          path: release-code
          ref: ${{ github.event.release.tag_name }}

      # Step 5: Update switcher.json
      - name: Update switcher.json
        run: |
          VERSION=${{ github.event.release.tag_name }}
          SWITCHER_FILE=static/switcher.json
          jq --arg version "$VERSION" \
             '. |= [{"name": $version, "version": $version, "url": "https://deeptrackai.github.io/deeplay/\($version)/"}] + .' \
             $SWITCHER_FILE > temp.json && mv temp.json $SWITCHER_FILE

      # Step 6: Build documentation
      - name: Build documentation
        env:
          SPHINX_APIDOC_DIR: release-code
        run: make html

      # Step 7: Copy built HTML to `docs/latest` and `docs/{version}`
      - name: Copy built HTML
        run: |
          VERSION=${{ github.event.release.tag_name }}
          mkdir -p docs/latest
          mkdir -p docs/$VERSION
          cp -r _build/html/* docs/latest/
          cp -r _build/html/* docs/$VERSION/

      # Step 8: Commit and push changes
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/latest docs/$VERSION static/switcher.json
          git commit -m "Update docs for release ${{ github.event.release.tag_name }}"
          git push
